{"version":3,"sources":["./node_modules/ngx-paypal/fesm5/ngx-paypal.js","./src/app/modules/sales/invoices/components/paypal-payment/paypal-payment.component.html","./src/app/modules/sales/invoices/components/stripe-payment/stripe-payment.component.html","./src/app/modules/sales/invoices/pages/invoice-create/invoice-create.component.html","./src/app/modules/sales/invoices/pages/invoice-edit/invoice-edit.component.html","./src/app/modules/sales/invoices/pages/invoice-list/invoice-list.component.html","./src/app/modules/sales/invoices/pages/invoice-view/invoice-view.component.html","./src/app/core/services/client.service.ts","./src/app/core/services/invoice.service.ts","./src/app/core/services/project.service.ts","./src/app/modules/sales/invoices/components/paypal-payment/paypal-payment.component.scss","./src/app/modules/sales/invoices/components/paypal-payment/paypal-payment.component.ts","./src/app/modules/sales/invoices/components/stripe-payment/stripe-payment.component.scss","./src/app/modules/sales/invoices/components/stripe-payment/stripe-payment.component.ts","./src/app/modules/sales/invoices/invoices-routing.module.ts","./src/app/modules/sales/invoices/invoices.module.ts","./src/app/modules/sales/invoices/pages/invoice-create/invoice-create.component.scss","./src/app/modules/sales/invoices/pages/invoice-create/invoice-create.component.ts","./src/app/modules/sales/invoices/pages/invoice-edit/invoice-edit.component.scss","./src/app/modules/sales/invoices/pages/invoice-edit/invoice-edit.component.ts","./src/app/modules/sales/invoices/pages/invoice-list/invoice-list.component.scss","./src/app/modules/sales/invoices/pages/invoice-list/invoice-list.component.ts","./src/app/modules/sales/invoices/pages/invoice-view/invoice-view.component.scss","./src/app/modules/sales/invoices/pages/invoice-view/invoice-view.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC6G;AAC7H;AACE;;AAEjC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,qCAAqC,EAAE;AACvC,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,oDAAM;AACtB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,sCAAsC,sDAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,wBAAwB;AAC/C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,sDAAsD;AACtD,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,uCAAuC,EAAE;AAC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","file":"modules-sales-invoices-invoices-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Injectable, NgZone, Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, ViewChild, EventEmitter, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { __spread } from 'tslib';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ScriptService = /** @class */ (function () {\r\n    function ScriptService(zone) {\r\n        this.zone = zone;\r\n    }\r\n    /**\r\n     * @param {?} url\r\n     * @param {?} globalVar\r\n     * @param {?} onReady\r\n     * @return {?}\r\n     */\r\n    ScriptService.prototype.registerScript = /**\r\n     * @param {?} url\r\n     * @param {?} globalVar\r\n     * @param {?} onReady\r\n     * @return {?}\r\n     */\r\n    function (url, globalVar, onReady) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var existingGlobalVar = ((/** @type {?} */ (window)))[globalVar];\r\n        if (existingGlobalVar) {\r\n            // global variable is present = script was already loaded\r\n            this.zone.run((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                onReady(existingGlobalVar);\r\n            }));\r\n            return;\r\n        }\r\n        // prepare script elem\r\n        /** @type {?} */\r\n        var scriptElem = document.createElement('script');\r\n        scriptElem.id = this.getElemId(globalVar);\r\n        scriptElem.innerHTML = '';\r\n        scriptElem.onload = (/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.zone.run((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                onReady(((/** @type {?} */ (window)))[globalVar]);\r\n            }));\r\n        });\r\n        scriptElem.src = url;\r\n        scriptElem.async = true;\r\n        scriptElem.defer = true;\r\n        // add script to header\r\n        document.getElementsByTagName('head')[0].appendChild(scriptElem);\r\n    };\r\n    /**\r\n     * @param {?} globalVar\r\n     * @return {?}\r\n     */\r\n    ScriptService.prototype.cleanup = /**\r\n     * @param {?} globalVar\r\n     * @return {?}\r\n     */\r\n    function (globalVar) {\r\n        // remove script from DOM\r\n        /** @type {?} */\r\n        var scriptElem = document.getElementById(this.getElemId(globalVar));\r\n        if (scriptElem) {\r\n            scriptElem.remove();\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} globalVar\r\n     * @return {?}\r\n     */\r\n    ScriptService.prototype.getElemId = /**\r\n     * @private\r\n     * @param {?} globalVar\r\n     * @return {?}\r\n     */\r\n    function (globalVar) {\r\n        return \"ngx-paypal-script-elem-\" + globalVar;\r\n    };\r\n    ScriptService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    ScriptService.ctorParameters = function () { return [\r\n        { type: NgZone }\r\n    ]; };\r\n    return ScriptService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar PayPalScriptService = /** @class */ (function () {\r\n    function PayPalScriptService(scriptService) {\r\n        this.scriptService = scriptService;\r\n        this.paypalWindowName = 'paypal';\r\n    }\r\n    /**\r\n     * @param {?} config\r\n     * @param {?} onReady\r\n     * @return {?}\r\n     */\r\n    PayPalScriptService.prototype.registerPayPalScript = /**\r\n     * @param {?} config\r\n     * @param {?} onReady\r\n     * @return {?}\r\n     */\r\n    function (config, onReady) {\r\n        this.scriptService.registerScript(this.getUrlForConfig(config), this.paypalWindowName, onReady);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PayPalScriptService.prototype.destroyPayPalScript = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.scriptService.cleanup(this.paypalWindowName);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    PayPalScriptService.prototype.getUrlForConfig = /**\r\n     * @private\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        /** @type {?} */\r\n        var params = [\r\n            {\r\n                name: 'client-id',\r\n                value: config.clientId\r\n            }\r\n        ];\r\n        if (config.currency) {\r\n            params.push({\r\n                name: 'currency',\r\n                value: config.currency\r\n            });\r\n        }\r\n        if (config.commit) {\r\n            params.push({\r\n                name: 'commit',\r\n                value: config.commit\r\n            });\r\n        }\r\n        if (config.extraParams) {\r\n            params.push.apply(params, __spread(config.extraParams));\r\n        }\r\n        return \"https://www.paypal.com/sdk/js\" + this.getQueryString(params);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} queryParams\r\n     * @return {?}\r\n     */\r\n    PayPalScriptService.prototype.getQueryString = /**\r\n     * @private\r\n     * @param {?} queryParams\r\n     * @return {?}\r\n     */\r\n    function (queryParams) {\r\n        /** @type {?} */\r\n        var queryString = '';\r\n        for (var i = 0; i < queryParams.length; i++) {\r\n            /** @type {?} */\r\n            var queryParam = queryParams[i];\r\n            if (i === 0) {\r\n                queryString += '?';\r\n            }\r\n            else {\r\n                queryString += '&';\r\n            }\r\n            queryString += queryParam.name + \"=\" + queryParam.value;\r\n        }\r\n        return queryString;\r\n    };\r\n    PayPalScriptService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    PayPalScriptService.ctorParameters = function () { return [\r\n        { type: ScriptService }\r\n    ]; };\r\n    return PayPalScriptService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxPaypalComponent = /** @class */ (function () {\r\n    function NgxPaypalComponent(paypalScriptService, cdr, ngZone) {\r\n        this.paypalScriptService = paypalScriptService;\r\n        this.cdr = cdr;\r\n        this.ngZone = ngZone;\r\n        /**\r\n         * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n         * sharing base configuration. In such a case only a single component may register script.\r\n         */\r\n        this.registerScript = true;\r\n        /**\r\n         * Emitted when paypal script is loaded\r\n         */\r\n        this.scriptLoaded = new EventEmitter();\r\n        this.ngUnsubscribe = new Subject();\r\n        /**\r\n         * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n         */\r\n        this.initializePayPal = true;\r\n    }\r\n    Object.defineProperty(NgxPaypalComponent.prototype, \"payPalButtonContainer\", {\r\n        set: /**\r\n         * @param {?} content\r\n         * @return {?}\r\n         */\r\n        function (content) {\r\n            this.payPalButtonContainerElem = content;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    NgxPaypalComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        var _this = this;\r\n        if (!this.payPalButtonContainerId) {\r\n            this.payPalButtonContainerId = this.generateElementId();\r\n        }\r\n        // first time config setup\r\n        /** @type {?} */\r\n        var config = this.config;\r\n        if (changes.config.isFirstChange()) {\r\n            if (config && this.registerScript) {\r\n                this.initPayPalScript(config, (/**\r\n                 * @param {?} payPal\r\n                 * @return {?}\r\n                 */\r\n                function (payPal) {\r\n                    // store reference to paypal global script\r\n                    _this.payPal = payPal;\r\n                    _this.doPayPalCheck();\r\n                }));\r\n            }\r\n        }\r\n        // changes to config\r\n        if (!changes.config.isFirstChange()) {\r\n            this.reinitialize(config);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxPaypalComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.paypalScriptService.destroyPayPalScript();\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxPaypalComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.doPayPalCheck();\r\n    };\r\n    /**\r\n     * @param {?} payPal\r\n     * @return {?}\r\n     */\r\n    NgxPaypalComponent.prototype.customInit = /**\r\n     * @param {?} payPal\r\n     * @return {?}\r\n     */\r\n    function (payPal) {\r\n        this.payPal = payPal;\r\n        this.doPayPalCheck();\r\n    };\r\n    /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    NgxPaypalComponent.prototype.reinitialize = /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        var _this = this;\r\n        this.config = config;\r\n        this.payPal = undefined;\r\n        this.paypalScriptService.destroyPayPalScript();\r\n        this.payPalButtonContainerId = this.generateElementId();\r\n        this.initializePayPal = true;\r\n        if (this.payPalButtonContainerElem) {\r\n            while (this.payPalButtonContainerElem.nativeElement.firstChild) {\r\n                this.payPalButtonContainerElem.nativeElement.removeChild(this.payPalButtonContainerElem.nativeElement.firstChild);\r\n            }\r\n        }\r\n        this.cdr.detectChanges();\r\n        if (this.config) {\r\n            if (!this.payPal) {\r\n                this.initPayPalScript(this.config, (/**\r\n                 * @param {?} payPal\r\n                 * @return {?}\r\n                 */\r\n                function (payPal) {\r\n                    // store reference to paypal global script\r\n                    _this.payPal = payPal;\r\n                    _this.doPayPalCheck();\r\n                }));\r\n            }\r\n            else {\r\n                this.doPayPalCheck();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxPaypalComponent.prototype.doPayPalCheck = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.initializePayPal && this.config && this.payPal && this.payPalButtonContainerElem) {\r\n            // make sure that id is also set\r\n            if (this.payPalButtonContainerElem.nativeElement.id) {\r\n                this.initializePayPal = false;\r\n                this.initPayPal(this.config, this.payPal);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} config\r\n     * @param {?} initPayPal\r\n     * @return {?}\r\n     */\r\n    NgxPaypalComponent.prototype.initPayPalScript = /**\r\n     * @private\r\n     * @param {?} config\r\n     * @param {?} initPayPal\r\n     * @return {?}\r\n     */\r\n    function (config, initPayPal) {\r\n        var _this = this;\r\n        this.paypalScriptService.registerPayPalScript({\r\n            clientId: config.clientId,\r\n            commit: config.advanced && config.advanced.commit ? config.advanced.commit : undefined,\r\n            currency: config.currency,\r\n            extraParams: config.advanced && config.advanced.extraQueryParams ? config.advanced.extraQueryParams : []\r\n        }, (/**\r\n         * @param {?} paypal\r\n         * @return {?}\r\n         */\r\n        function (paypal) {\r\n            _this.scriptLoaded.next(paypal);\r\n            initPayPal(paypal);\r\n        }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    NgxPaypalComponent.prototype.generateElementId = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return \"ngx-captcha-id-\" + new Date().valueOf();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} config\r\n     * @param {?} paypal\r\n     * @return {?}\r\n     */\r\n    NgxPaypalComponent.prototype.initPayPal = /**\r\n     * @private\r\n     * @param {?} config\r\n     * @param {?} paypal\r\n     * @return {?}\r\n     */\r\n    function (config, paypal) {\r\n        var _this = this;\r\n        // Running outside angular zone prevents infinite ngDoCheck lifecycle calls\r\n        this.ngZone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            // https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page\r\n            paypal.Buttons({\r\n                style: config.style,\r\n                createOrder: (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                function (data, actions) {\r\n                    return _this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    function () {\r\n                        if (config.createOrderOnClient && config.createOrderOnServer) {\r\n                            throw Error(\"Both 'createOrderOnClient' and 'createOrderOnServer' are defined.\\n                        Please choose one or the other.\");\r\n                        }\r\n                        if (!config.createOrderOnClient && !config.createOrderOnServer) {\r\n                            throw Error(\"Neither 'createOrderOnClient' or 'createOrderOnServer' are defined.\\n                        Please define one of these to create order.\");\r\n                        }\r\n                        if (config.createOrderOnClient) {\r\n                            return actions.order.create(config.createOrderOnClient(data));\r\n                        }\r\n                        if (config.createOrderOnServer) {\r\n                            return config.createOrderOnServer(data);\r\n                        }\r\n                        throw Error(\"Invalid state for 'createOrder'.\");\r\n                    }));\r\n                }),\r\n                onApprove: (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                function (data, actions) {\r\n                    return _this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    function () {\r\n                        if (config.onApprove) {\r\n                            config.onApprove(data, actions);\r\n                        }\r\n                        // capture on server\r\n                        if (config.authorizeOnServer) {\r\n                            return config.authorizeOnServer(data, actions);\r\n                        }\r\n                        // capture on client\r\n                        /** @type {?} */\r\n                        var onClientAuthorization = config.onClientAuthorization;\r\n                        if (onClientAuthorization) {\r\n                            actions.order.capture().then((/**\r\n                             * @param {?} details\r\n                             * @return {?}\r\n                             */\r\n                            function (details) {\r\n                                onClientAuthorization(details);\r\n                            }));\r\n                            return;\r\n                        }\r\n                    }));\r\n                }),\r\n                onError: (/**\r\n                 * @param {?} error\r\n                 * @return {?}\r\n                 */\r\n                function (error) {\r\n                    _this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    function () {\r\n                        if (config.onError) {\r\n                            config.onError(error);\r\n                        }\r\n                    }));\r\n                }),\r\n                onCancel: (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                function (data, actions) {\r\n                    _this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    function () {\r\n                        if (config.onCancel) {\r\n                            config.onCancel(data, actions);\r\n                        }\r\n                    }));\r\n                }),\r\n                onShippingChange: (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                function (data, actions) {\r\n                    return _this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    function () {\r\n                        if (config.onShippingChange) {\r\n                            return config.onShippingChange(data, actions);\r\n                        }\r\n                    }));\r\n                }),\r\n                onClick: (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                function (data, actions) {\r\n                    _this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    function () {\r\n                        if (config.onClick) {\r\n                            config.onClick(data, actions);\r\n                        }\r\n                    }));\r\n                }),\r\n                onInit: (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                function (data, actions) {\r\n                    _this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    function () {\r\n                        if (config.onInit) {\r\n                            config.onInit(data, actions);\r\n                        }\r\n                    }));\r\n                })\r\n            }).render(\"#\" + _this.payPalButtonContainerId);\r\n        }));\r\n    };\r\n    NgxPaypalComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    selector: 'ngx-paypal',\r\n                    template: \"\\n    <div #payPalButtonContainer [id]=\\\"payPalButtonContainerId\\\"></div>\\n    \"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    NgxPaypalComponent.ctorParameters = function () { return [\r\n        { type: PayPalScriptService },\r\n        { type: ChangeDetectorRef },\r\n        { type: NgZone }\r\n    ]; };\r\n    NgxPaypalComponent.propDecorators = {\r\n        config: [{ type: Input }],\r\n        registerScript: [{ type: Input }],\r\n        scriptLoaded: [{ type: Output }],\r\n        payPalButtonContainer: [{ type: ViewChild, args: ['payPalButtonContainer', { static: false },] }]\r\n    };\r\n    return NgxPaypalComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxPayPalModule = /** @class */ (function () {\r\n    function NgxPayPalModule() {\r\n    }\r\n    NgxPayPalModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    declarations: [\r\n                        NgxPaypalComponent,\r\n                    ],\r\n                    exports: [\r\n                        NgxPaypalComponent,\r\n                    ],\r\n                    providers: [\r\n                        ScriptService,\r\n                        PayPalScriptService\r\n                    ]\r\n                },] }\r\n    ];\r\n    return NgxPayPalModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxPayPalModule, NgxPaypalComponent, PayPalScriptService, ScriptService as ɵa };\n//# sourceMappingURL=ngx-paypal.js.map\n","export default \"<div class=\\\"form-group\\\">\\r\\n    <input [(ngModel)]=\\\"amount\\\" class=\\\"form-control\\\" name=\\\"amount\\\" type=\\\"number\\\">\\r\\n</div>\\r\\n<ngx-paypal [config]=\\\"payPalConfig\\\"></ngx-paypal>\\r\\n\"","export default \"<div class=\\\"form-group\\\">\\r\\n    <input [(ngModel)]=\\\"amount\\\" class=\\\"form-control\\\" name=\\\"amount\\\" type=\\\"number\\\">\\r\\n</div>\\r\\n<button (click)=\\\"pay(amount)\\\" class=\\\"btn btn-secondary btn-block\\\" type=\\\"button\\\">{{'settings.stripe_settings.title1' | translate}} {{loginUser.currency.symbol}}{{amount}}</button>\\r\\n\"","export default \"<section id=\\\"basic-form-layouts\\\">\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isFormLoaded\\\" [formGroup]=\\\"createInvoiceForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <h4 class=\\\"card-title\\\">{{'invoices.title2' | translate}}</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i aria-hidden=\\\"true\\\" class=\\\"ft-user\\\"></i>{{'invoices.headings.head1' | translate}}\\r\\n                                </h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"project_id\\\">{{'invoices.create.fields.project' | translate}}</label>\\r\\n                                            <ng-select (change)=\\\"projectChange($event)\\\" [clearable]=\\\"false\\\" [items]=\\\"projects\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"project_name\\\" bindValue=\\\"id\\\" formControlName=\\\"project_id\\\" labelForId=\\\"project_id\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder13' | translate}}\\\"></ng-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && invoiceControl.client_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"client_id\\\">{{'invoices.create.fields.customer' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <ng-select [clearable]=\\\"false\\\" [items]=\\\"clients\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"client_id\\\" labelForId=\\\"client_id\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder1' | translate}}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                                    {{item.firstname}} {{item.lastname}}\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && invoiceControl.client_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"invoiceControl.client_id.errors.required\\\">{{'invoices.create.error_messages.message1' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-calendar\\\"></i>{{'invoices.headings.head2' | translate}}</h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && invoiceControl.invoice_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"invoice_date\\\">{{'invoices.create.fields.invoice_date' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp1=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"invoice_date\\\" id=\\\"invoice_date\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder2' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && invoiceControl.invoice_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"invoiceControl.invoice_date.errors.required\\\">{{'invoices.create.error_messages.message2' | translate}}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && invoiceControl.due_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"end-date\\\">{{'invoices.create.fields.due_date' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp2=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"due_date\\\" id=\\\"due_date\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && invoiceControl.due_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"invoiceControl.due_date.errors.required\\\">{{'invoices.create.error_messages.message3' | translate}}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">&nbsp;</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\"><i class=\\\"ft-box\\\"></i>{{'invoices.headings.head3' | translate}}\\r\\n                                </h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"reference\\\">{{'invoices.create.fields.reference' | translate}} #</label>\\r\\n                                            <input class=\\\"form-control\\\" formControlName=\\\"reference\\\" id=\\\"reference\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder4' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"type\\\">{{'invoices.create.fields.discount_type' | translate}}</label>\\r\\n                                            <ng-select (change)=\\\"changeDiscountType($event)\\\" [clearable]=\\\"false\\\" [items]=\\\"('invoices.discount_type' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"discount_type\\\" labelForId=\\\"discount_type\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder5' | translate}}\\\"></ng-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-form\\\">\\r\\n                        <h4 class=\\\"card-title\\\">{{'invoices.headings.head4' | translate}}</h4>\\r\\n                        <div class=\\\"card-button estimate-form\\\">\\r\\n                            <ng-select (change)=\\\"changeItem($event)\\\" [clearable]=\\\"false\\\" [items]=\\\"items\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"selectedItem\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder7' | translate}}\\\">\\r\\n                                <ng-template let-index=\\\"index\\\" let-item=\\\"item\\\" let-search=\\\"searchTerm\\\" ng-option-tmp>\\r\\n                                    <div class=\\\"card mt-1 mb-1\\\">\\r\\n                                        <div class=\\\"card-body p-2\\\">\\r\\n                                            <h5 [ngOptionHighlight]=\\\"search\\\" class=\\\"card-title\\\">({{loginUser.currency.symbol}}{{item.price}}) {{item.name}}</h5>\\r\\n                                            <p class=\\\"card-text\\\">{{item.description}}</p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                            <table class=\\\"table table-bordered table-hover b4-datatable\\\" width=\\\"100%\\\">\\r\\n                                <thead>\\r\\n                                <tr>\\r\\n                                    <th>{{'invoices.create.fields.item_name' | translate}}</th>\\r\\n                                    <th>{{'invoices.create.fields.item_description' | translate}}</th>\\r\\n                                    <th class=\\\"width-100\\\">{{'invoices.create.fields.quantity' | translate}}</th>\\r\\n                                    <th class=\\\"width-150\\\">{{'invoices.create.fields.unit_price' | translate}}</th>\\r\\n                                    <th class=\\\"width-250\\\">{{'invoices.create.fields.item_tax' | translate}}</th>\\r\\n                                    <th>{{'invoices.create.fields.total_item_amount' | translate}} ({{loginUser.currency.symbol}})</th>\\r\\n                                    <th class=\\\"text-right\\\">{{'common.actions' | translate}}</th>\\r\\n                                </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                <tr formArrayName=\\\"item\\\">\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input class=\\\"form-control\\\" formControlName=\\\"item_name\\\" id=\\\"item_name\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder8' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" formControlName=\\\"item_description\\\" id=\\\"item_description\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder9' | translate}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</textarea>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input class=\\\"form-control\\\" formControlName=\\\"quantity\\\" id=\\\"quantity\\\" min=\\\"1\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder10' | translate}}\\\" type=\\\"number\\\"/>\\r\\n                                            <input class=\\\"inp\\\" formControlName=\\\"item_unit\\\" placeholder=\\\"{{'invoices.create.fields.unit' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input class=\\\"form-control\\\" formControlName=\\\"unit_price\\\" id=\\\"unit_price\\\" min=\\\"0\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder11' | translate}}\\\" type=\\\"number\\\"/>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <ng-select [items]=\\\"taxes\\\" [multiple]=\\\"true\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"tax_name\\\" bindValue=\\\"id\\\" formControlName=\\\"taxes\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder12' | translate}}\\\">\\r\\n                                                <ng-template let-index=\\\"index\\\" let-item=\\\"item\\\" let-search=\\\"searchTerm\\\" ng-option-tmp>\\r\\n                                                    {{item.tax_name}}({{item.tax_rate}}%)\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>&nbsp;</td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <button (click)=\\\"addItem($event)\\\" class=\\\"btn btn-secondary\\\" placement=\\\"left\\\" tooltip=\\\"{{'common.add' | translate}}\\\">\\r\\n                                            <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr *ngFor=\\\"let item of itemsArray; index as i\\\">\\r\\n                                    <td>\\r\\n                                        <inline-edit-input (updateValue)=\\\"saveItemDetail(i, 'item_name', $event);\\\" [elementFor]=\\\"'invoices.inline_edit.item_name' | translate\\\" [fieldValue]=\\\"item.item_name\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'item_name'\\\" [type]=\\\"'text'\\\"></inline-edit-input>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <inline-edit-textarea (updateValue)=\\\"saveItemDetail(i, 'item_description', $event);\\\" [elementFor]=\\\"'invoices.inline_edit.item_description' | translate\\\" [fieldValue]=\\\"item.item_description\\\" [isRequired]=\\\"'false'\\\" [name]=\\\"'item_description'\\\"></inline-edit-textarea>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <inline-edit-input (updateValue)=\\\"saveItemDetail(i, 'quantity', $event);\\\" [elementFor]=\\\"'invoices.inline_edit.quantity' | translate\\\" [fieldValue]=\\\"item.quantity\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'quantity'\\\" [type]=\\\"'number'\\\"></inline-edit-input>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <inline-edit-input (updateValue)=\\\"saveItemDetail(i, 'unit_price', $event);\\\" [elementFor]=\\\"'invoices.inline_edit.unit_price' | translate\\\" [fieldValue]=\\\"item.unit_price\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'unit_price'\\\" [type]=\\\"'number'\\\"></inline-edit-input>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <inline-edit-select-items (updateValue)=\\\"saveItemDetail(i, 'taxes', $event);\\\" [elementFor]=\\\"'invoices.inline_edit.item_tax' | translate\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'taxes'\\\" [options]=\\\"taxes\\\" [selectedValue]=\\\"item.taxes\\\" [txtField]=\\\"'Taxes'\\\"></inline-edit-select-items>\\r\\n                                    </td>\\r\\n                                    <td class=\\\"text-center\\\">{{item.quantity * item.unit_price}}</td>\\r\\n                                    <td class=\\\"actions-dropdown text-right\\\">\\r\\n                                        <div class=\\\"btn-group\\\" dropdown>\\r\\n                                            <button aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-1\\\" type=\\\"button\\\">\\r\\n                                                <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                                            <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                                <li role=\\\"menuitem\\\">\\r\\n                                                    <a (click)=\\\"deleteItem(i)\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\"><i class=\\\"fa fa-trash-o\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"></i></a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                </tbody>\\r\\n                                <tbody class=\\\"mt-4\\\">\\r\\n                                <tr>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <strong>{{'invoices.create.fields.sub_total' | translate}}:</strong></td>\\r\\n                                    <td class=\\\"text-center\\\">{{loginUser.currency.symbol}}{{ invoices.sub_total | number : '1.2-2' }}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr *ngFor=\\\"let tax of itemTaxes | keyvalue\\\">\\r\\n                                    <ng-container *ngIf=\\\"tax\\\">\\r\\n                                        <td></td>\\r\\n                                        <td></td>\\r\\n                                        <td></td>\\r\\n                                        <td></td>\\r\\n                                        <td class=\\\"text-right\\\">\\r\\n                                            <strong>{{taxesNameValues[tax.key].tax_name}}({{taxesNameValues[tax.key].tax_rate}})</strong>\\r\\n                                        </td>\\r\\n                                        <td class=\\\"text-center\\\">{{loginUser.currency.symbol}}{{tax.value | number : '1.2-2'}}</td>\\r\\n                                        <td></td>\\r\\n                                    </ng-container>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <strong>{{'invoices.create.fields.discount' | translate}}</strong></td>\\r\\n                                    <td>\\r\\n                                        <input (change)=\\\"changeDiscountAdjustment($event, 'discount')\\\" class=\\\"form-control\\\" formControlName=\\\"discount\\\" name=\\\"discount\\\" placeholder=\\\"00.00\\\" type=\\\"number\\\">\\r\\n                                    </td>\\r\\n                                    <td class=\\\"danger text-center\\\">(-) {{loginUser.currency.symbol}}{{total_discount | number : '1.2-2'}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <strong>{{'invoices.create.fields.adjustment' | translate}}</strong></td>\\r\\n                                    <td>\\r\\n                                        <input (change)=\\\"changeDiscountAdjustment($event, 'adjustment')\\\" class=\\\"form-control\\\" formControlName=\\\"adjustment\\\" min=\\\"0\\\" name=\\\"adjustment\\\" placeholder=\\\"00.00\\\" type=\\\"number\\\">\\r\\n                                    </td>\\r\\n                                    <td class=\\\"text-center\\\">{{loginUser.currency.symbol}}{{ invoices.adjustment | number : '1.2-2'}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <strong>{{'invoices.create.fields.total_amount' | translate}}:</strong></td>\\r\\n                                    <td class=\\\"text-center\\\">{{loginUser.currency.symbol}}{{ invoices.total | number : '1.2-2' }}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 text-right pt-3 pb-3\\\">\\r\\n                            <a [routerLink]=\\\"['/invoices']\\\" class=\\\"btn btn-cancel mb-0\\\">{{'common.cancel' | translate }}</a>\\r\\n                            <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.create' | translate }}</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</section>\\r\\n\"","export default \"<section id=\\\"basic-form-layouts\\\">\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isFormLoaded\\\" [formGroup]=\\\"editInvoiceForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <h4 class=\\\"card-title\\\">{{'invoices.title3' | translate}}</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i aria-hidden=\\\"true\\\" class=\\\"ft-user\\\"></i>{{'invoices.headings.head1' | translate}}\\r\\n                                </h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"project_id\\\">{{'invoices.create.fields.project' | translate}}</label>\\r\\n                                            <ng-select (change)=\\\"projectChange($event)\\\" [clearable]=\\\"false\\\" [items]=\\\"projects\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"project_name\\\" bindValue=\\\"id\\\" formControlName=\\\"project_id\\\" labelForId=\\\"project_id\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder13' | translate}}\\\"></ng-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && invoiceControl.client_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"client_id\\\">{{'invoices.create.fields.customer' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <ng-select [clearable]=\\\"false\\\" [items]=\\\"clients\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"client_id\\\" labelForId=\\\"client_id\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder1' | translate}}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                                    {{item.firstname}} {{item.lastname}}\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && invoiceControl.client_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"invoiceControl.client_id.errors.required\\\">{{'invoices.create.error_messages.message1' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-calendar\\\"></i>{{'invoices.headings.head2' | translate}}</h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && invoiceControl.invoice_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"invoice_date\\\">{{'invoices.create.fields.invoice_date' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp1=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"invoice_date\\\" id=\\\"invoice_date\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder2' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && invoiceControl.invoice_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"invoiceControl.invoice_date.errors.required\\\">{{'invoices.create.error_messages.message2' | translate}}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && invoiceControl.due_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"end-date\\\">{{'invoices.create.fields.due_date' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp2=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"due_date\\\" id=\\\"due_date\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && invoiceControl.due_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"invoiceControl.due_date.errors.required\\\">{{'invoices.create.error_messages.message3' | translate}}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">&nbsp;</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\"><i class=\\\"ft-box\\\"></i>{{'invoices.headings.head3' | translate}}\\r\\n                                </h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"invoice_number\\\">{{'invoices.create.fields.invoice_number' | translate}} #</label>\\r\\n                                            <input aria-describedby=\\\"basic-addon1\\\" class=\\\"form-control\\\" formControlName=\\\"invoice_number\\\" id=\\\"invoice_number\\\" readonly=\\\"\\\" type=\\\"text\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"reference\\\">{{'invoices.create.fields.reference' | translate}} #</label>\\r\\n                                            <input class=\\\"form-control\\\" formControlName=\\\"reference\\\" id=\\\"reference\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder4' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"type\\\">{{'invoices.create.fields.discount_type' | translate}}</label>\\r\\n                                            <ng-select (change)=\\\"changeDiscountType($event)\\\" [clearable]=\\\"false\\\" [items]=\\\"('invoices.discount_type' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"discount_type\\\" labelForId=\\\"discount_type\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder5' | translate}}\\\"></ng-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-form\\\">\\r\\n                        <h4 class=\\\"card-title\\\">{{'invoices.headings.head4' | translate}}</h4>\\r\\n                        <div class=\\\"card-button estimate-form\\\">\\r\\n                            <ng-select (change)=\\\"changeItem($event)\\\" [clearable]=\\\"false\\\" [items]=\\\"items\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"selectedItem\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder7' | translate}}\\\">\\r\\n                                <ng-template let-index=\\\"index\\\" let-item=\\\"item\\\" let-search=\\\"searchTerm\\\" ng-option-tmp>\\r\\n                                    <div class=\\\"card mt-1 mb-1\\\">\\r\\n                                        <div class=\\\"card-body p-2\\\">\\r\\n                                            <h5 [ngOptionHighlight]=\\\"search\\\" class=\\\"card-title\\\">({{loginUser.currency.symbol}}{{item.price}}) {{item.name}}</h5>\\r\\n                                            <p class=\\\"card-text\\\">{{item.description}}</p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                            <table class=\\\"table table-bordered table-hover b4-datatable\\\" width=\\\"100%\\\">\\r\\n                                <thead>\\r\\n                                <tr>\\r\\n                                    <th>{{'invoices.create.fields.item_name' | translate}}</th>\\r\\n                                    <th>{{'invoices.create.fields.item_description' | translate}}</th>\\r\\n                                    <th class=\\\"width-100\\\">{{'invoices.create.fields.quantity' | translate}}</th>\\r\\n                                    <th class=\\\"width-150\\\">{{'invoices.create.fields.unit_price' | translate}}</th>\\r\\n                                    <th class=\\\"width-250\\\">{{'invoices.create.fields.item_tax' | translate}}</th>\\r\\n                                    <th>{{'invoices.create.fields.total_item_amount' | translate}} ({{loginUser.currency.symbol}})</th>\\r\\n                                    <th class=\\\"text-right\\\">{{'common.actions' | translate}}</th>\\r\\n                                </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                <tr formArrayName=\\\"item\\\">\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input class=\\\"form-control\\\" formControlName=\\\"item_name\\\" id=\\\"item_name\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder8' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" formControlName=\\\"item_description\\\" id=\\\"item_description\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder9' | translate}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</textarea>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input class=\\\"form-control\\\" formControlName=\\\"quantity\\\" id=\\\"quantity\\\" min=\\\"1\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder10' | translate}}\\\" type=\\\"number\\\"/>\\r\\n                                            <input class=\\\"inp\\\" formControlName=\\\"item_unit\\\" placeholder=\\\"{{'invoices.create.fields.unit' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input class=\\\"form-control\\\" formControlName=\\\"unit_price\\\" id=\\\"unit_price\\\" min=\\\"0\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder11' | translate}}\\\" type=\\\"number\\\"/>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <ng-select [items]=\\\"taxes\\\" [multiple]=\\\"true\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"tax_name\\\" bindValue=\\\"id\\\" formControlName=\\\"taxes\\\" placeholder=\\\"{{'invoices.create.placeholders.placeholder12' | translate}}\\\">\\r\\n                                                <ng-template let-index=\\\"index\\\" let-item=\\\"item\\\" let-search=\\\"searchTerm\\\" ng-option-tmp>\\r\\n                                                    {{item.tax_name}}({{item.tax_rate}}%)\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>&nbsp;</td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <button (click)=\\\"addItem($event)\\\" class=\\\"btn btn-secondary\\\" placement=\\\"left\\\" tooltip=\\\"{{'common.add' | translate}}\\\">\\r\\n                                            <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr *ngFor=\\\"let item of itemsArray; index as i\\\">\\r\\n                                    <td>\\r\\n                                        <inline-edit-input (updateValue)=\\\"saveItemDetail(i, 'item_name', $event);\\\" [elementFor]=\\\"'invoices.inline_edit.item_name' | translate\\\" [fieldValue]=\\\"item.item_name\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'item_name'\\\" [type]=\\\"'text'\\\"></inline-edit-input>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <inline-edit-textarea (updateValue)=\\\"saveItemDetail(i, 'item_description', $event);\\\" [elementFor]=\\\"'invoices.inline_edit.item_description' | translate\\\" [fieldValue]=\\\"item.item_description\\\" [isRequired]=\\\"'false'\\\" [name]=\\\"'item_description'\\\"></inline-edit-textarea>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <inline-edit-input (updateValue)=\\\"saveItemDetail(i, 'quantity', $event);\\\" [elementFor]=\\\"'invoices.inline_edit.quantity' | translate\\\" [fieldValue]=\\\"item.quantity\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'quantity'\\\" [type]=\\\"'number'\\\"></inline-edit-input>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <inline-edit-input (updateValue)=\\\"saveItemDetail(i, 'unit_price', $event);\\\" [elementFor]=\\\"'invoices.inline_edit.unit_price' | translate\\\" [fieldValue]=\\\"item.unit_price\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'unit_price'\\\" [type]=\\\"'number'\\\"></inline-edit-input>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <inline-edit-select-items (updateValue)=\\\"saveItemDetail(i, 'taxes', $event);\\\" [elementFor]=\\\"'invoices.inline_edit.item_tax' | translate\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'taxes'\\\" [options]=\\\"taxes\\\" [selectedValue]=\\\"item.taxes\\\" [txtField]=\\\"'Taxes'\\\"></inline-edit-select-items>\\r\\n                                    </td>\\r\\n                                    <td class=\\\"text-center\\\">{{item.quantity * item.unit_price}}</td>\\r\\n                                    <td class=\\\"actions-dropdown text-right\\\">\\r\\n                                        <div class=\\\"btn-group\\\" dropdown>\\r\\n                                            <button aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-1\\\" type=\\\"button\\\">\\r\\n                                                <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                                            <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                                <li role=\\\"menuitem\\\">\\r\\n                                                    <a (click)=\\\"deleteItem(i)\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\"><i class=\\\"fa fa-trash-o\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"></i></a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                </tbody>\\r\\n                                <tbody class=\\\"mt-4\\\">\\r\\n                                <tr>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <strong>{{'invoices.create.fields.sub_total' | translate}}:</strong></td>\\r\\n                                    <td class=\\\"text-center\\\">{{loginUser.currency.symbol}}{{invoices.sub_total | number : '1.2-2'}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr *ngFor=\\\"let tax of itemTaxes | keyvalue\\\">\\r\\n                                    <ng-container *ngIf=\\\"tax\\\">\\r\\n                                        <td></td>\\r\\n                                        <td></td>\\r\\n                                        <td></td>\\r\\n                                        <td></td>\\r\\n                                        <td class=\\\"text-right\\\">\\r\\n                                            <strong>{{taxesNameValues[tax.key].tax_name}}({{taxesNameValues[tax.key].tax_rate}})</strong>\\r\\n                                        </td>\\r\\n                                        <td class=\\\"text-center\\\">{{loginUser.currency.symbol}}{{tax.value | number : '1.2-2'}}</td>\\r\\n                                        <td></td>\\r\\n                                    </ng-container>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <strong>{{'invoices.create.fields.discount' | translate}}</strong></td>\\r\\n                                    <td>\\r\\n                                        <input (change)=\\\"changeDiscountAdjustment($event, 'discount')\\\" class=\\\"form-control\\\" formControlName=\\\"discount\\\" name=\\\"discount\\\" placeholder=\\\"00.00\\\" type=\\\"number\\\">\\r\\n                                    </td>\\r\\n                                    <td class=\\\"danger text-center\\\">(-) {{loginUser.currency.symbol}}{{total_discount | number : '1.2-2'}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <strong>{{'invoices.create.fields.adjustment' | translate}}</strong></td>\\r\\n                                    <td>\\r\\n                                        <input (change)=\\\"changeDiscountAdjustment($event, 'adjustment')\\\" class=\\\"form-control\\\" formControlName=\\\"adjustment\\\" min=\\\"0\\\" name=\\\"adjustment\\\" placeholder=\\\"00.00\\\" type=\\\"number\\\">\\r\\n                                    </td>\\r\\n                                    <td class=\\\"text-center\\\">{{loginUser.currency.symbol}}{{invoices.adjustment | number : '1.2-2'}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <strong>{{'invoices.create.fields.total_amount' | translate}}:</strong></td>\\r\\n                                    <td class=\\\"text-center\\\">{{loginUser.currency.symbol}}{{invoices.total | number : '1.2-2'}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 text-right pt-3 pb-3\\\">\\r\\n                            <a [routerLink]=\\\"['/invoices']\\\" class=\\\"btn btn-cancel mb-0\\\">{{'common.cancel' | translate }}</a>\\r\\n                            <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.edit' | translate }}</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"hide_empty_message\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card pl-2 pr-2\\\">\\r\\n                <div class=\\\"card-header pl-0 pr-0 border-bottom\\\">\\r\\n                    <h4 class=\\\"main-title mt-2\\\"><span>{{'invoices.title' | translate}}</span></h4>\\r\\n                    <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'invoices_create']\\\" class=\\\"card-buttons\\\">\\r\\n                        <a [routerLink]=\\\"['/invoices/create']\\\" class=\\\"btn btn-create mb-0\\\" placement=\\\"left\\\" tooltip=\\\"{{'common.create' | translate}}\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- Card content -->\\r\\n                <div class=\\\"card-content pt-3 pb-3\\\">\\r\\n                    <!-- Card body -->\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <!-- Invoices list datatable -->\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                                    <table [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"table table-bordered table-hover b4-datatable\\\" datatable id=\\\"invoices_table\\\" width=\\\"100%\\\">\\r\\n                                        <thead>\\r\\n                                        <tr>\\r\\n                                            <th>{{'invoices.columns.invoice_number' | translate}} #</th>\\r\\n                                            <th>{{'invoices.columns.customer' | translate}}</th>\\r\\n                                            <th>{{'invoices.columns.invoice_date' | translate}}</th>\\r\\n                                            <th>{{'invoices.columns.due_date' | translate}}</th>\\r\\n                                            <th>{{'invoices.columns.total_amount' | translate}}</th>\\r\\n                                            <th>{{'invoices.columns.status' | translate}}</th>\\r\\n                                            <th>{{'common.actions' | translate}}</th>\\r\\n                                        </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                        <tr *ngFor=\\\"let invoice of invoices; index as i\\\">\\r\\n                                            <td>\\r\\n                                                <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'invoices_view'] else elseBlock1;\\\">\\r\\n                                                    <a [routerLink]=\\\"['/invoices/detail', invoice.id]\\\" tooltip=\\\"{{'common.view' | translate}}\\\">{{invoice.invoice_number}}</a>\\r\\n                                                </ng-container>\\r\\n                                                <ng-template #elseBlock1>{{invoice.invoice_number}}</ng-template>\\r\\n                                            </td>\\r\\n                                            <td>{{invoice.client_firstname}} {{invoice.client_lastname}}</td>\\r\\n                                            <td>{{invoice.invoice_date | dateTimeFormatFilter: loginUser.settings.date_format}}</td>\\r\\n                                            <td>{{invoice.due_date | dateTimeFormatFilter: loginUser.settings.date_format}}</td>\\r\\n                                            <td>{{loginUser.currency.symbol}}{{invoice.total_amount | number : '1.2-2'}}</td>\\r\\n                                            <td class=\\\"budges-status\\\">\\r\\n                                                <ng-container *ngFor=\\\"let status of ('invoices.status' | translate)\\\">\\r\\n                                                    <span *ngIf=\\\"status.id == invoice.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                                </ng-container>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"actions-dropdown\\\">\\r\\n                                                <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                    <button aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-1\\\" type=\\\"button\\\">\\r\\n                                                        <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                                                    <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                                        <li role=\\\"menuitem\\\">\\r\\n                                                            <a *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'invoices_edit']\\\" [routerLink]=\\\"['edit', invoice.id]\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                        <li role=\\\"menuitem\\\">\\r\\n                                                            <a (click)=\\\"deleteInvoice(invoice.id)\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'invoices_delete']\\\" class=\\\"dropdown-item btn btn-danger btn-delete btn-raised\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        </tbody>\\r\\n                                        <tfoot *ngIf=\\\"invoices?.length == 0\\\" class=\\\"tfoot_dt\\\">\\r\\n                                        <tr>\\r\\n                                            <td class=\\\"no-data-available text-center\\\" colspan=\\\"7\\\">{{'common.datatable.sEmptyTable' | translate}}</td>\\r\\n                                        </tr>\\r\\n                                        </tfoot>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","export default \"<section *ngIf=\\\"isPageLoad\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 col-12 text-center text-sm-right\\\">\\r\\n            <a *ngIf=\\\"isDownloadable\\\" class=\\\"btn btn-secondary text-white mb-0\\\" href=\\\"{{apiUrl}}/invoices/download/{{invoice.secret_id}}/{{invoice.client.id}}\\\" type=\\\"button\\\"><i class=\\\"ft-upload mr-1\\\"></i>{{'invoices.view.download' | translate}}\\r\\n            </a>\\r\\n            <ng-container *ngIf=\\\"invoice.status != 'paid'\\\">\\r\\n                <button (click)=\\\"openPaymentCreateModal()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'payments_create']\\\" class=\\\"btn btn-create mb-0 ml-1\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\"></i><span>{{'invoices.view.add_payment' | translate}}</span></button>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" id=\\\"invoice_table\\\">\\r\\n        <div class=\\\"col-md-12 col-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-content p-3\\\">\\r\\n                    <div class=\\\"card-body pb-0\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-6 col-12\\\">\\r\\n                                <div *ngIf=\\\"invoice.status == 'paid'\\\" class=\\\"ribbon ribbon-bookmark ribbon-paid\\\">{{'invoices.view.paid' | translate}}</div>\\r\\n                                <div *ngIf=\\\"invoice.status == 'partially_paid'\\\" class=\\\"ribbon ribbon-bookmark ribbon-partially_paid\\\">{{'invoices.view.partially_paid' | translate}}</div>\\r\\n                                <div *ngIf=\\\"invoice.status == 'unpaid'\\\" class=\\\"ribbon ribbon-bookmark ribbon-unpaid\\\">{{'invoices.view.unpaid' | translate}}</div>\\r\\n\\r\\n                                <div class=\\\"media logo-img pt-5\\\">\\r\\n                                    <img *ngIf=\\\"invoiceSettings.invoice_logo\\\" alt=\\\"Invoice Logo\\\" height=\\\"80\\\" src=\\\"{{apiUrl}}/uploads/invoice_logo/{{invoiceSettings.invoice_logo}}\\\" width=\\\"80\\\">\\r\\n                                    <img *ngIf=\\\"!invoiceSettings.invoice_logo\\\" alt=\\\"Invoice Logo\\\" height=\\\"80\\\" src=\\\"assets/img/logos/vipspm_logo.png\\\" width=\\\"80\\\">\\r\\n                                    <div class=\\\"media-body ml-4\\\">\\r\\n                                        <ul class=\\\"m-0 list-unstyled\\\">\\r\\n                                            <li class=\\\"text-bold-800\\\">{{loginUser.settings.company_name}}</li>\\r\\n                                            <li class=\\\"nl2br\\\">{{loginUser.settings.company_address}}</li>\\r\\n                                            <li>{{loginUser.settings.company_phone}}</li>\\r\\n                                            <li *ngIf=\\\"invoiceSettings.show_gst_number\\\">{{'invoices.view.gst_number' | translate}}: {{invoiceSettings.gst_number}}</li>\\r\\n                                        </ul>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6 col-12 text-right\\\">\\r\\n                                <h2 class=\\\"primary text-uppercase\\\">{{'invoices.title4' | translate}}</h2>\\r\\n                                <p class=\\\"pb-3\\\"># {{invoice.invoice_number}}</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" id=\\\"invoice-customer-details\\\">\\r\\n                            <div class=\\\"col-12 text-left\\\">\\r\\n                                <p class=\\\"text-muted mb-1\\\">{{'invoices.view.bill_to' | translate}}</p>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4 col-12 text-left\\\">\\r\\n                                <ul class=\\\"m-0 list-unstyled\\\">\\r\\n                                    <li class=\\\"text-bold-800\\\">{{invoice.client.firstname}} {{invoice.client.lastname}}</li>\\r\\n                                    <li class=\\\"nl2br\\\">{{invoice.client.address}}</li>\\r\\n                                    <li>{{invoice.client.phone}}</li>\\r\\n                                    <li>{{invoice.client.mobile}}</li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-8 col-12 text-right\\\">\\r\\n                                <p *ngIf=\\\"invoice.reference\\\">\\r\\n                                    <span class=\\\"text-muted\\\">{{'invoices.create.fields.reference' | translate}} :</span> {{invoice.reference}}\\r\\n                                </p>\\r\\n                                <p>\\r\\n                                    <span class=\\\"text-muted\\\">{{'invoices.view.invoice_date' | translate}} :</span> {{invoice.invoice_date | dateTimeFormatFilter: loginUser.settings.date_format}}\\r\\n                                </p>\\r\\n                                <p class=\\\"m-0\\\">\\r\\n                                    <span class=\\\"text-muted\\\">{{'invoices.view.due_date' | translate}} :</span> {{invoice.due_date | dateTimeFormatFilter: loginUser.settings.date_format}}\\r\\n                                </p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div id=\\\"invoice-items-details\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"table-responsive col-12\\\">\\r\\n                                    <table class=\\\"table mt-3\\\">\\r\\n                                        <thead>\\r\\n                                        <tr>\\r\\n                                            <th>#</th>\\r\\n                                            <th>{{'invoices.create.fields.item_name' | translate}} &amp; {{'invoices.create.fields.item_description' | translate}}</th>\\r\\n                                            <th>{{'invoices.create.fields.quantity' | translate}}</th>\\r\\n                                            <th>{{'invoices.create.fields.unit_price' | translate}}</th>\\r\\n                                            <th>{{'invoices.create.fields.item_tax' | translate}}</th>\\r\\n                                            <th class=\\\"text-right\\\">{{'invoices.create.fields.total_item_amount' | translate}} ({{loginUser.currency.symbol}})</th>\\r\\n                                        </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                        <tr *ngFor=\\\"let item of invoice.items; index as i\\\">\\r\\n                                            <th scope=\\\"row\\\">{{i + 1}}</th>\\r\\n                                            <td>\\r\\n                                                <p class=\\\"mb-0\\\">{{item.item_name}}</p>\\r\\n                                                <p class=\\\"mb-0 text-muted\\\">{{item.item_description}}</p>\\r\\n                                            </td>\\r\\n                                            <td><span>{{item.quantity}}<small>&nbsp;{{item.item_unit}}</small></span>\\r\\n                                            </td>\\r\\n                                            <td>{{item.unit_price}}</td>\\r\\n                                            <td class=\\\"budges-status\\\">\\r\\n                                                <ng-container *ngFor=\\\"let tax of item.taxes\\\">\\r\\n                                                    <span class=\\\"open\\\">{{tax.tax_name}} ({{tax.tax_rate}}%)</span>\\r\\n                                                </ng-container>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"text-right\\\">{{item.unit_price * item.quantity}}</td>\\r\\n                                        </tr>\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-3 mt-md-0\\\">\\r\\n                                <div class=\\\"col-md-6 col-12\\\"></div>\\r\\n                                <div class=\\\"col-md-6 col-12\\\">\\r\\n                                    <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                                        <table class=\\\"table\\\" width=\\\"100%\\\">\\r\\n                                            <tbody>\\r\\n                                            <tr>\\r\\n                                                <td>{{'invoices.create.fields.sub_total' | translate}}</td>\\r\\n                                                <td class=\\\"text-right\\\">{{loginUser.currency.symbol}}{{invoices.sub_total | number : '1.2-2'}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngFor=\\\"let tax of itemTaxes | keyvalue\\\">\\r\\n                                                <td>{{taxesNameValues[tax.key].tax_name}} ({{taxesNameValues[tax.key].tax_rate}}%)</td>\\r\\n                                                <td class=\\\"text-right\\\">{{loginUser.currency.symbol}}{{tax.value}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>{{'invoices.create.fields.discount' | translate}}</td>\\r\\n                                                <td class=\\\"danger text-right\\\">(-) {{loginUser.currency.symbol}}{{invoice.total_discount | number : '1.2-2'}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>{{'invoices.create.fields.adjustment' | translate}}</td>\\r\\n                                                <td class=\\\"text-right\\\">{{loginUser.currency.symbol}}{{invoice.adjustment | number : '1.2-2'}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td class=\\\"text-bold-500\\\">{{'invoices.create.fields.total_amount' | translate}}</td>\\r\\n                                                <td class=\\\"text-bold-500 text-right\\\"> {{loginUser.currency.symbol}}{{invoice.total_amount | number : '1.2-2'}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td class=\\\"text-bold-500 danger\\\">{{'invoices.create.fields.total_amount_due' | translate}}</td>\\r\\n                                                <td class=\\\"text-bold-500 text-right danger\\\"> {{loginUser.currency.symbol}} {{ invoice.total_due_amount | number : '1.2-2'}}</td>\\r\\n                                            </tr>\\r\\n                                            </tbody>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-2 mt-sm-0 pt-3 border-top\\\">\\r\\n                                <div class=\\\"col-md-12 col-12 d-flex align-items-center\\\">\\r\\n                                    <div class=\\\"terms-conditions mb-2\\\">\\r\\n                                        <h6><strong>{{'invoices.view.terms' | translate}}</strong></h6>\\r\\n                                        <p>{{invoiceSettings.terms_conditions}}</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row mt-2 mt-sm-0 pt-3 border-top\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <h6><strong>{{'invoices.view.transactions' | translate}}</strong></h6>\\r\\n                                    <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                                        <table class=\\\"table table-bordered table-hover b4-datatable\\\" width=\\\"100%\\\">\\r\\n                                            <thead>\\r\\n                                            <tr>\\r\\n                                                <th>{{'invoices.view.payment' | translate}} #</th>\\r\\n                                                <th>{{'invoices.view.payment_mode' | translate}}</th>\\r\\n                                                <th>{{'invoices.view.date' | translate}}</th>\\r\\n                                                <th>{{'invoices.view.status' | translate}}</th>\\r\\n                                                <th>{{'invoices.view.amount' | translate}} ({{loginUser.currency.symbol}})</th>\\r\\n                                            </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody *ngIf=\\\"invoice.payments?.length != 0\\\">\\r\\n                                            <tr *ngFor=\\\"let payment of invoice.payments; index as i\\\">\\r\\n                                                <td>\\r\\n                                                    <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'payments_view'] else elseBlock1;\\\">\\r\\n                                                        <a [routerLink]=\\\"['/payments/detail', payment.id]\\\" tooltip=\\\"{{'common.view' | translate}}\\\">{{payment.receipt_number}}</a>\\r\\n                                                    </ng-container>\\r\\n                                                    <ng-template #elseBlock1>{{payment.receipt_number}}</ng-template>\\r\\n                                                </td>\\r\\n                                                <td>{{payment.payment_method}}</td>\\r\\n                                                <td>{{payment.date | dateTimeFormatFilter: loginUser.settings.date_time_format}}</td>\\r\\n                                                <td class=\\\"budges-status\\\">\\r\\n                                                    <ng-container *ngFor=\\\"let status of ('payments.status' | translate)\\\">\\r\\n                                                        <span *ngIf=\\\"status.id == payment.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                                    </ng-container>\\r\\n                                                </td>\\r\\n                                                <td>{{payment.amount}}</td>\\r\\n                                            </tr>\\r\\n                                            </tbody>\\r\\n                                            <tbody *ngIf=\\\"invoice.payments?.length == 0\\\">\\r\\n                                            <tr>\\r\\n                                                <td class=\\\"no-data-available text-center\\\" colspan=\\\"5\\\">{{'common.datatable.sEmptyTable' | translate}}</td>\\r\\n                                            </tr>\\r\\n                                            </tbody>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"invoice.status != 'paid'\\\" class=\\\"row mt-2 mt-sm-0 pt-3 border-top\\\">\\r\\n                                <div class=\\\"col-md-12 col-12\\\">\\r\\n                                    <h6><strong>{{'payments.columns.payment_mode' | translate}}</strong></h6>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-12\\\">\\r\\n                                            <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                                                <table class=\\\"table\\\" width=\\\"100%\\\">\\r\\n                                                    <tbody>\\r\\n                                                    <tr *ngIf=\\\"gatewaySettings.paypal_checkout_status\\\">\\r\\n                                                        <td class=\\\"width-600\\\">\\r\\n                                                            <div class=\\\"form-check radio-container d-block\\\">\\r\\n                                                                <input [(ngModel)]=\\\"paymentMethod\\\" class=\\\"form-check-input\\\" id=\\\"checkbox1\\\" type=\\\"radio\\\" value=\\\"paypal\\\">\\r\\n                                                                <label class=\\\"form-check-label\\\" for=\\\"checkbox1\\\">&nbsp;{{'invoices.view.paypal' | translate}}&nbsp;</label>\\r\\n                                                                <span class=\\\"radio-checkmark\\\"></span>\\r\\n                                                            </div>\\r\\n                                                        </td>\\r\\n                                                        <td class=\\\"width-300\\\">\\r\\n                                                            <ng-container *ngIf=\\\"paymentMethod == 'paypal'\\\">\\r\\n                                                                <app-paypal-payment (onPaymentSuccess)=\\\"getPaymentSuccess($event)\\\" [gatewaySettings]=\\\"gatewaySettings\\\" [invoice]=\\\"invoice\\\" [loginUser]=\\\"loginUser\\\"></app-paypal-payment>\\r\\n                                                            </ng-container>\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                    <tr *ngIf=\\\"gatewaySettings.stripe_status\\\">\\r\\n                                                        <td class=\\\"width-600\\\">\\r\\n                                                            <div class=\\\"form-check radio-container d-block\\\">\\r\\n                                                                <input [(ngModel)]=\\\"paymentMethod\\\" class=\\\"form-check-input\\\" id=\\\"checkbox2\\\" type=\\\"radio\\\" value=\\\"stripe\\\">\\r\\n                                                                <label class=\\\"form-check-label\\\" for=\\\"checkbox2\\\">&nbsp;{{'invoices.view.stripe' | translate}}</label>\\r\\n                                                                <span class=\\\"radio-checkmark\\\"></span>\\r\\n                                                            </div>\\r\\n                                                        </td>\\r\\n                                                        <td class=\\\"width-300\\\">\\r\\n                                                            <ng-container *ngIf=\\\"paymentMethod == 'stripe'\\\">\\r\\n                                                                <app-stripe-payment (onPaymentSuccess)=\\\"getPaymentSuccess($event)\\\" [gatewaySettings]=\\\"gatewaySettings\\\" [invoice]=\\\"invoice\\\" [loginUser]=\\\"loginUser\\\"></app-stripe-payment>\\r\\n                                                            </ng-container>\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                    <tr *ngFor=\\\"let mode of paymentModes; index as i\\\">\\r\\n                                                        <ng-container *ngIf=\\\"mode.show_on_pdf && (mode.status == 'active' || mode.status == '1')\\\">\\r\\n                                                            <td class=\\\"width-600\\\">\\r\\n                                                                <div class=\\\"form-check radio-container d-block\\\">\\r\\n                                                                    <input [(ngModel)]=\\\"paymentMethod\\\" class=\\\"form-check-input\\\" id=\\\"checkbox2_{{i}}\\\" type=\\\"radio\\\" value=\\\"{{mode.method_name}}\\\">\\r\\n                                                                    <label class=\\\"form-check-label\\\" for=\\\"checkbox2_{{i}}\\\">&nbsp;{{mode.method_name}}</label>\\r\\n                                                                    <span class=\\\"radio-checkmark\\\"></span>\\r\\n                                                                </div>\\r\\n                                                            </td>\\r\\n                                                            <td class=\\\"nl2br width-300\\\">\\r\\n                                                                <ng-container *ngIf=\\\"paymentMethod == mode.method_name\\\">\\r\\n                                                                    {{mode.description}}\\r\\n                                                                </ng-container>\\r\\n                                                            </td>\\r\\n                                                        </ng-container>\\r\\n                                                    </tr>\\r\\n                                                    </tbody>\\r\\n                                                </table>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {Client} from '../../shared/models/client.model';\r\n\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ClientService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<Client[]>(`${this.apiUrl}/api/clients`);\r\n    }\r\n\r\n    getClientsWithTrashed() {\r\n        return this.http.get<Client[]>(`${this.apiUrl}/api/clients/withtrashed`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/clients/${id}`);\r\n    }\r\n\r\n    create(client: Client) {\r\n        return this.http.post(`${this.apiUrl}/api/clients`, client);\r\n    }\r\n\r\n    update(client: Client) {\r\n        return this.http.put(`${this.apiUrl}/api/clients/${client.id}`, client);\r\n    }\r\n\r\n    delete(id: number, params: any) {\r\n        return this.http.post(`${this.apiUrl}/api/clients/delete/${id}`, params);\r\n    }\r\n\r\n    setActiveDeactiveUser(client: Client) {\r\n        return this.http.put(`${this.apiUrl}/api/clients/status-change/${client.id}`, client);\r\n    }\r\n\r\n    sendInviteUserMail(id) {\r\n        return this.http.get(`${this.apiUrl}/api/users/invite/${id}`);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class InvoiceService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/invoices/${id}`);\r\n    }\r\n\r\n    create(invoice) {\r\n        return this.http.post(`${this.apiUrl}/api/invoices`, invoice);\r\n    }\r\n\r\n    update(invoice) {\r\n        return this.http.put(`${this.apiUrl}/api/invoices/${invoice.id}`, invoice);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${this.apiUrl}/api/invoices/${id}`);\r\n    }\r\n\r\n    changeStatus(invoice: any) {\r\n        return this.http.post(`${this.apiUrl}/api/invoices/change-status/${invoice.id}`, {'status': invoice.status});\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {Project} from '../../shared/models/project.model';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ProjectService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<Project[]>(`${this.apiUrl}/api/projects`);\r\n    }\r\n\r\n    getMyProjects() {\r\n        return this.http.get<Project[]>(`${this.apiUrl}/api/projects/my`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/projects/${id}`);\r\n    }\r\n\r\n    getProjectById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/projects/getbyid/${id}`);\r\n    }\r\n\r\n    create(project: Project) {\r\n        return this.http.post(`${this.apiUrl}/api/projects`, project);\r\n    }\r\n\r\n    update(project: Project) {\r\n        return this.http.put(`${this.apiUrl}/api/projects/${project.id}`, project);\r\n    }\r\n\r\n    delete(id: number, params: any) {\r\n        return this.http.post(`${this.apiUrl}/api/projects/delete/${id}`, params);\r\n    }\r\n\r\n    updateNotes(project: Project) {\r\n        return this.http.put(`${this.apiUrl}/api/projects/notes/${project.id}`, project);\r\n    }\r\n\r\n    changeStatus(project: any) {\r\n        return this.http.post(`${this.apiUrl}/api/projects/${project.ids}/change-status`, {'status': project.status});\r\n    }\r\n\r\n    getReleasePlanner() {\r\n        return this.http.get(`${this.apiUrl}/api/projects/release-planner`);\r\n    }\r\n\r\n    getProject() {\r\n        return this.http.get(`${this.apiUrl}/api/projects/projectmembers`, {});\r\n    }\r\n\r\n    getProjectPermission(id) {\r\n        return this.http.get(`${this.apiUrl}/api/projects/${id}/permission`, {});\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2FsZXMvaW52b2ljZXMvY29tcG9uZW50cy9wYXlwYWwtcGF5bWVudC9wYXlwYWwtcGF5bWVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {ICreateOrderRequest, IPayPalConfig} from 'ngx-paypal';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\nimport {PaymentService} from '../../../../../core/services/payment.service';\r\n\r\n@Component({\r\n    selector: 'app-paypal-payment',\r\n    templateUrl: './paypal-payment.component.html',\r\n    styleUrls: ['./paypal-payment.component.scss']\r\n})\r\n\r\nexport class PaypalPaymentComponent implements OnInit {\r\n    @Output() onPaymentSuccess: EventEmitter<any> = new EventEmitter<any>();\r\n    public payPalConfig?: IPayPalConfig;\r\n    @Input() loginUser: any;\r\n    @Input() invoice: any;\r\n    @Input() gatewaySettings: any;\r\n    unitAmount = '00.00';\r\n    amount = '00.00';\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private toastr: ToastrService,\r\n        private paymentService: PaymentService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.amount = this.invoice.total_due_amount;\r\n        this.initConfig();\r\n    }\r\n\r\n    addPayment(details) {\r\n        let params = {\r\n            invoice_id: this.invoice.id,\r\n            client_id: this.invoice.client_id,\r\n            transaction_id: details.id,\r\n            payment_method: 'PayPal Checkout',\r\n            isPaypal_payment: true,\r\n            amount: details.purchase_units[0].amount.value,\r\n            status: 'successful'\r\n        };\r\n\r\n        this.paymentService.create(params)\r\n            .subscribe(data => {\r\n                this.toastr.success(this.translate.instant('payments.messages.create'), this.translate.instant('settings.paypal_settings.title'));\r\n                this.onPaymentSuccess.emit(true);\r\n            });\r\n    }\r\n\r\n    cancelPayment() {\r\n        let params = {\r\n            invoice_id: this.invoice.id,\r\n            client_id: this.invoice.client_id,\r\n            payment_method: 'PayPal Checkout',\r\n            amount: this.amount,\r\n            isPaypal_payment: true,\r\n            status: 'failed'\r\n        };\r\n\r\n        this.paymentService.create(params)\r\n            .subscribe(data => {\r\n                this.toastr.error(this.translate.instant('payments.messages.failed'), this.translate.instant('settings.paypal_settings.title'));\r\n                this.onPaymentSuccess.emit(true);\r\n            });\r\n    }\r\n\r\n    private initConfig(): void {\r\n        this.payPalConfig = {\r\n            currency: this.loginUser.currency.code,\r\n            clientId: this.gatewaySettings.paypal_checkout_client_id,\r\n            createOrderOnClient: (data) => <ICreateOrderRequest>{\r\n                intent: 'CAPTURE',\r\n                purchase_units: [\r\n                    {\r\n                        amount: {\r\n                            currency_code: this.loginUser.currency.code,\r\n                            value: this.amount,\r\n                            breakdown: {\r\n                                item_total: {\r\n                                    currency_code: this.loginUser.currency.code,\r\n                                    value: this.amount\r\n                                }\r\n                            }\r\n                        },\r\n                    }\r\n                ]\r\n            },\r\n            advanced: {\r\n                commit: 'true'\r\n            },\r\n            style: {\r\n                label: this.gatewaySettings.paypal_checkout_label,\r\n                layout: 'vertical',\r\n                shape: 'pill'\r\n            },\r\n            onApprove: (data, actions) => {\r\n                actions.order.get().then(details => {\r\n                });\r\n            },\r\n            onClientAuthorization: (data) => {\r\n                this.addPayment(data);\r\n            },\r\n            onCancel: (data, actions) => {\r\n                this.cancelPayment();\r\n            },\r\n            onError: err => {\r\n                this.cancelPayment();\r\n            },\r\n            onClick: (data, actions) => {\r\n            },\r\n        };\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2FsZXMvaW52b2ljZXMvY29tcG9uZW50cy9zdHJpcGUtcGF5bWVudC9zdHJpcGUtcGF5bWVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\nimport {PaymentService} from '../../../../../core/services/payment.service';\r\n\r\n@Component({\r\n    selector: 'app-stripe-payment',\r\n    templateUrl: './stripe-payment.component.html',\r\n    styleUrls: ['./stripe-payment.component.scss']\r\n})\r\n\r\nexport class StripePaymentComponent implements OnInit {\r\n    @Output() onPaymentSuccess: EventEmitter<any> = new EventEmitter<any>();\r\n    @Input() loginUser: any;\r\n    @Input() invoice: any;\r\n    @Input() gatewaySettings: any;\r\n    handler: any = null;\r\n    amount = '00.00';\r\n\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private toastr: ToastrService,\r\n        private paymentService: PaymentService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.amount = this.invoice.total_due_amount;\r\n        this.loadStripe();\r\n    }\r\n\r\n    pay(amount) {\r\n        let that = this;\r\n        var handler = (<any>window).StripeCheckout.configure({\r\n            key: this.gatewaySettings.stripe_api_key,\r\n            locale: 'auto',\r\n            currency: this.loginUser.currency.code,\r\n            token: function (token: any) {\r\n                that.stripePaymentCharge(token);\r\n            }\r\n        });\r\n\r\n        handler.open({\r\n            name: this.gatewaySettings.stripe_label,\r\n            description: this.translate.instant('payments.view.payment_receipt') + ' ' + this.invoice.invoice_number,\r\n            amount: amount * 100\r\n        });\r\n    }\r\n\r\n    loadStripe() {\r\n        let style = {\r\n            base: {\r\n                iconColor: '#c4f0ff',\r\n                color: '#fff',\r\n                fontWeight: 500,\r\n                fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\r\n                fontSize: '16px',\r\n                fontSmoothing: 'antialiased',\r\n                ':-webkit-autofill': {\r\n                    color: '#fce883',\r\n                },\r\n                '::placeholder': {\r\n                    color: '#87BBFD',\r\n                },\r\n            },\r\n            invalid: {\r\n                iconColor: '#FFC7EE',\r\n                color: '#FFC7EE',\r\n            }\r\n        };\r\n\r\n        if (!window.document.getElementById('stripe-script')) {\r\n            var s = window.document.createElement('script');\r\n            s.id = 'stripe-script';\r\n            s.type = 'text/javascript';\r\n            s.src = 'https://checkout.stripe.com/checkout.js';\r\n            s.onload = () => {\r\n                this.handler = (<any>window).StripeCheckout.configure({\r\n                    key: this.gatewaySettings.stripe_api_key,\r\n                    currency: this.loginUser.currency.code,\r\n                    locale: 'auto',\r\n                    style: style,\r\n                    token: function (token: any) {\r\n                    }\r\n                });\r\n            };\r\n            window.document.body.appendChild(s);\r\n        }\r\n    }\r\n\r\n    stripePaymentCharge(token) {\r\n        let params = {\r\n            invoice_id: this.invoice.id,\r\n            client_id: this.invoice.client_id,\r\n            amount: this.amount,\r\n            currency: this.loginUser.currency.code,\r\n            description: token.id,\r\n            email: token.email,\r\n            payment_method: 'Stripe Checkout'\r\n        };\r\n\r\n        this.paymentService.stripePaymentCharge(params)\r\n            .subscribe(data => {\r\n                this.toastr.success(this.translate.instant('payments.messages.create'), this.translate.instant('settings.stripe_settings.title'));\r\n                this.onPaymentSuccess.emit(true);\r\n            }, error => {\r\n                let msg = error.error;\r\n\r\n                if (msg && msg.message) {\r\n                    msg = msg.message;\r\n                }\r\n\r\n                if (msg.error && msg.error.message) {\r\n                    msg = msg.error.message;\r\n                }\r\n\r\n                this.toastr.error(msg, this.translate.instant('settings.stripe_settings.title'));\r\n            });\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NgxPermissionsGuard} from 'ngx-permissions';\r\n\r\nimport {InvoiceListComponent} from './pages/invoice-list/invoice-list.component';\r\nimport {InvoiceCreateComponent} from './pages/invoice-create/invoice-create.component';\r\nimport {InvoiceEditComponent} from './pages/invoice-edit/invoice-edit.component';\r\nimport {InvoiceViewComponent} from './pages/invoice-view/invoice-view.component';\r\n\r\nconst routes: Routes = [{\r\n    path: '',\r\n    children: [\r\n        {\r\n            path: '',\r\n            canActivate: [NgxPermissionsGuard],\r\n            component: InvoiceListComponent\r\n        },\r\n        {\r\n            path: 'create',\r\n            canActivate: [NgxPermissionsGuard],\r\n            data: {\r\n                breadcrumbs: {\r\n                    text: 'common.create',\r\n                    icon: 'fa fa-file-pdf-o',\r\n                    show: true,\r\n                    isHome: true\r\n                },\r\n                permissions: {\r\n                    only: ['admin', 'super_admin', 'invoices_create']\r\n                }\r\n            },\r\n            component: InvoiceCreateComponent\r\n        },\r\n        {\r\n            path: 'edit/:id',\r\n            canActivate: [NgxPermissionsGuard],\r\n            data: {\r\n                breadcrumbs: {\r\n                    text: 'common.edit',\r\n                    icon: 'fa fa-file-pdf-o',\r\n                    show: true,\r\n                    isHome: true\r\n                },\r\n                permissions: {\r\n                    only: ['admin', 'super_admin', 'invoices_edit']\r\n                }\r\n            },\r\n            component: InvoiceEditComponent\r\n        },\r\n        {\r\n            path: 'detail/:id',\r\n            canActivate: [NgxPermissionsGuard],\r\n            data: {\r\n                breadcrumbs: {\r\n                    text: 'common.detail',\r\n                    icon: 'fa fa-file-pdf-o'\r\n                },\r\n                permissions: {\r\n                    only: ['admin', 'super_admin', 'invoices_view']\r\n                }\r\n            },\r\n            component: InvoiceViewComponent\r\n        }\r\n    ]\r\n}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class InvoicesRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BsDatepickerModule, BsDropdownModule, DatepickerModule, ModalModule, TooltipModule} from 'ngx-bootstrap';\r\nimport {ExportAsModule} from 'ngx-export-as';\r\nimport {NgxEditorModule} from 'ngx-editor';\r\nimport {NgxPayPalModule} from 'ngx-paypal';\r\nimport {NgxPermissionsModule} from 'ngx-permissions';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {DataTablesModule} from 'angular-datatables';\r\n\r\nimport {InvoicesRoutingModule} from './invoices-routing.module';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport {PaymentsModule} from '../payments/payments.module';\r\n\r\n\r\nimport {InvoiceListComponent} from './pages/invoice-list/invoice-list.component';\r\nimport {InvoiceCreateComponent} from './pages/invoice-create/invoice-create.component';\r\nimport {InvoiceEditComponent} from './pages/invoice-edit/invoice-edit.component';\r\nimport {PaypalPaymentComponent} from './components/paypal-payment/paypal-payment.component';\r\nimport {StripePaymentComponent} from './components/stripe-payment/stripe-payment.component';\r\nimport {InvoiceViewComponent} from './pages/invoice-view/invoice-view.component';\r\nimport {CreatePaymentComponent} from '../payments/components/create-payment/create-payment.component';\r\nimport {EditPaymentComponent} from '../payments/components/edit-payment/edit-payment.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        InvoiceListComponent,\r\n        PaypalPaymentComponent,\r\n        StripePaymentComponent,\r\n        InvoiceCreateComponent,\r\n        InvoiceEditComponent,\r\n        InvoiceViewComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        InvoicesRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgxPermissionsModule,\r\n        DataTablesModule,\r\n        ExportAsModule,\r\n        NgxEditorModule,\r\n        NgSelectModule,\r\n        NgxPayPalModule,\r\n        ModalModule.forRoot(),\r\n        DatepickerModule.forRoot(),\r\n        BsDatepickerModule.forRoot(),\r\n        TooltipModule.forRoot(),\r\n        BsDropdownModule.forRoot(),\r\n        TranslateModule.forChild({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (HttpLoaderFactory),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        PaymentsModule,\r\n        SharedModule\r\n    ],\r\n    entryComponents: [\r\n        CreatePaymentComponent,\r\n        EditPaymentComponent\r\n    ],\r\n    providers: []\r\n})\r\nexport class InvoicesModule {\r\n}\r\n\r\n// Required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n","export default \".ng-select.ng-select-single .ng-select-container {\\n  min-width: 500px;\\n}\\n\\n.inp {\\n  border: none;\\n  border-bottom: 1px solid #e8eef3;\\n  padding: 5px 10px;\\n  outline: none;\\n  width: 100%;\\n}\\n\\n[placeholder]:focus::-webkit-input-placeholder {\\n  transition: text-indent 0.4s 0.4s ease;\\n  text-indent: -100%;\\n  opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zYWxlcy9pbnZvaWNlcy9wYWdlcy9pbnZvaWNlLWNyZWF0ZS9DOlxcVXNlcnNcXHRodWFuXFxPbmVEcml2ZVxcRGVza3RvcFxcZ2xhdmFsLXRodWFuZGluaC9zcmNcXGFwcFxcbW9kdWxlc1xcc2FsZXNcXGludm9pY2VzXFxwYWdlc1xcaW52b2ljZS1jcmVhdGVcXGludm9pY2UtY3JlYXRlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL3NhbGVzL2ludm9pY2VzL3BhZ2VzL2ludm9pY2UtY3JlYXRlL2ludm9pY2UtY3JlYXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksZ0JBQUE7QUNBSjs7QURHQTtFQUNJLFlBQUE7RUFDQSxnQ0FBQTtFQUNBLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLFdBQUE7QUNBSjs7QURHQTtFQUNJLHNDQUFBO0VBQ0Esa0JBQUE7RUFDQSxVQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3NhbGVzL2ludm9pY2VzL3BhZ2VzL2ludm9pY2UtY3JlYXRlL2ludm9pY2UtY3JlYXRlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5nLXNlbGVjdC5uZy1zZWxlY3Qtc2luZ2xlXHJcbi5uZy1zZWxlY3QtY29udGFpbmVyIHtcclxuICAgIG1pbi13aWR0aDogNTAwcHg7XHJcbn1cclxuXHJcbi5pbnAge1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlOGVlZjM7XHJcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuW3BsYWNlaG9sZGVyXTpmb2N1czo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICB0cmFuc2l0aW9uOiB0ZXh0LWluZGVudCAwLjRzIDAuNHMgZWFzZTtcclxuICAgIHRleHQtaW5kZW50OiAtMTAwJTtcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxuIiwiLm5nLXNlbGVjdC5uZy1zZWxlY3Qtc2luZ2xlIC5uZy1zZWxlY3QtY29udGFpbmVyIHtcbiAgbWluLXdpZHRoOiA1MDBweDtcbn1cblxuLmlucCB7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlOGVlZjM7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xuICBvdXRsaW5lOiBub25lO1xuICB3aWR0aDogMTAwJTtcbn1cblxuW3BsYWNlaG9sZGVyXTpmb2N1czo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIHRyYW5zaXRpb246IHRleHQtaW5kZW50IDAuNHMgMC40cyBlYXNlO1xuICB0ZXh0LWluZGVudDogLTEwMCU7XG4gIG9wYWNpdHk6IDE7XG59Il19 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {InvoiceService} from '../../../../../core/services/invoice.service';\r\nimport {ItemService} from '../../../../../core/services/item.service';\r\nimport {ClientService} from '../../../../../core/services/client.service';\r\nimport {TaxService} from '../../../../../core/services/tax.service';\r\nimport {ProjectService} from '../../../../../core/services/project.service';\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\nimport {InvoiceSettingService} from '../../../../../core/services/invoice-setting.service';\r\n\r\n@Component({\r\n    selector: 'app-invoice-create',\r\n    templateUrl: './invoice-create.component.html',\r\n    styleUrls: ['./invoice-create.component.scss'],\r\n    providers: [DatePipe]\r\n})\r\n\r\nexport class InvoiceCreateComponent implements OnInit {\r\n    createInvoiceForm: FormGroup;\r\n    selectedItem: number;\r\n    loginUser: any;\r\n    invoiceSettings: any;\r\n    projects: any;\r\n    clients = [];\r\n    items = [];\r\n    itemsArray = [];\r\n    taxes = [];\r\n    itemTaxes = [];\r\n    taxesNameValues = [];\r\n    total_discount = 0.00;\r\n    isFormSubmitted = false;\r\n    isFormLoaded = false;\r\n    invoices = {\r\n        sub_total: 0,\r\n        total_taxes: 0,\r\n        discount: 0.00,\r\n        adjustment: 0.00,\r\n        total: 0\r\n    };\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public datepipe: DatePipe,\r\n        private router: Router,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private invoiceService: InvoiceService,\r\n        private clientService: ClientService,\r\n        private itemService: ItemService,\r\n        private taxService: TaxService,\r\n        private projectService: ProjectService,\r\n        private invoiceSettingService: InvoiceSettingService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    get invoiceControl() {\r\n        return this.createInvoiceForm.controls;\r\n    }\r\n\r\n    get itemControl() {\r\n        return this.createInvoiceForm.get('item');\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getInvoiceSettings();\r\n        this.getProjects();\r\n        this.getClients();\r\n        this.getTaxes();\r\n    }\r\n\r\n    loadForm() {\r\n        this.createInvoiceForm = this.formBuilder.group({\r\n            project_id: [null],\r\n            client_id: [null, Validators.required],\r\n            invoice_date: [new Date(), Validators.required],\r\n            due_date: [this.addDays(new Date(), this.invoiceSettings.due_after), Validators.required],\r\n            reference: [null],\r\n            status: ['unpaid'],\r\n            discount_type: ['percent'],\r\n            selectedItem: [null],\r\n            discount: [0],\r\n            adjustment: [0],\r\n            item: this.formBuilder.group({\r\n                item_name: [null],\r\n                item_description: [null],\r\n                quantity: [null],\r\n                unit_price: [null],\r\n                item_unit: [null],\r\n                taxes: [null],\r\n                amount: [null]\r\n            }),\r\n            items: []\r\n        });\r\n\r\n        this.isFormLoaded = true;\r\n    }\r\n\r\n    getProjects() {\r\n        this.projectService.getAll().subscribe(data => {\r\n            this.projects = data;\r\n        });\r\n    }\r\n\r\n    getTaxes() {\r\n        this.taxService.getAll().subscribe(\r\n            data => {\r\n                this.taxes = data;\r\n\r\n                for (let iRow in this.taxes) {\r\n                    if (this.taxesNameValues[this.taxes[iRow].id] == undefined) {\r\n                        this.taxesNameValues[this.taxes[iRow].id] = [];\r\n                    }\r\n\r\n                    this.taxesNameValues[this.taxes[iRow].id] = this.taxes[iRow];\r\n                }\r\n            });\r\n    }\r\n\r\n    getClients() {\r\n        this.clientService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.clients = data;\r\n                    this.getInvoiceSettings();\r\n                });\r\n    }\r\n\r\n    getInvoiceSettings() {\r\n        this.invoiceSettingService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.invoiceSettings = data;\r\n                    this.getItems();\r\n                });\r\n    }\r\n\r\n    getItems() {\r\n        this.itemService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.items = data;\r\n                    this.loadForm();\r\n                });\r\n    }\r\n\r\n    addDays(date: Date, days: number): Date {\r\n        return new Date(date.setDate(date.getDate() + days));\r\n    }\r\n\r\n    changeItem(event) {\r\n        let taxes = [];\r\n        for (let iRow in event.taxes) {\r\n            taxes.push(event.taxes[iRow].id);\r\n        }\r\n\r\n        this.itemControl.patchValue({item_name: event.name});\r\n        this.itemControl.patchValue({item_description: event.description});\r\n        this.itemControl.patchValue({quantity: 1});\r\n        this.itemControl.patchValue({unit_price: event.price});\r\n        this.itemControl.patchValue({item_unit: event.unit});\r\n        this.itemControl.patchValue({taxes: taxes});\r\n    }\r\n\r\n    resetChildForm() {\r\n        this.itemControl.patchValue({item_name: null});\r\n        this.itemControl.patchValue({item_description: null});\r\n        this.itemControl.patchValue({quantity: null});\r\n        this.itemControl.patchValue({unit_price: null});\r\n        this.itemControl.patchValue({item_unit: null});\r\n        this.itemControl.patchValue({taxes: []});\r\n    }\r\n\r\n    changeDiscountType(event) {\r\n        if (event.id == 'not_discount') {\r\n            this.invoices.discount = 0;\r\n        }\r\n\r\n        this.getItemTaxes();\r\n    }\r\n\r\n    changeDiscountAdjustment(event, type) {\r\n        if (type == 'discount') {\r\n            if (this.createInvoiceForm.value.discount_type == 'not_discount') {\r\n                this.toastr.error(this.translate.instant('invoices.create.error_messages.message7'), this.translate.instant('invoices.title'));\r\n                return;\r\n            }\r\n            this.invoices.discount = parseFloat(event.target.value);\r\n        } else {\r\n            this.invoices.adjustment = parseFloat(event.target.value);\r\n        }\r\n\r\n        if (isNaN(this.invoices.discount)) {\r\n            this.invoices.discount = 0;\r\n        }\r\n\r\n        if (isNaN(this.invoices.adjustment)) {\r\n            this.invoices.adjustment = 0;\r\n        }\r\n\r\n        this.getItemTaxes();\r\n    }\r\n\r\n    projectChange(event: any) {\r\n        if (this.createInvoiceForm.value.project_id == undefined || this.createInvoiceForm.value.project_id == null || this.createInvoiceForm.value.project_id == '') {\r\n            this.createInvoiceForm.patchValue({client_id: null});\r\n            return;\r\n        }\r\n\r\n        this.createInvoiceForm.patchValue({client_id: event.client_id});\r\n    }\r\n\r\n    addItem(event) {\r\n        event.preventDefault();\r\n        let item = this.createInvoiceForm.value.item;\r\n\r\n        if (item.item_name == null || item.quantity == null || item.unit_price == null) {\r\n            this.toastr.error(this.translate.instant('invoices.create.error_messages.message6'), this.translate.instant('invoices.title'));\r\n            return false;\r\n        }\r\n\r\n        this.itemsArray.push(item);\r\n        this.resetChildForm();\r\n        this.invoices.discount = this.createInvoiceForm.value.discount;\r\n        this.invoices.adjustment = this.createInvoiceForm.value.adjustment;\r\n        this.getItemTaxes();\r\n    }\r\n\r\n    saveItemDetail(index, name, value) {\r\n        this.itemsArray[index][name] = value;\r\n        this.getItemTaxes();\r\n    }\r\n\r\n    deleteItem(index) {\r\n        this.itemsArray.splice(index, 1);\r\n        this.getItemTaxes();\r\n    }\r\n\r\n    getItemTaxes() {\r\n        this.itemTaxes = [];\r\n        this.invoices.sub_total = 0;\r\n        this.invoices.total_taxes = 0;\r\n        this.invoices.total = 0;\r\n        this.total_discount = 0.00;\r\n        let totalItemAmount = 0;\r\n\r\n        // --\r\n        // Count item taxes\r\n        for (let iRow in this.itemsArray) {\r\n            totalItemAmount = this.itemsArray[iRow].quantity * this.itemsArray[iRow].unit_price;\r\n\r\n            for (let jRow in this.itemsArray[iRow].taxes) {\r\n                let totalTaxes = 0;\r\n                if (this.itemTaxes[this.itemsArray[iRow].taxes[jRow]] == undefined) {\r\n                    this.itemTaxes[this.itemsArray[iRow].taxes[jRow]] = 0;\r\n                }\r\n\r\n                totalTaxes = (totalItemAmount * this.taxesNameValues[this.itemsArray[iRow].taxes[jRow]].tax_rate) / 100;\r\n                this.invoices.total_taxes += totalTaxes;\r\n\r\n                this.itemTaxes[this.itemsArray[iRow].taxes[jRow]] = this.itemTaxes[this.itemsArray[iRow].taxes[jRow]] + totalTaxes;\r\n            }\r\n\r\n            // --\r\n            // Count sub total\r\n            this.invoices.sub_total += totalItemAmount;\r\n        }\r\n\r\n        // --\r\n        // Count total\r\n        if (this.createInvoiceForm.value.discount_type == 'percent') {\r\n            this.total_discount = ((this.invoices.sub_total + this.invoices.total_taxes) * this.invoices.discount) / 100;\r\n        } else {\r\n            this.total_discount = this.invoices.discount;\r\n        }\r\n\r\n        this.invoices.total = (this.invoices.sub_total + this.invoices.total_taxes - this.total_discount) + this.invoices.adjustment;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.createInvoiceForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        if (this.itemsArray.length == 0) {\r\n            this.toastr.error(this.translate.instant('invoices.create.error_messages.message5'), this.translate.instant('invoices.title'));\r\n            return;\r\n        }\r\n\r\n        let invoiceObj = {\r\n            'project_id': this.createInvoiceForm.value.project_id,\r\n            'client_id': this.createInvoiceForm.value.client_id,\r\n            'invoice_date': this.datepipe.transform(this.createInvoiceForm.value.invoice_date, 'yyyy-MM-dd'),\r\n            'due_date': this.createInvoiceForm.value.due_date,\r\n            'status': this.createInvoiceForm.value.status,\r\n            'reference': this.createInvoiceForm.value.reference,\r\n            'adjustment': this.createInvoiceForm.value.adjustment,\r\n            'discount_type': this.createInvoiceForm.value.discount_type,\r\n            'discount': this.createInvoiceForm.value.discount,\r\n            'items': this.itemsArray\r\n        };\r\n\r\n        this.invoiceService.create(invoiceObj)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('invoices.messages.create'), this.translate.instant('invoices.title'));\r\n                    this.router.navigate(['invoices']);\r\n                });\r\n    }\r\n\r\n}\r\n","export default \".ng-select.ng-select-single .ng-select-container {\\n  min-width: 500px;\\n}\\n\\n.inp {\\n  border: none;\\n  border-bottom: 1px solid #e8eef3;\\n  padding: 5px 10px;\\n  outline: none;\\n  width: 100%;\\n}\\n\\n[placeholder]:focus::-webkit-input-placeholder {\\n  transition: text-indent 0.4s 0.4s ease;\\n  text-indent: -100%;\\n  opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zYWxlcy9pbnZvaWNlcy9wYWdlcy9pbnZvaWNlLWVkaXQvQzpcXFVzZXJzXFx0aHVhblxcT25lRHJpdmVcXERlc2t0b3BcXGdsYXZhbC10aHVhbmRpbmgvc3JjXFxhcHBcXG1vZHVsZXNcXHNhbGVzXFxpbnZvaWNlc1xccGFnZXNcXGludm9pY2UtZWRpdFxcaW52b2ljZS1lZGl0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL3NhbGVzL2ludm9pY2VzL3BhZ2VzL2ludm9pY2UtZWRpdC9pbnZvaWNlLWVkaXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxnQkFBQTtBQ0FKOztBREdBO0VBQ0ksWUFBQTtFQUNBLGdDQUFBO0VBQ0EsaUJBQUE7RUFDQSxhQUFBO0VBQ0EsV0FBQTtBQ0FKOztBREdBO0VBQ0ksc0NBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2FsZXMvaW52b2ljZXMvcGFnZXMvaW52b2ljZS1lZGl0L2ludm9pY2UtZWRpdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uZy1zZWxlY3Qubmctc2VsZWN0LXNpbmdsZVxyXG4ubmctc2VsZWN0LWNvbnRhaW5lciB7XHJcbiAgICBtaW4td2lkdGg6IDUwMHB4O1xyXG59XHJcblxyXG4uaW5wIHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZThlZWYzO1xyXG4gICAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbltwbGFjZWhvbGRlcl06Zm9jdXM6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gICAgdHJhbnNpdGlvbjogdGV4dC1pbmRlbnQgMC40cyAwLjRzIGVhc2U7XHJcbiAgICB0ZXh0LWluZGVudDogLTEwMCU7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG59XHJcbiIsIi5uZy1zZWxlY3Qubmctc2VsZWN0LXNpbmdsZSAubmctc2VsZWN0LWNvbnRhaW5lciB7XG4gIG1pbi13aWR0aDogNTAwcHg7XG59XG5cbi5pbnAge1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZThlZWYzO1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgb3V0bGluZTogbm9uZTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbltwbGFjZWhvbGRlcl06Zm9jdXM6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICB0cmFuc2l0aW9uOiB0ZXh0LWluZGVudCAwLjRzIDAuNHMgZWFzZTtcbiAgdGV4dC1pbmRlbnQ6IC0xMDAlO1xuICBvcGFjaXR5OiAxO1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {InvoiceService} from '../../../../../core/services/invoice.service';\r\nimport {ItemService} from '../../../../../core/services/item.service';\r\nimport {ClientService} from '../../../../../core/services/client.service';\r\nimport {TaxService} from '../../../../../core/services/tax.service';\r\nimport {ProjectService} from '../../../../../core/services/project.service';\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\n\r\n@Component({\r\n    selector: 'app-invoice-edit',\r\n    templateUrl: './invoice-edit.component.html',\r\n    styleUrls: ['./invoice-edit.component.scss']\r\n})\r\n\r\nexport class InvoiceEditComponent implements OnInit {\r\n    editInvoiceForm: FormGroup;\r\n    selectedItem: number;\r\n    loginUser: any;\r\n    invoice: any;\r\n    projects: any;\r\n    invoiceSettings: any;\r\n    clients = [];\r\n    items = [];\r\n    itemsArray = [];\r\n    taxes = [];\r\n    itemTaxes = [];\r\n    taxesNameValues = [];\r\n    total_discount = 0.00;\r\n    isFormSubmitted = false;\r\n    isFormLoaded = false;\r\n    invoices = {\r\n        sub_total: 0,\r\n        total_taxes: 0,\r\n        discount: 0.00,\r\n        adjustment: 0.00,\r\n        total: 0\r\n    };\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public datepipe: DatePipe,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private invoiceService: InvoiceService,\r\n        private clientService: ClientService,\r\n        private itemService: ItemService,\r\n        private taxService: TaxService,\r\n        private projectService: ProjectService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n        this.route.paramMap.subscribe(params => {\r\n            this.getById(params.get('id'));\r\n        });\r\n    }\r\n\r\n    get invoiceControl() {\r\n        return this.editInvoiceForm.controls;\r\n    }\r\n\r\n    get itemControl() {\r\n        return this.editInvoiceForm.get('item');\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getProjects();\r\n        this.getTaxes();\r\n    }\r\n\r\n    loadForm() {\r\n        this.editInvoiceForm = this.formBuilder.group({\r\n            id: [this.invoice.id],\r\n            project_id: [this.invoice.project_id],\r\n            client_id: [this.invoice.client_id, Validators.required],\r\n            invoice_date: [new Date(this.invoice.invoice_date), Validators.required],\r\n            due_date: [new Date(this.invoice.due_date), Validators.required],\r\n            reference: [this.invoice.reference],\r\n            status: [this.invoice.status],\r\n            discount_type: [this.invoice.discount_type],\r\n            invoice_number: [this.invoice.invoice_number],\r\n            selectedItem: [null],\r\n            discount: [this.invoice.discount],\r\n            adjustment: [this.invoice.adjustment],\r\n            item: this.formBuilder.group({\r\n                item_name: [null],\r\n                item_description: [null],\r\n                quantity: [null],\r\n                unit_price: [null],\r\n                item_unit: [null],\r\n                taxes: [null],\r\n                amount: [0]\r\n            }),\r\n            items: this.invoice.items\r\n        });\r\n\r\n        // --\r\n        // Render selected items\r\n        this.setSelectedItems(this.invoice.items);\r\n\r\n        this.isFormLoaded = true;\r\n    }\r\n\r\n    getProjects() {\r\n        this.projectService.getAll()\r\n            .subscribe(data => {\r\n                this.projects = data;\r\n            });\r\n    }\r\n\r\n    getById(invoiceId) {\r\n        this.invoiceService.getById(invoiceId)\r\n            .subscribe(data => {\r\n                this.invoice = data;\r\n                this.getClients();\r\n            });\r\n    }\r\n\r\n    getClients() {\r\n        this.clientService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.clients = data;\r\n                    this.getItems();\r\n                });\r\n    }\r\n\r\n    getItems() {\r\n        this.itemService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.items = data;\r\n                    this.loadForm();\r\n                });\r\n    }\r\n\r\n    getTaxes() {\r\n        this.taxService.getAll().subscribe(\r\n            data => {\r\n                this.taxes = data;\r\n\r\n                for (let iRow in this.taxes) {\r\n                    if (this.taxesNameValues[this.taxes[iRow].id] == undefined) {\r\n                        this.taxesNameValues[this.taxes[iRow].id] = [];\r\n                    }\r\n\r\n                    this.taxesNameValues[this.taxes[iRow].id] = this.taxes[iRow];\r\n                }\r\n            });\r\n    }\r\n\r\n    addDays(date: Date, days: number): Date {\r\n        return new Date(date.setDate(date.getDate() + days));\r\n    }\r\n\r\n    projectChange(event: any) {\r\n        if (this.editInvoiceForm.value.project_id == undefined || this.editInvoiceForm.value.project_id == null || this.editInvoiceForm.value.project_id == '') {\r\n            this.editInvoiceForm.patchValue({client_id: null});\r\n            return;\r\n        }\r\n\r\n        this.editInvoiceForm.patchValue({client_id: event.client_id});\r\n    }\r\n\r\n    setSelectedItems(items) {\r\n        for (let iRow in items) {\r\n            let taxes = [];\r\n            for (let jRow in items[iRow].taxes) {\r\n                taxes.push(items[iRow].taxes[jRow].id);\r\n            }\r\n\r\n            items[iRow].taxes = taxes;\r\n            this.itemsArray.push(items[iRow]);\r\n        }\r\n\r\n        this.invoices.discount = this.invoice.discount;\r\n        this.invoices.adjustment = this.invoice.adjustment;\r\n\r\n        this.getItemTaxes();\r\n    }\r\n\r\n    changeItem(event) {\r\n        let taxes = [];\r\n        for (let iRow in event.taxes) {\r\n            taxes.push(event.taxes[iRow].id);\r\n        }\r\n\r\n        this.itemControl.patchValue({item_name: event.name});\r\n        this.itemControl.patchValue({item_description: event.description});\r\n        this.itemControl.patchValue({quantity: 1});\r\n        this.itemControl.patchValue({unit_price: event.price});\r\n        this.itemControl.patchValue({item_unit: event.unit});\r\n        this.itemControl.patchValue({taxes: taxes});\r\n    }\r\n\r\n    resetChildForm() {\r\n        this.itemControl.patchValue({item_name: null});\r\n        this.itemControl.patchValue({item_description: null});\r\n        this.itemControl.patchValue({quantity: null});\r\n        this.itemControl.patchValue({unit_price: null});\r\n        this.itemControl.patchValue({item_unit: null});\r\n        this.itemControl.patchValue({taxes: []});\r\n    }\r\n\r\n    changeDiscountType(event) {\r\n        if (event.id == 'not_discount') {\r\n            this.invoices.discount = 0;\r\n        }\r\n\r\n        this.getItemTaxes();\r\n    }\r\n\r\n    changeDiscountAdjustment(event, type) {\r\n        if (type == 'discount') {\r\n            if (this.editInvoiceForm.value.discount_type == 'not_discount') {\r\n                this.toastr.error(this.translate.instant('invoices.create.error_messages.message7'), this.translate.instant('invoices.title'));\r\n                return;\r\n            }\r\n            this.invoices.discount = parseFloat(event.target.value);\r\n        } else {\r\n            this.invoices.adjustment = parseFloat(event.target.value);\r\n        }\r\n\r\n        if (isNaN(this.invoices.discount)) {\r\n            this.invoices.discount = 0;\r\n        }\r\n\r\n        if (isNaN(this.invoices.adjustment)) {\r\n            this.invoices.adjustment = 0;\r\n        }\r\n\r\n        this.getItemTaxes();\r\n    }\r\n\r\n    addItem(event) {\r\n        event.preventDefault();\r\n        let item = this.editInvoiceForm.value.item;\r\n\r\n        if (item.item_name == null || item.quantity == null || item.unit_price == null) {\r\n            this.toastr.error(this.translate.instant('invoices.create.error_messages.message6'), this.translate.instant('invoices.title'));\r\n            return false;\r\n        }\r\n\r\n        this.itemsArray.push(item);\r\n        this.resetChildForm();\r\n        this.invoices.discount = this.editInvoiceForm.value.discount;\r\n        this.invoices.adjustment = this.editInvoiceForm.value.adjustment;\r\n        this.getItemTaxes();\r\n    }\r\n\r\n    saveItemDetail(index, name, value) {\r\n        this.itemsArray[index][name] = value;\r\n        this.getItemTaxes();\r\n    }\r\n\r\n    deleteItem(index) {\r\n        this.itemsArray.splice(index, 1);\r\n        this.getItemTaxes();\r\n    }\r\n\r\n    getItemTaxes() {\r\n        this.itemTaxes = [];\r\n        this.invoices.sub_total = 0;\r\n        this.invoices.total_taxes = 0;\r\n        this.invoices.total = 0;\r\n        this.total_discount = 0.00;\r\n        let totalItemAmount = 0;\r\n\r\n        // --\r\n        // Count item taxes\r\n        for (let iRow in this.itemsArray) {\r\n            totalItemAmount = this.itemsArray[iRow].quantity * this.itemsArray[iRow].unit_price;\r\n\r\n            for (let jRow in this.itemsArray[iRow].taxes) {\r\n                let totalTaxes = 0;\r\n                if (this.itemTaxes[this.itemsArray[iRow].taxes[jRow]] == undefined) {\r\n                    this.itemTaxes[this.itemsArray[iRow].taxes[jRow]] = 0;\r\n                }\r\n\r\n                totalTaxes = (totalItemAmount * this.taxesNameValues[this.itemsArray[iRow].taxes[jRow]].tax_rate) / 100;\r\n                this.invoices.total_taxes += totalTaxes;\r\n\r\n                this.itemTaxes[this.itemsArray[iRow].taxes[jRow]] = this.itemTaxes[this.itemsArray[iRow].taxes[jRow]] + totalTaxes;\r\n\r\n            }\r\n\r\n            // --\r\n            // Count sub total\r\n            this.invoices.sub_total += totalItemAmount;\r\n        }\r\n\r\n        // --\r\n        // Count total\r\n        if (this.editInvoiceForm.value.discount_type == 'percent') {\r\n            this.total_discount = ((this.invoices.sub_total + this.invoices.total_taxes) * this.invoices.discount) / 100;\r\n        } else {\r\n            this.total_discount = this.invoices.discount;\r\n        }\r\n\r\n        this.invoices.total = (this.invoices.sub_total + this.invoices.total_taxes - this.total_discount) + this.invoices.adjustment;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.editInvoiceForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        if (this.itemsArray.length == 0) {\r\n            this.toastr.error(this.translate.instant('invoices.create.error_messages.message5'), this.translate.instant('invoices.title'));\r\n            return;\r\n        }\r\n\r\n        let invoiceObj = {\r\n            'id': this.editInvoiceForm.value.id,\r\n            'project_id': this.editInvoiceForm.value.project_id,\r\n            'client_id': this.editInvoiceForm.value.client_id,\r\n            'invoice_date': this.datepipe.transform(this.editInvoiceForm.value.invoice_date, 'yyyy-MM-dd'),\r\n            'due_date': this.editInvoiceForm.value.due_date,\r\n            'status': this.editInvoiceForm.value.status,\r\n            'reference': this.editInvoiceForm.value.reference,\r\n            'adjustment': this.invoices.adjustment,\r\n            'discount_type': this.editInvoiceForm.value.discount_type,\r\n            'discount': this.invoices.discount,\r\n            'items': this.itemsArray\r\n        };\r\n\r\n        this.invoiceService.update(invoiceObj).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('invoices.messages.update'), this.translate.instant('invoices.title'));\r\n            this.router.navigate(['invoices']);\r\n        });\r\n    }\r\n\r\n}\r\n","export default \".hide_empty_message ::ng-deep .odd {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zYWxlcy9pbnZvaWNlcy9wYWdlcy9pbnZvaWNlLWxpc3QvQzpcXFVzZXJzXFx0aHVhblxcT25lRHJpdmVcXERlc2t0b3BcXGdsYXZhbC10aHVhbmRpbmgvc3JjXFxhcHBcXG1vZHVsZXNcXHNhbGVzXFxpbnZvaWNlc1xccGFnZXNcXGludm9pY2UtbGlzdFxcaW52b2ljZS1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL3NhbGVzL2ludm9pY2VzL3BhZ2VzL2ludm9pY2UtbGlzdC9pbnZvaWNlLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3NhbGVzL2ludm9pY2VzL3BhZ2VzL2ludm9pY2UtbGlzdC9pbnZvaWNlLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlkZV9lbXB0eV9tZXNzYWdlIDo6bmctZGVlcCAub2RkIHtcclxuICAgIGRpc3BsYXk6IG5vbmVcclxufSIsIi5oaWRlX2VtcHR5X21lc3NhZ2UgOjpuZy1kZWVwIC5vZGQge1xuICBkaXNwbGF5OiBub25lO1xufSJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {ExportAsConfig, ExportAsService} from 'ngx-export-as';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {Subject} from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\nimport {InvoiceService} from '../../../../../core/services/invoice.service';\r\n\r\nimport {DatatablesResponse} from '../../../../../core/helpers/datatables-response.helper';\r\nimport {environment} from '../../../../../../environments/environment';\r\n\r\nimport {DataTableDirective} from 'angular-datatables';\r\n\r\nimport 'datatables.net';\r\nimport 'datatables.net-bs4';\r\n\r\n@Component({\r\n    selector: 'app-invoice-list',\r\n    templateUrl: './invoice-list.component.html',\r\n    styleUrls: ['./invoice-list.component.scss']\r\n})\r\nexport class InvoiceListComponent implements OnInit {\r\n    public apiUrl = environment.apiUrl;\r\n    @ViewChild(DataTableDirective, {static: true})\r\n    dtElement: DataTableDirective;\r\n    dtTrigger: Subject<any> = new Subject();\r\n    dtOptions: any = {};\r\n    loginUser: any;\r\n    invoices = [];\r\n    exportAsConfig: ExportAsConfig = {\r\n        type: 'pdf',\r\n        elementIdOrContent: 'invoices_table',\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private exportAsService: ExportAsService,\r\n        private http: HttpClient,\r\n        private toastr: ToastrService,\r\n        private authenticationService: AuthenticationService,\r\n        private invoiceService: InvoiceService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadDatatable();\r\n    }\r\n\r\n    loadDatatable() {\r\n        let that = this;\r\n        this.dtOptions = {\r\n            pagingType: 'full_numbers',\r\n            pageLength: that.loginUser.settings.tables_pagination_limit,\r\n            serverSide: true,\r\n            processing: true,\r\n            dom: '<\"html5buttons\"B>ltfrtip',\r\n            order: [0],\r\n            columns: [\r\n                {\r\n                    'sortable': true,\r\n                    'width': '16%',\r\n                    'target': [0]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '16%',\r\n                    'target': [1]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '16%',\r\n                    'target': [2]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '16%',\r\n                    'target': [3]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '16%',\r\n                    'target': [4]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '15%',\r\n                    'target': [5]\r\n                },\r\n                {\r\n                    'sortable': false,\r\n                    'width': '5%',\r\n                    'target': [6]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    extend: 'csv',\r\n                    className: 'btn btn-datatable-gredient',\r\n                    action: function (e, dt, node, config) {\r\n                        that.exportFiles('csv');\r\n                    }\r\n                }, {\r\n                    extend: 'excel',\r\n                    className: 'btn btn-datatable-gredient',\r\n                    action: function (e, dt, node, config) {\r\n                        that.exportFiles('xlsx');\r\n                    }\r\n                }, {\r\n                    extend: 'pdf',\r\n                    className: 'btn btn-datatable-gredient',\r\n                    action: function (e, dt, node, config) {\r\n                        that.exportFiles('pdf');\r\n                    }\r\n                }\r\n            ],\r\n            language: {\r\n                'sEmptyTable': this.translate.instant('common.datatable.sEmptyTable'),\r\n                'sInfo': this.translate.instant('common.datatable.sInfo'),\r\n                'sInfoEmpty': this.translate.instant('common.datatable.sInfoEmpty'),\r\n                'sSearch': '',\r\n                'sInfoPostFix': this.translate.instant('common.datatable.sInfoPostFix'),\r\n                'sInfoThousands': this.translate.instant('common.datatable.sInfoThousands'),\r\n                'sLengthMenu': this.translate.instant('common.datatable.sLengthMenu'),\r\n                'sLoadingRecords': this.translate.instant('common.datatable.sLoadingRecords'),\r\n                'sProcessing': this.translate.instant('common.datatable.sProcessing'),\r\n                'sZeroRecords': this.translate.instant('common.datatable.sZeroRecords'),\r\n                'sSearchPlaceholder': this.translate.instant('common.datatable.sSearchPlaceholder'),\r\n                'oPaginate': {\r\n                    'sFirst': this.translate.instant('common.datatable.oPaginate.sFirst'),\r\n                    'sLast': this.translate.instant('common.datatable.oPaginate.sLast'),\r\n                    'sNext': this.translate.instant('common.datatable.oPaginate.sNext'),\r\n                    'sPrevious': this.translate.instant('common.datatable.oPaginate.sPrevious')\r\n                },\r\n                'oAria': {\r\n                    'sSortAscending': this.translate.instant('common.datatable.oAria.sSortAscending'),\r\n                    'sSortDescending': this.translate.instant('common.datatable.oAria.sSortDescending')\r\n                }\r\n            },\r\n            ajax: (dataTablesParameters: any, callback) => {\r\n                dataTablesParameters = {\r\n                    columns: dataTablesParameters.columns,\r\n                    draw: dataTablesParameters.draw,\r\n                    length: dataTablesParameters.length,\r\n                    order: dataTablesParameters.order,\r\n                    search: dataTablesParameters.search,\r\n                    start: dataTablesParameters.start,\r\n                };\r\n                this.http.post<DatatablesResponse>(this.apiUrl + '/api/all-invoices', dataTablesParameters, {}).subscribe(resp => {\r\n                    that.invoices = resp.data;\r\n\r\n                    callback({\r\n                        recordsTotal: resp.recordsTotal,\r\n                        recordsFiltered: resp.recordsFiltered,\r\n                        data: [],\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    exportFiles(type) {\r\n        this.exportAsConfig.type = type;\r\n        this.exportAsService.save(this.exportAsConfig, this.translate.instant('invoices.title')).subscribe(() => {\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dtTrigger.next();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n    rerender(): void {\r\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n            dtInstance.destroy();\r\n            setTimeout(() => {\r\n                this.dtTrigger.next();\r\n\r\n                if (this.invoices.length > 0) {\r\n                    $('.tfoot_dt').addClass('d-none');\r\n                } else {\r\n                    $('.tfoot_dt').removeClass('d-none');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    deleteInvoice(id) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text') + this.translate.instant('invoices.title1'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.invoiceService.delete(id).subscribe(data => {\r\n                    this.rerender();\r\n                    this.toastr.success(this.translate.instant('invoices.messages.delete'), this.translate.instant('invoices.title'));\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2FsZXMvaW52b2ljZXMvcGFnZXMvaW52b2ljZS12aWV3L2ludm9pY2Utdmlldy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {ExportAsConfig, ExportAsService} from 'ngx-export-as';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {NgxRolesService} from 'ngx-permissions';\r\n\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\nimport {InvoiceSettingService} from '../../../../../core/services/invoice-setting.service';\r\nimport {InvoiceService} from '../../../../../core/services/invoice.service';\r\nimport {HelperService} from '../../../../../core/services/helper.service';\r\nimport {TaxService} from '../../../../../core/services/tax.service';\r\nimport {SettingService} from '../../../../../core/services/setting.service';\r\nimport {PaymentMethodService} from '../../../../../core/services/payment-method.service';\r\n\r\nimport {CreatePaymentComponent} from '../../../payments/components/create-payment/create-payment.component';\r\n\r\nimport {environment} from '../../../../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-invoice-view',\r\n    templateUrl: './invoice-view.component.html',\r\n    styleUrls: ['./invoice-view.component.scss']\r\n})\r\n\r\nexport class InvoiceViewComponent implements OnInit {\r\n    public modalRef: BsModalRef;\r\n    loginUser: any;\r\n    invoice: any;\r\n    taxes: any;\r\n    invoiceSettings: any;\r\n    gatewaySettings: any;\r\n    paymentModes: any;\r\n    itemTaxes = [];\r\n    taxesNameValues = [];\r\n    isPageLoad = false;\r\n    paymentMethod = 'paypal';\r\n    isDownloadable = false;\r\n    invoices = {\r\n        sub_total: 0,\r\n        total_taxes: 0,\r\n        total: 0,\r\n        total_due_amount: 0\r\n    };\r\n    exportAsConfig: ExportAsConfig = {\r\n        type: 'pdf',\r\n        elementIdOrContent: 'invoice_table',\r\n    };\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public ngxRolesService: NgxRolesService,\r\n        private modalService: BsModalService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private toastr: ToastrService,\r\n        private exportAsService: ExportAsService,\r\n        private invoiceService: InvoiceService,\r\n        private settingService: SettingService,\r\n        private invoiceSettingService: InvoiceSettingService,\r\n        private taxService: TaxService,\r\n        private helperService: HelperService,\r\n        private authenticationService: AuthenticationService,\r\n        private paymentMethodService: PaymentMethodService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n        this.route.paramMap.subscribe(params => {\r\n            this.getById(params.get('id'), true);\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getInvoiceSettings();\r\n        this.getPaymentGatewaySettings();\r\n    }\r\n\r\n    getById(invoiceId, isLoad = false) {\r\n        this.invoiceService.getById(invoiceId).subscribe(data => {\r\n            this.invoice = data;\r\n\r\n            if (isLoad) {\r\n                this.getPaymentMethods();\r\n                this.getInvoiceAmount();\r\n                this.getCheckPermission();\r\n            }\r\n        });\r\n    }\r\n\r\n    getCheckPermission() {\r\n        let role = this.ngxRolesService.getRole('admin');\r\n\r\n        if (this.loginUser.id == this.invoice.client_id) {\r\n            this.isDownloadable = true;\r\n        }\r\n\r\n        if ((role && role.name == 'admin') || this.loginUser.is_super_admin) {\r\n            this.isDownloadable = true;\r\n        }\r\n    }\r\n\r\n    getInvoiceAmount() {\r\n        for (let iRow in this.invoice.payments) {\r\n            this.invoices.total_due_amount += this.invoice.payments[iRow].amount;\r\n        }\r\n    }\r\n\r\n    getInvoiceSettings() {\r\n        this.invoiceSettingService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.invoiceSettings = data;\r\n                });\r\n    }\r\n\r\n    getPaymentGatewaySettings() {\r\n        this.settingService.getPaymentGatewaySettings()\r\n            .subscribe(\r\n                data => {\r\n                    this.gatewaySettings = data;\r\n                });\r\n    }\r\n\r\n    getPaymentMethods() {\r\n        this.paymentMethodService.getAll()\r\n            .subscribe(data => {\r\n                this.paymentModes = data;\r\n                this.getTaxes();\r\n            });\r\n    }\r\n\r\n    getTaxes() {\r\n        this.taxService.getAll().subscribe(\r\n            data => {\r\n                this.taxes = data;\r\n\r\n                for (let iRow in this.taxes) {\r\n                    if (this.taxesNameValues[this.taxes[iRow].id] == undefined) {\r\n                        this.taxesNameValues[this.taxes[iRow].id] = [];\r\n                    }\r\n\r\n                    this.taxesNameValues[this.taxes[iRow].id] = this.taxes[iRow];\r\n                }\r\n\r\n                this.getItemTaxes();\r\n            });\r\n\r\n    }\r\n\r\n    getItemTaxes() {\r\n        this.invoices.sub_total = 0;\r\n        this.invoices.total_taxes = 0;\r\n        this.invoices.total = 0;\r\n        let totalItemAmount = 0;\r\n        let total_discount = 0;\r\n\r\n        // --\r\n        // Count item taxes\r\n        for (let iRow in this.invoice.items) {\r\n            totalItemAmount = this.invoice.items[iRow].quantity * this.invoice.items[iRow].unit_price;\r\n\r\n            for (let jRow in this.invoice.items[iRow].taxes) {\r\n                let totalTaxes = 0;\r\n                if (this.itemTaxes[this.invoice.items[iRow].taxes[jRow].id] == undefined) {\r\n                    this.itemTaxes[this.invoice.items[iRow].taxes[jRow].id] = 0;\r\n                }\r\n\r\n                totalTaxes = (totalItemAmount * this.invoice.items[iRow].taxes[jRow].tax_rate) / 100;\r\n                this.invoices.total_taxes += totalTaxes;\r\n\r\n                this.itemTaxes[this.invoice.items[iRow].taxes[jRow].id] = this.itemTaxes[this.invoice.items[iRow].taxes[jRow].id] + totalTaxes;\r\n\r\n            }\r\n\r\n            // --\r\n            // Count sub total\r\n            this.invoices.sub_total += totalItemAmount;\r\n        }\r\n\r\n        // --\r\n        // Count total\r\n        this.invoices.total = (this.invoices.sub_total + this.invoices.total_taxes - this.invoice.total_discount) + this.invoice.adjustment;\r\n\r\n        this.isPageLoad = true;\r\n    }\r\n\r\n    openPaymentCreateModal() {\r\n        let modalConfigs = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered animated fadeIn',\r\n            initialState: {\r\n                invoice: this.invoice\r\n            }\r\n        };\r\n\r\n        this.modalRef = this.modalService.show(CreatePaymentComponent, modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getById(this.invoice.id);\r\n        });\r\n    }\r\n\r\n    getPaymentSuccess() {\r\n        this.getById(this.invoice.id);\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}