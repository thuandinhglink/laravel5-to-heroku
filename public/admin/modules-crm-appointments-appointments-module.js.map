{"version":3,"sources":["./src/app/modules/crm/appointments/components/create-appointment/create-appointment.component.html","./src/app/modules/crm/appointments/components/edit-appointment/edit-appointment.component.html","./src/app/modules/crm/appointments/pages/appointments-detail/appointments-detail.component.html","./src/app/modules/crm/appointments/pages/appointments-list/appointments-list.component.html","./src/app/modules/crm/appointments/pages/appointments/appointments.component.html","./src/app/core/helpers/crm-helper.ts","./src/app/core/services/appointments.service.ts","./src/app/modules/crm/appointments/appointments-routing.module.ts","./src/app/modules/crm/appointments/appointments.module.ts","./src/app/modules/crm/appointments/components/create-appointment/create-appointment.component.scss","./src/app/modules/crm/appointments/components/create-appointment/create-appointment.component.ts","./src/app/modules/crm/appointments/components/edit-appointment/edit-appointment.component.scss","./src/app/modules/crm/appointments/components/edit-appointment/edit-appointment.component.ts","./src/app/modules/crm/appointments/pages/appointments-detail/appointments-detail.component.scss","./src/app/modules/crm/appointments/pages/appointments-detail/appointments-detail.component.ts","./src/app/modules/crm/appointments/pages/appointments-list/appointments-list.component.scss","./src/app/modules/crm/appointments/pages/appointments-list/appointments-list.component.ts","./src/app/modules/crm/appointments/pages/appointments/appointments.component.scss","./src/app/modules/crm/appointments/pages/appointments/appointments.component.ts"],"names":[],"mappings":"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","file":"modules-crm-appointments-appointments-module.js","sourcesContent":["export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-calendar-plus-o\\\"></i>&nbsp;{{'appointments.title' | translate}}</h2>\\r\\n    <button (click)=\\\"bsCreateModalRef.hide()\\\" aria-label=\\\"Close\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isPageLoad\\\" [formGroup]=\\\"createAppointmentForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && appointmentControl.provider_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"provider_id\\\">{{'appointments.create.fields.provider' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <ng-select [items]=\\\"providers\\\" [multiple]=\\\"false\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"provider_id\\\" labelForId=\\\"provider_id\\\" placeholder=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>{{item.firstname}} {{item.lastname}}</ng-template>\\r\\n                        </ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && appointmentControl.provider_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"appointmentControl.provider_id.errors.required\\\">{{'appointments.create.error_messages.message1' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && appointmentControl.start_date_time.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"start_date_time\\\">{{'appointments.create.fields.start_date' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <owl-date-time #startDT></owl-date-time>\\r\\n                            <input (dateTimeChange)=\\\"startDateChange($event)\\\" [min]=\\\"minDate\\\" [owlDateTimeTrigger]=\\\"startDT\\\" [owlDateTime]=\\\"startDT\\\" aria-describedby=\\\"inputGroupPrepend2\\\" class=\\\"form-control\\\" formControlName=\\\"start_date_time\\\" id=\\\"start_date_time\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder1' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && appointmentControl.start_date_time.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"appointmentControl.start_date_time.errors\\\">{{'appointments.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                        <span *ngIf=\\\"availabileSlots && availabileSlots.length > 0\\\" class=\\\"badge badge-secondary\\\">{{'appointments.budges.title1' | translate}}:\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let slots of availabileSlots; let last = last\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{slots.start_date_time | dateTimeFormatFilter: 'HH:mm'}} to {{slots.end_date_time | dateTimeFormatFilter: 'HH:mm'}}\\r\\n                                <ng-container *ngIf=\\\"!last\\\"><br></ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && appointmentControl.end_date_time.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"end_date_time\\\">{{'appointments.create.fields.end_date' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <owl-date-time #endDT></owl-date-time>\\r\\n                            <input [min]=\\\"createAppointmentForm.get('start_date_time').value\\\" [owlDateTimeTrigger]=\\\"endDT\\\" [owlDateTime]=\\\"endDT\\\" aria-describedby=\\\"inputGroupPrepend3\\\" class=\\\"form-control\\\" formControlName=\\\"end_date_time\\\" id=\\\"end_date_time\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder2' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && appointmentControl.end_date_time.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"appointmentControl.end_date_time.errors\\\">{{'appointments.create.error_messages.message3' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"title\\\">{{'appointments.create.fields.title' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && appointmentControl.title.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"title\\\" id=\\\"title\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\">\\r\\n                                <i aria-hidden=\\\"true\\\" class=\\\"fa fa-lock\\\"></i>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && appointmentControl.title.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"appointmentControl.title.errors.required\\\">{{'appointments.create.error_messages.message4' | translate}}</div>\\r\\n                                <div *ngIf=\\\"appointmentControl.title.errors.maxlength\\\">{{'appointments.create.error_messages.message5' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"client_id\\\">{{'appointments.create.fields.client' | translate}}</label>\\r\\n                        <ng-select [items]=\\\"clients\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"client_id\\\" labelForId=\\\"client_id\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder4' | translate}}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>{{item.firstname}} {{item.lastname}}</ng-template>\\r\\n                        </ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"location\\\">{{'appointments.create.fields.location' | translate}}</label>\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"location\\\" id=\\\"location\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder5' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"location\\\">{{'appointments.create.fields.attendees' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && appointmentControl.attendees.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"attendees\\\" id=\\\"attendees\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder6' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && appointmentControl.attendees.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"appointmentControl.attendees.errors.required\\\">{{'appointments.create.error_messages.message7' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"note\\\">{{'appointments.create.fields.notes' | translate}}</label>\\r\\n                        <app-ngx-editor [placeholder]=\\\"''\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"note\\\" height=\\\"100px\\\" id=\\\"note\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.create' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-calendar-plus-o\\\"></i>&nbsp;{{'appointments.title' | translate}}</h2>\\r\\n    <button (click)=\\\"bsEditModalRef.hide()\\\" aria-label=\\\"Close\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isPageLoad\\\" [formGroup]=\\\"editAppointmentForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && appointmentControl.provider_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"provider_id\\\">{{'appointments.create.fields.provider' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <ng-select (change)=\\\"changeProvider($event)\\\" [items]=\\\"providers\\\" [multiple]=\\\"false\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"provider_id\\\" labelForId=\\\"provider_id\\\" placeholder=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>{{item.firstname}} {{item.lastname}}</ng-template>\\r\\n                        </ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && appointmentControl.provider_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"appointmentControl.provider_id.errors.required\\\">{{'appointments.create.error_messages.message1' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && appointmentControl.start_date_time.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"start_date_time\\\">{{'appointments.create.fields.start_date' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <owl-date-time #startDT></owl-date-time>\\r\\n                            <input (dateTimeChange)=\\\"startDateChange($event)\\\" [min]=\\\"minDate\\\" [owlDateTimeTrigger]=\\\"startDT\\\" [owlDateTime]=\\\"startDT\\\" aria-describedby=\\\"inputGroupPrepend2\\\" class=\\\"form-control\\\" formControlName=\\\"start_date_time\\\" id=\\\"start_date_time\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder1' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && appointmentControl.start_date_time.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"appointmentControl.start_date_time.errors\\\">{{'appointments.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                        <span *ngIf=\\\"availabileSlots && availabileSlots.length > 0\\\" class=\\\"badge badge-secondary\\\">{{'appointments.budges.title1' | translate}}:\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let slots of availabileSlots; let last = last\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{slots.start_date_time | dateTimeFormatFilter: 'HH:mm'}} to {{slots.end_date_time | dateTimeFormatFilter: 'HH:mm'}}\\r\\n                                <ng-container *ngIf=\\\"!last\\\"><br></ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && appointmentControl.end_date_time.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"end_date_time\\\">{{'appointments.create.fields.end_date' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <owl-date-time #endDT></owl-date-time>\\r\\n                            <input [min]=\\\"editAppointmentForm.get('start_date_time').value\\\" [owlDateTimeTrigger]=\\\"endDT\\\" [owlDateTime]=\\\"endDT\\\" aria-describedby=\\\"inputGroupPrepend3\\\" class=\\\"form-control\\\" formControlName=\\\"end_date_time\\\" id=\\\"end_date_time\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder2' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && appointmentControl.end_date_time.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"appointmentControl.end_date_time.errors\\\">{{'appointments.create.error_messages.message3' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"title\\\">{{'appointments.create.fields.title' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && appointmentControl.title.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"title\\\" id=\\\"title\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\">\\r\\n                                <i aria-hidden=\\\"true\\\" class=\\\"fa fa-lock\\\"></i>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && appointmentControl.title.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"appointmentControl.title.errors.required\\\">{{'appointments.create.error_messages.message4' | translate}}</div>\\r\\n                                <div *ngIf=\\\"appointmentControl.title.errors.maxlength\\\">{{'appointments.create.error_messages.message5' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"client_id\\\">{{'appointments.create.fields.client' | translate}}</label>\\r\\n                        <ng-select [items]=\\\"clients\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"client_id\\\" labelForId=\\\"client_id\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder4' | translate}}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>{{item.firstname}} {{item.lastname}}</ng-template>\\r\\n                        </ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && appointmentControl.status.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"status\\\">{{'appointments.create.fields.status' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <ng-select [items]=\\\"('appointments.status' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"status\\\" labelForId=\\\"status\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder7' | translate}}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && appointmentControl.status.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"appointmentControl.status.errors.required\\\">{{'appointments.create.error_messages.message8' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"location\\\">{{'appointments.create.fields.location' | translate}}</label>\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"location\\\" id=\\\"location\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder5' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"location\\\">{{'appointments.create.fields.attendees' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && appointmentControl.attendees.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"attendees\\\" id=\\\"attendees\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder6' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && appointmentControl.attendees.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"appointmentControl.attendees.errors.required\\\">{{'appointments.create.error_messages.message7' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"note\\\">{{'appointments.create.fields.notes' | translate}}</label>\\r\\n                        <app-ngx-editor [placeholder]=\\\"''\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"note\\\" height=\\\"100px\\\" id=\\\"note\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.update' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<section class=\\\"detail-page\\\">\\r\\n    <div *ngIf=\\\"isPageLoaded\\\" class=\\\"card\\\">\\r\\n        <div class=\\\"card-content\\\">\\r\\n            <div class=\\\" border-bottom\\\">\\r\\n                <div class=\\\"d-flex justify-content-between\\\">\\r\\n                    <div class=\\\" task-name d-lg-flex\\\">\\r\\n                        <h4 class=\\\"task-id\\\"><span>#{{appointment.generated_id}}</span></h4>\\r\\n                        <p class=\\\"task-title ml-lg-2\\\">\\r\\n                            {{appointment.title}}\\r\\n                        </p>\\r\\n                    </div>\\r\\n                    <div class=\\\"task-action mr-3\\\">\\r\\n                        <div class=\\\"status-dropdown\\\">\\r\\n                            <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'appointment_edit']; else elseBlock1; then thenBlock1\\\"></div>\\r\\n                            <ng-template #thenBlock1>\\r\\n                                <div class=\\\"btn-group\\\" dropdown>\\r\\n                                    <button aria-controls=\\\"dropdown-basic\\\" class=\\\"btn dropdown-toggle select-btn-lg\\\" dropdownToggle id=\\\"button-basic\\\" type=\\\"button\\\">{{getTranslateStatus(appointment.status) | translate}}&nbsp;<span class=\\\"caret\\\"></span>\\r\\n                                    </button>\\r\\n                                    <ul *dropdownMenu aria-labelledby=\\\"button-basic\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic\\\" role=\\\"menu\\\">\\r\\n                                        <li *ngFor=\\\"let status of ('appointments.status' | translate)\\\" role=\\\"menuitem\\\">\\r\\n                                            <a (click)=\\\"changeAppointmentStatus([appointment.id], status);appointment.status = status.id\\\" [ngClass]=\\\"{'active': appointment.status == status.id}\\\" class=\\\"dropdown-item btn btn-sm {{status.class}}\\\">{{status.label}}</a>\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                            <ng-template #elseBlock1>\\r\\n                                <ng-container *ngFor=\\\"let status of ('appointments.status' | translate)\\\">\\r\\n                                    <div class=\\\"budges-status\\\">\\r\\n                                        <span *ngIf=\\\"status.id == appointment.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                    </div>\\r\\n                                </ng-container>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form class=\\\"form-body overflow-hidden mt-3\\\">\\r\\n                    <!-- Detail fields -->\\r\\n                    <div class=\\\"col-lg-12 \\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-lg-4 col-md-6 mb-3\\\">\\r\\n                                <label>{{'appointments.columns.requester' | translate }}</label>\\r\\n                                <div class=\\\"people-lists\\\">\\r\\n                                    <a [routerLink]=\\\"['/users/profile', appointment.user_id]\\\" class=\\\"btn btn-profile-info rounded-circle text-dark\\\" placement=\\\"top\\\" tooltip=\\\"{{appointment.requesters.firstname}} {{appointment.requesters.lastname}}\\\">\\r\\n                                        <img *ngIf=\\\"appointment.requesters.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{appointment.requesters.avatar}}\\\"/>\\r\\n                                        <img *ngIf=\\\"!appointment.requesters.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-4 col-md-6 mb-3\\\">\\r\\n                                <label>{{'appointments.create.fields.provider' | translate }}</label>\\r\\n                                <div class=\\\"detail-inline\\\">\\r\\n                                    {{appointment.providers.firstname}} {{appointment.providers.lastname}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-4 col-md-6 mb-3\\\">\\r\\n                                <label>{{'appointments.create.fields.client' | translate }}</label>\\r\\n                                <div class=\\\"detail-inline\\\">\\r\\n                                    <ng-container *ngIf=\\\"appointment.client_id; else elseBlock4\\\">\\r\\n                                        {{appointment.clients.firstname}} {{appointment.clients.lastname}}\\r\\n                                    </ng-container>\\r\\n                                    <ng-template #elseBlock4>-</ng-template>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-4 col-md-6 mb-3\\\">\\r\\n                                <label>{{'appointments.create.fields.attendees' | translate }}</label>\\r\\n                                <div class=\\\"detail-inline\\\">\\r\\n                                    {{appointment.attendees}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-4 col-md-6 mb-3\\\">\\r\\n                                <label>{{'appointments.create.fields.start_date' | translate }}</label>\\r\\n                                <div class=\\\"detail-inline\\\">{{appointment.start_date_time | dateTimeFormatFilter: loginUser.settings.date_time_format}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-4 col-md-6 mb-3\\\">\\r\\n                                <label>{{'appointments.create.fields.end_date' | translate }}</label>\\r\\n                                <div class=\\\"detail-inline\\\">{{appointment.end_date_time | dateTimeFormatFilter: loginUser.settings.date_time_format}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-4 col-md-6 mb-3\\\">\\r\\n                                <label>{{'appointments.create.fields.location' | translate }}</label>\\r\\n                                <div class=\\\"detail-inline\\\">{{appointment.location}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-4 col-md-6 mb-3\\\">\\r\\n                                <label>{{'common.created' | translate}}</label>\\r\\n                                <div class=\\\"detail-inline\\\">{{appointment.created_at | dateTimeFormatFilter : loginUser.settings.date_time_format}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-4 col-md-6 mb-3\\\">\\r\\n                                <label>{{'common.updated' | translate}}</label>\\r\\n                                <div class=\\\"detail-inline\\\">{{appointment.updated_at | dateTimeFormatFilter : loginUser.settings.date_time_format}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"border-bottom\\\"></div>\\r\\n                            <!-- Description field -->\\r\\n                            <div class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 mt-3 mb-3 description-detail \\\">\\r\\n                                <h4 class=\\\"sub-title\\\"><span>{{'appointments.create.fields.notes' | translate}}</span>\\r\\n                                </h4>\\r\\n                                <div class=\\\"detail-inline\\\">\\r\\n                                    <p [innerHtml]=\\\"appointment.note\\\"></p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"hide_empty_message\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card pl-2 pr-2 pb-2\\\">\\r\\n                <!-- Card header -->\\r\\n                <div class=\\\"card-header pl-0 pr-0 border-bottom\\\">\\r\\n                    <h4 class=\\\"main-title mt-2\\\"><span>{{'appointments.title' | translate}}</span></h4>\\r\\n                    <div class=\\\"card-buttons\\\">\\r\\n                        <a *ngxPermissionsOnly=\\\"['admin', 'super_admin']\\\" [routerLink]=\\\"['/providers']\\\" class=\\\"btn btn-create  mb-0 mr-1\\\" tooltip=\\\"{{'providers.title' | translate}}\\\"><i class=\\\"fa fa-industry\\\"></i><span>{{'providers.title' | translate}}</span></a>\\r\\n                        <a [routerLink]=\\\"['/appointments/calendar']\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'common.switch_to_calendar' | translate}}\\\"><i class=\\\"fa fa-calendar-plus-o\\\"></i><span>{{'common.calendar' | translate}}</span></a>\\r\\n                        <button (click)=\\\"openAppointmentCreateModal()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'appointment_create']\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'common.create' | translate}}\\\">\\r\\n                            <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- Card content -->\\r\\n                <div class=\\\"card-content pt-3\\\">\\r\\n                    <!-- Card body -->\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <!-- Filter buttons -->\\r\\n                        <div *ngIf=\\\"isPageLoaded\\\" class=\\\"d-flex flex-column flex-lg-row d-lg-inline-flex mb-3\\\">\\r\\n                            <div class=\\\"pl-lg-0 btn-filters\\\">\\r\\n                                <button (click)=\\\"filterByStatus(1)\\\" [ngClass]=\\\"{'active': statusfilterId==1}\\\" class=\\\"btn btn-raised open\\\" type=\\\"button\\\">\\r\\n                                    <p>{{'common.status.reserved' | translate}}</p>\\r\\n                                    <span class=\\\"badge badge-light\\\">{{statusCount[1]}}</span>\\r\\n                                </button>\\r\\n                                <button (click)=\\\"filterByStatus(2)\\\" [ngClass]=\\\"{'active': statusfilterId ==2}\\\" class=\\\"btn btn-raised assigned\\\" type=\\\"button\\\">\\r\\n                                    <p>{{'common.status.confirmed' | translate}}</p>\\r\\n                                    <span class=\\\"badge badge-light\\\">{{statusCount[2]}}</span>\\r\\n                                </button>\\r\\n                                <button (click)=\\\"filterByStatus(3)\\\" [ngClass]=\\\"{'active': statusfilterId==3}\\\" class=\\\"btn btn-raised completed\\\" type=\\\"button\\\">\\r\\n                                    <p>{{'common.status.finished' | translate}}</p>\\r\\n                                    <span class=\\\"badge badge-light\\\">{{statusCount[3]}}</span>\\r\\n                                </button>\\r\\n                                <button (click)=\\\"filterByStatus(4)\\\" [ngClass]=\\\"{'active': statusfilterId==4}\\\" class=\\\"btn btn-raised cancel\\\" type=\\\"button\\\">\\r\\n                                    <p>{{'common.status.canceled' | translate}}</p>\\r\\n                                    <span class=\\\"badge badge-light\\\">{{statusCount[4]}}</span>\\r\\n                                </button>\\r\\n                                <button [ngClass]=\\\"{'active': statusfilterId ==0}\\\" [routerLink]=\\\"['/appointments']\\\" class=\\\"btn btn-raised btn-secondary\\\" type=\\\"button\\\">\\r\\n                                    <p>{{'common.status.total' | translate}}</p>\\r\\n                                    <span class=\\\"badge badge-light\\\">{{statusCount[0]}}</span>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!-- Appointment list datatable -->\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                                    <table [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"table table-bordered table-hover b4-datatable\\\" datatable id=\\\"appointments_table\\\" width=\\\"100%\\\">\\r\\n                                        <thead>\\r\\n                                        <tr>\\r\\n                                            <th>{{'appointments.columns.id' | translate}}</th>\\r\\n                                            <th>{{'appointments.columns.title' | translate}}</th>\\r\\n                                            <th>{{'appointments.columns.provider' | translate}}</th>\\r\\n                                            <th>{{'appointments.columns.start_time' | translate}}</th>\\r\\n                                            <th>{{'appointments.columns.end_time' | translate}}</th>\\r\\n                                            <th>{{'appointments.columns.location' | translate}}</th>\\r\\n                                            <th>{{'appointments.columns.status' | translate}}</th>\\r\\n                                            <th>{{'appointments.columns.actions' | translate}}</th>\\r\\n                                        </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody *ngIf=\\\"appointments?.length != 0\\\">\\r\\n                                        <tr *ngFor=\\\"let appointment of appointments; index as i\\\">\\r\\n                                            <td>\\r\\n                                                <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'appointment_view'] else elseBlock1;\\\">\\r\\n                                                    <a [routerLink]=\\\"['/appointments/detail', appointment.id]\\\" tooltip=\\\"{{'common.view' | translate}}\\\">{{appointment.generated_id}}</a>\\r\\n                                                </ng-container>\\r\\n                                                <ng-template #elseBlock1>{{appointment.generated_id}}</ng-template>\\r\\n                                            </td>\\r\\n                                            <td>{{appointment.title}}</td>\\r\\n                                            <td>{{appointment.provider_firstname}} {{appointment.provider_lastname}}</td>\\r\\n                                            <td>{{appointment.start_date_time | dateTimeFormatFilter: loginUser.settings.date_time_format}}</td>\\r\\n                                            <td>{{appointment.end_date_time | dateTimeFormatFilter: loginUser.settings.date_time_format}}</td>\\r\\n                                            <td>{{appointment.location}}</td>\\r\\n                                            <td class=\\\"status-dropdown\\\">\\r\\n                                                <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'appointment_edit']; else elseBlock1; then thenBlock1\\\"></div>\\r\\n                                                <ng-template #elseBlock1>\\r\\n                                                    <ng-container *ngFor=\\\"let status of ('appointments.status' | translate)\\\">\\r\\n                                                        <div class=\\\"budges-status\\\">\\r\\n                                                            <span *ngIf=\\\"status.id == appointment.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                                        </div>\\r\\n                                                    </ng-container>\\r\\n                                                </ng-template>\\r\\n                                                <ng-template #thenBlock1>\\r\\n                                                    <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                        <button aria-controls=\\\"dropdown-basic\\\" class=\\\"btn dropdown-toggle select-btn-lg\\\" dropdownToggle id=\\\"button-basic\\\" type=\\\"button\\\">{{getTranslateStatus(appointment.status) | translate}}&nbsp;<span class=\\\"caret\\\"></span>\\r\\n                                                        </button>\\r\\n                                                        <ul *dropdownMenu aria-labelledby=\\\"button-basic\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic\\\" role=\\\"menu\\\">\\r\\n                                                            <li *ngFor=\\\"let status of ('appointments.status' | translate)\\\" role=\\\"menuitem\\\">\\r\\n                                                                <a (click)=\\\"changeAppointmentStatus([appointment.id], status);appointment.status = status.id\\\" [ngClass]=\\\"{'active': appointment.status == status.id}\\\" class=\\\"dropdown-item btn btn-sm {{status.class}}\\\">{{status.label}}</a>\\r\\n                                                            </li>\\r\\n                                                        </ul>\\r\\n                                                    </div>\\r\\n                                                </ng-template>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"actions-dropdown\\\">\\r\\n                                                <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                    <button aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-1\\\" type=\\\"button\\\">\\r\\n                                                        <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                                                    <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                                        <li role=\\\"menuitem\\\">\\r\\n                                                            <a (click)=\\\"openAppointmentEditModal(appointment)\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'appointment_edit']\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                        <li role=\\\"menuitem\\\">\\r\\n                                                            <a (click)=\\\"deleteAppointment(appointment.id)\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'appointment_delete']\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        </tbody>\\r\\n                                        <tfoot *ngIf=\\\"appointments?.length == 0\\\" class=\\\"tfoot_dt\\\">\\r\\n                                        <tr>\\r\\n                                            <td class=\\\"no-data-available text-center\\\" colspan=\\\"8\\\">{{'common.datatable.sEmptyTable' | translate}}</td>\\r\\n                                        </tr>\\r\\n                                        </tfoot>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","export default \"<section>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card pb-2\\\">\\r\\n                <div class=\\\"card-header pl-0 pr-0 border-bottom\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <h4 class=\\\"main-title mt-2\\\"><span>{{'appointments.title' | translate}}</span></h4>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-8 text-lg-right\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-5 mb-lg-0 mb-2\\\">\\r\\n                                        <form class=\\\"form mt-1 \\\">\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp=\\\"bsDatepicker\\\" (bsValueChange)=\\\"appointmentYearChange($event)\\\" [(bsValue)]=\\\"year\\\" [bsConfig]=\\\"{ dateInputFormat: 'MM-YYYY', minMode : minMode }\\\" aria-describedby=\\\"inputGroupPrepend1\\\" bsDatepicker class=\\\"form-control\\\" id=\\\"search_for_month\\\" name=\\\"search_for_month\\\" placeholder=\\\"{{'appointments.create.placeholders.placeholder8' | translate}}\\\" type=\\\"text\\\" value=\\\"{{ year | dateTimeFormatFilter:'MM-YYYY' }}\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                            </div>\\r\\n                                        </form>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-7`\\\">\\r\\n                                        <a [routerLink]=\\\"['/appointments']\\\" class=\\\"btn btn-create  mb-0 mr-1\\\" tooltip=\\\"{{'common.switch_to_list' | translate}}\\\"><i class=\\\"fa fa-list\\\"></i><span>{{'common.list' | translate}}</span></a>\\r\\n                                        <a *ngxPermissionsOnly=\\\"['admin', 'super_admin']\\\" [routerLink]=\\\"['/providers']\\\" class=\\\"btn btn-create  mb-0 mr-1\\\" tooltip=\\\"{{'providers.title' | translate}}\\\"><i class=\\\"fa fa-industry\\\"></i><span>{{'providers.title' | translate}}</span></a>\\r\\n                                        <button (click)=\\\"openAppointmentCreateModal()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'appointment_create']\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'common.create' | translate}}\\\">\\r\\n                                            <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body pl-2 pr-2 pt-3 pb-3\\\">\\r\\n                    <!-- Filter buttons -->\\r\\n                    <div *ngIf=\\\"isCalendarLoaded\\\" class=\\\"row btn-filters mb-3\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <button (click)=\\\"filterByStatus(1)\\\" [ngClass]=\\\"{'active': appoitmentFilterKey === 1}\\\" class=\\\"btn btn-raised open\\\">\\r\\n                                <p>{{'common.status.reserved' | translate}}</p>\\r\\n                                <span class=\\\"badge badge-light\\\">{{appointments.statusCount[1]}}</span>\\r\\n                            </button>\\r\\n                            <button (click)=\\\"filterByStatus(2)\\\" [ngClass]=\\\"{'active': appoitmentFilterKey == 2}\\\" class=\\\"btn btn-raised assigned\\\">\\r\\n                                <p>{{'common.status.confirmed' | translate}}</p>\\r\\n                                <span class=\\\"badge badge-light\\\">{{appointments.statusCount[2]}}</span>\\r\\n                            </button>\\r\\n                            <button (click)=\\\"filterByStatus(3)\\\" [ngClass]=\\\"{'active': appoitmentFilterKey == 3}\\\" class=\\\"btn btn-raised completed\\\">\\r\\n                                <p>{{'common.status.finished' | translate}}</p>\\r\\n                                <span class=\\\"badge badge-light\\\">{{appointments.statusCount[3]}}</span>\\r\\n                            </button>\\r\\n                            <button (click)=\\\"filterByStatus(4)\\\" [ngClass]=\\\"{'active': appoitmentFilterKey == 4}\\\" class=\\\"btn btn-raised cancel\\\">\\r\\n                                <p>{{'common.status.canceled' | translate}}</p>\\r\\n                                <span class=\\\"badge badge-light\\\">{{appointments.statusCount[4]}}</span>\\r\\n                            </button>\\r\\n                            <button (click)=\\\"filterByStatus(0)\\\" [ngClass]=\\\"{'active': appoitmentFilterKey == 0 }\\\" class=\\\"btn btn-raised btn-secondary\\\">\\r\\n                                <p>{{'common.status.total' | translate}}</p>\\r\\n                                <span class=\\\"badge badge-light\\\">{{appointments.statusCount[0]}}</span>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <div class=\\\"row text-center\\\">\\r\\n\\r\\n                                <div class=\\\"col-md-6 d-flex mb-lg-0 mb-2 ml-lg-0 ml-4\\\">\\r\\n                                    <div (viewDateChange)=\\\"closeOpenMonthViewDay()\\\" [(viewDate)]=\\\"viewDate\\\" [view]=\\\"view\\\" class=\\\"btn calender-day\\\" mwlCalendarPreviousView>\\r\\n                                        <i class=\\\"calendar-icon fa fa-chevron-left\\\"></i>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"ml-2 mr-2\\\">\\r\\n                                        <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'): loginUser.language }}</h3>\\r\\n                                    </div>\\r\\n                                    <div (viewDateChange)=\\\"closeOpenMonthViewDay()\\\" [(viewDate)]=\\\"viewDate\\\" [view]=\\\"view\\\" class=\\\"btn calender-day\\\" mwlCalendarNextView>\\r\\n                                        <i class=\\\"calendar-icon fa fa-chevron-right\\\"></i>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6 mb-lg-0 mb-2 text-lg-right\\\">\\r\\n                                    <div class=\\\"btn-view-date\\\">\\r\\n                                        <div [(viewDate)]=\\\"viewDate\\\" class=\\\"btn calender-today mb-1\\\" mwlCalendarToday>{{'calendar.today' | translate}}</div>\\r\\n                                        <div (click)=\\\"setView(CalendarView.Month)\\\" [class.active]=\\\"view === CalendarView.Month\\\" class=\\\"btn calender-today mb-1\\\">{{'calendar.month' | translate}}</div>\\r\\n                                        <div (click)=\\\"setView(CalendarView.Week)\\\" [class.active]=\\\"view === CalendarView.Week\\\" class=\\\"btn calender-today mb-1\\\">{{'calendar.week' | translate}}</div>\\r\\n                                        <div (click)=\\\"setView(CalendarView.Day)\\\" [class.active]=\\\"view === CalendarView.Day\\\" class=\\\"btn calender-today mb-1\\\">{{'calendar.day' | translate}}</div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div [ngSwitch]=\\\"view\\\">\\r\\n                                <mwl-calendar-month-view (dayClicked)=\\\"dayClicked($event.day)\\\" *ngSwitchCase=\\\"CalendarView.Month\\\" [activeDayIsOpen]=\\\"activeDayIsOpen\\\" [events]=\\\"events\\\" [locale]=\\\"loginUser.language\\\" [refresh]=\\\"refresh\\\" [viewDate]=\\\"viewDate\\\"></mwl-calendar-month-view>\\r\\n                                <mwl-calendar-week-view *ngSwitchCase=\\\"CalendarView.Week\\\" [events]=\\\"events\\\" [locale]=\\\"loginUser.language\\\" [refresh]=\\\"refresh\\\" [viewDate]=\\\"viewDate\\\"></mwl-calendar-week-view>\\r\\n                                <mwl-calendar-day-view *ngSwitchCase=\\\"CalendarView.Day\\\" [events]=\\\"events\\\" [locale]=\\\"loginUser.language\\\" [refresh]=\\\"refresh\\\" [viewDate]=\\\"viewDate\\\"></mwl-calendar-day-view>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","//--\r\n// Appointments\r\nexport const appointment_status_key_value = [];\r\nappointment_status_key_value[1] = 'common.status.reserved';\r\nappointment_status_key_value[2] = 'common.status.confirmed';\r\nappointment_status_key_value[3] = 'common.status.finished';\r\nappointment_status_key_value[4] = 'common.status.canceled';\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AppointmentsService {\r\n\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll(status, date) {\r\n        return this.http.get(`${this.apiUrl}/api/appointments?status=${status}&date=${date}`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/appointments/${id}`);\r\n    }\r\n\r\n    create(appointments) {\r\n        return this.http.post(`${this.apiUrl}/api/appointments`, appointments);\r\n    }\r\n\r\n    update(appointments) {\r\n        return this.http.put(`${this.apiUrl}/api/appointments/${appointments.id}`, appointments);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${this.apiUrl}/api/appointments/${id}`);\r\n    }\r\n\r\n    changeStatus(appointments: any) {\r\n        return this.http.post(`${this.apiUrl}/api/appointments/${appointments.id}/change-status`, {status: appointments.status});\r\n    }\r\n\r\n    getAppointmentAvailabilities(appointments) {\r\n        return this.http.get(`${this.apiUrl}/api/appointments/availabilities/${appointments.provider_id}/${appointments.start_date_time}`);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NgxPermissionsGuard} from 'ngx-permissions';\r\n\r\nimport {AppointmentsComponent} from './pages/appointments/appointments.component';\r\nimport {AppointmentsListComponent} from './pages/appointments-list/appointments-list.component';\r\nimport {AppointmentsDetailComponent} from './pages/appointments-detail/appointments-detail.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: AppointmentsListComponent\r\n            },\r\n            {\r\n                path: 'calendar',\r\n                canActivate: [NgxPermissionsGuard],\r\n                component: AppointmentsComponent,\r\n                data: {\r\n                    breadcrumbs: {\r\n                        text: 'common.calendar',\r\n                        icon: 'fa fa-calendar-plus-o',\r\n                        hasParams: true,\r\n                        show: true,\r\n                        isHome: true\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                path: 'detail/:id',\r\n                canActivate: [NgxPermissionsGuard],\r\n                component: AppointmentsDetailComponent,\r\n                data: {\r\n                    breadcrumbs: {\r\n                        text: 'common.detail',\r\n                        icon: 'fa fa-calendar-plus-o',\r\n                        hasParams: true,\r\n                        show: true,\r\n                        isHome: true\r\n                    },\r\n                    permissions: {\r\n                        only: ['admin', 'super_admin', 'appointment_view']\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                path: ':statusId',\r\n                component: AppointmentsListComponent\r\n            }\r\n        ]\r\n    }];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppointmentsRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BsDatepickerModule, BsDropdownModule, DatepickerModule, ModalModule, TooltipModule} from 'ngx-bootstrap';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport {ExportAsModule} from 'ngx-export-as';\r\nimport {NgxEditorModule} from 'ngx-editor';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {NgxPermissionsModule} from 'ngx-permissions';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {OwlDateTimeModule, OwlNativeDateTimeModule} from 'ng-pick-datetime';\r\nimport {CalendarModule, DateAdapter} from 'angular-calendar';\r\nimport {DragAndDropModule} from 'angular-draggable-droppable';\r\nimport {ResizableModule} from 'angular-resizable-element';\r\nimport {adapterFactory} from 'angular-calendar/date-adapters/date-fns';\r\n\r\nimport {AppointmentsRoutingModule} from './appointments-routing.module';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\n\r\nimport {AppointmentsComponent} from './pages/appointments/appointments.component';\r\nimport {CreateAppointmentComponent} from './components/create-appointment/create-appointment.component';\r\nimport {EditAppointmentComponent} from './components/edit-appointment/edit-appointment.component';\r\nimport {AppointmentsListComponent} from './pages/appointments-list/appointments-list.component';\r\nimport {AppointmentsDetailComponent} from './pages/appointments-detail/appointments-detail.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppointmentsComponent,\r\n        CreateAppointmentComponent,\r\n        EditAppointmentComponent,\r\n        AppointmentsListComponent,\r\n        AppointmentsDetailComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AppointmentsRoutingModule,\r\n        DataTablesModule,\r\n        ExportAsModule,\r\n        DragAndDropModule,\r\n        ResizableModule,\r\n        NgSelectModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgxEditorModule,\r\n        OwlDateTimeModule,\r\n        OwlNativeDateTimeModule,\r\n        NgxPermissionsModule,\r\n        ModalModule.forRoot(),\r\n        TooltipModule.forRoot(),\r\n        DatepickerModule.forRoot(),\r\n        BsDatepickerModule.forRoot(),\r\n        BsDropdownModule.forRoot(),\r\n        CalendarModule.forRoot({\r\n            provide: DateAdapter,\r\n            useFactory: adapterFactory\r\n        }),\r\n        TranslateModule.forChild({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (HttpLoaderFactory),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        SharedModule\r\n    ],\r\n    entryComponents: [\r\n        CreateAppointmentComponent,\r\n        EditAppointmentComponent\r\n    ],\r\n    providers: []\r\n})\r\n\r\nexport class AppointmentsModule {\r\n}\r\n\r\n// Required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY3JtL2FwcG9pbnRtZW50cy9jb21wb25lbnRzL2NyZWF0ZS1hcHBvaW50bWVudC9jcmVhdGUtYXBwb2ludG1lbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {ClientService} from '../../../../../core/services/client.service';\r\nimport {ProviderService} from '../../../../../core/services/provider.service';\r\nimport {AppointmentsService} from '../../../../../core/services/appointments.service';\r\n\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-create-appointment',\r\n    templateUrl: './create-appointment.component.html',\r\n    styleUrls: ['./create-appointment.component.scss']\r\n})\r\n\r\nexport class CreateAppointmentComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    createAppointmentForm: FormGroup;\r\n    availabileSlots: any;\r\n    providers: any;\r\n    minDate = new Date;\r\n    clients = [];\r\n    isFormSubmitted = false;\r\n    isPageLoad = false;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsCreateModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private clientService: ClientService,\r\n        private providerService: ProviderService,\r\n        private appointmentsService: AppointmentsService\r\n    ) {\r\n    }\r\n\r\n    get appointmentControl() {\r\n        return this.createAppointmentForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.getClients();\r\n    }\r\n\r\n    loadForm() {\r\n        this.createAppointmentForm = this.formBuilder.group({\r\n            title: [null, [Validators.required, Validators.maxLength(255)]],\r\n            client_id: [null],\r\n            provider_id: [null, Validators.required],\r\n            attendees: [null, Validators.required],\r\n            start_date_time: [null, Validators.required],\r\n            end_date_time: [null, Validators.required],\r\n            location: [''],\r\n            note: ['']\r\n        });\r\n\r\n        this.isPageLoad = true;\r\n        this.checkAvailabilities(false);\r\n    }\r\n\r\n    startDateChange(startDate) {\r\n        this.createAppointmentForm.patchValue({end_date_time: new Date(startDate.value)});\r\n        this.checkAvailabilities(true);\r\n    }\r\n\r\n    getClients() {\r\n        this.clientService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.clients = data;\r\n                    this.getProviders();\r\n                });\r\n    }\r\n\r\n    getProviders() {\r\n        this.providerService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.providers = data;\r\n                    this.loadForm();\r\n                });\r\n    }\r\n\r\n    checkAvailabilities(isValid) {\r\n        if (!this.createAppointmentForm.value.provider_id && isValid) {\r\n            this.toastr.error(this.translate.instant('appointments.create.error_messages.message9'), this.translate.instant('appointments.title'));\r\n            return false;\r\n        }\r\n\r\n        this.createAppointmentForm.value.start_date_time = moment(this.createAppointmentForm.value.start_date_time).format('YYYY-MM-DD HH:mm:ss');\r\n        this.appointmentsService.getAppointmentAvailabilities(this.createAppointmentForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.availabileSlots = data;\r\n                });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.createAppointmentForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.createAppointmentForm.value.start_date_time = moment(this.createAppointmentForm.value.start_date_time).format('YYYY-MM-DD HH:mm:ss');\r\n        this.createAppointmentForm.value.end_date_time = moment(this.createAppointmentForm.value.end_date_time).format('YYYY-MM-DD HH:mm:ss');\r\n\r\n        this.appointmentsService.create(this.createAppointmentForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('appointments.messages.create'), this.translate.instant('appointments.title'));\r\n                    this.event.emit({data: true});\r\n                    this.onCancel();\r\n                });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsCreateModalRef.hide();\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY3JtL2FwcG9pbnRtZW50cy9jb21wb25lbnRzL2VkaXQtYXBwb2ludG1lbnQvZWRpdC1hcHBvaW50bWVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {Appointments} from '../../../../../shared/models/appointments.model';\r\n\r\nimport {ClientService} from '../../../../../core/services/client.service';\r\nimport {ProviderService} from '../../../../../core/services/provider.service';\r\nimport {AppointmentsService} from '../../../../../core/services/appointments.service';\r\n\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-edit-appointment',\r\n    templateUrl: './edit-appointment.component.html',\r\n    styleUrls: ['./edit-appointment.component.scss']\r\n})\r\n\r\nexport class EditAppointmentComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    editAppointmentForm: FormGroup;\r\n    appointment: Appointments;\r\n    providers: any;\r\n    availabileSlots: any;\r\n    clients = [];\r\n    isFormSubmitted = false;\r\n    isPageLoad = false;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsEditModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private clientService: ClientService,\r\n        private providerService: ProviderService,\r\n        private appointmentsService: AppointmentsService\r\n    ) {\r\n    }\r\n\r\n    get appointmentControl() {\r\n        return this.editAppointmentForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.getClients();\r\n    }\r\n\r\n    loadForm() {\r\n        this.editAppointmentForm = this.formBuilder.group({\r\n            id: [this.appointment.id],\r\n            title: [this.appointment.title, [Validators.required, Validators.maxLength(255)]],\r\n            client_id: [this.appointment.client_id],\r\n            provider_id: [this.appointment.provider_id, Validators.required],\r\n            attendees: [this.appointment.attendees, Validators.required],\r\n            start_date_time: [new Date(this.appointment.start_date_time), Validators.required],\r\n            end_date_time: [new Date(this.appointment.end_date_time), Validators.required],\r\n            status: [this.appointment.status, Validators.required],\r\n            location: [this.appointment.location],\r\n            note: [this.appointment.note]\r\n        });\r\n\r\n        this.checkAvailabilities();\r\n        this.isPageLoad = true;\r\n    }\r\n\r\n    startDateChange(start_date) {\r\n        this.editAppointmentForm.patchValue({end_date_time: new Date(start_date.value)});\r\n        this.checkAvailabilities();\r\n    }\r\n\r\n    getClients() {\r\n        this.clientService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.clients = data;\r\n                    this.getProviders();\r\n                });\r\n    }\r\n\r\n    getProviders() {\r\n        this.providerService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.providers = data;\r\n                    this.loadForm();\r\n                });\r\n    }\r\n\r\n    changeProvider() {\r\n        this.editAppointmentForm.patchValue({start_date_time: null});\r\n        this.editAppointmentForm.patchValue({end_date_time: null});\r\n        this.availabileSlots = [];\r\n    }\r\n\r\n    checkAvailabilities() {\r\n        if (!this.editAppointmentForm.value.provider_id) {\r\n            this.toastr.error(this.translate.instant('appointments.create.error_messages.message9'), this.translate.instant('appointments.title'));\r\n            return false;\r\n        }\r\n\r\n        this.editAppointmentForm.value.start_date_time = moment(this.editAppointmentForm.value.start_date_time).format('YYYY-MM-DD HH:mm:ss');\r\n        this.appointmentsService.getAppointmentAvailabilities(this.editAppointmentForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.availabileSlots = data;\r\n                });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.editAppointmentForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.editAppointmentForm.value.start_date_time = moment(this.editAppointmentForm.value.start_date_time).format('YYYY-MM-DD HH:mm:ss');\r\n        this.editAppointmentForm.value.end_date_time = moment(this.editAppointmentForm.value.end_date_time).format('YYYY-MM-DD HH:mm:ss');\r\n\r\n        this.appointmentsService.update(this.editAppointmentForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('appointments.messages.edit'), this.translate.instant('appointments.title'));\r\n                    this.event.emit({data: true});\r\n                    this.onCancel();\r\n                });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsEditModalRef.hide();\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY3JtL2FwcG9pbnRtZW50cy9wYWdlcy9hcHBvaW50bWVudHMtZGV0YWlsL2FwcG9pbnRtZW50cy1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {AppointmentsService} from '../../../../../core/services/appointments.service';\r\nimport {AuthenticationService} from 'src/app/core/services/authentication.service';\r\n\r\nimport {appointment_status_key_value} from './../../../../../core/helpers/crm-helper';\r\n\r\n@Component({\r\n    selector: 'app-appointments-detail',\r\n    templateUrl: './appointments-detail.component.html',\r\n    styleUrls: ['./appointments-detail.component.scss']\r\n})\r\n\r\nexport class AppointmentsDetailComponent implements OnInit {\r\n    appointment: any;\r\n    loginUser: any;\r\n    isPageLoaded = false;\r\n    appointmentStatusKeyValue = appointment_status_key_value;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private toastr: ToastrService,\r\n        private route: ActivatedRoute,\r\n        private appointmentsService: AppointmentsService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.route.paramMap.subscribe(params => {\r\n            this.getById(params.get('id'));\r\n        });\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    getById(appointmentId) {\r\n        this.appointmentsService.getById(appointmentId).subscribe(data => {\r\n            this.appointment = data;\r\n            this.isPageLoaded = true;\r\n        });\r\n    }\r\n\r\n    getTranslateStatus(statusKey) {\r\n        return this.appointmentStatusKeyValue[statusKey];\r\n    }\r\n\r\n    changeAppointmentStatus(appointmentId: any, status: any) {\r\n        this.appointmentsService.changeStatus({id: appointmentId, status: status.id}).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('appointments.messages.status'), this.translate.instant('appointments.title'));\r\n        });\r\n    }\r\n\r\n}\r\n","export default \".hide_empty_message ::ng-deep .odd {\\n  display: none;\\n}\\n\\n.btn-filters .status-dropdown .btn.assigned,\\n.btn-filters .status-dropdown .btn.open {\\n  background: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jcm0vYXBwb2ludG1lbnRzL3BhZ2VzL2FwcG9pbnRtZW50cy1saXN0L0M6XFxVc2Vyc1xcdGh1YW5cXE9uZURyaXZlXFxEZXNrdG9wXFxnbGF2YWwtdGh1YW5kaW5oL3NyY1xcYXBwXFxtb2R1bGVzXFxjcm1cXGFwcG9pbnRtZW50c1xccGFnZXNcXGFwcG9pbnRtZW50cy1saXN0XFxhcHBvaW50bWVudHMtbGlzdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kdWxlcy9jcm0vYXBwb2ludG1lbnRzL3BhZ2VzL2FwcG9pbnRtZW50cy1saXN0L2FwcG9pbnRtZW50cy1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtBQ0NKOztBREVBOztFQUVJLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NybS9hcHBvaW50bWVudHMvcGFnZXMvYXBwb2ludG1lbnRzLWxpc3QvYXBwb2ludG1lbnRzLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlkZV9lbXB0eV9tZXNzYWdlIDo6bmctZGVlcCAub2RkIHtcclxuICAgIGRpc3BsYXk6IG5vbmVcclxufVxyXG5cclxuLmJ0bi1maWx0ZXJzIC5zdGF0dXMtZHJvcGRvd24gLmJ0bi5hc3NpZ25lZCxcclxuLmJ0bi1maWx0ZXJzIC5zdGF0dXMtZHJvcGRvd24gLmJ0bi5vcGVuIHtcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbn1cclxuIiwiLmhpZGVfZW1wdHlfbWVzc2FnZSA6Om5nLWRlZXAgLm9kZCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5idG4tZmlsdGVycyAuc3RhdHVzLWRyb3Bkb3duIC5idG4uYXNzaWduZWQsXG4uYnRuLWZpbHRlcnMgLnN0YXR1cy1kcm9wZG93biAuYnRuLm9wZW4ge1xuICBiYWNrZ3JvdW5kOiBub25lO1xufSJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ExportAsConfig, ExportAsService} from 'ngx-export-as';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {DataTableDirective} from 'angular-datatables';\r\nimport {Subject} from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {AppointmentsService} from '../../../../../core/services/appointments.service';\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\n\r\nimport {CreateAppointmentComponent} from '../../components/create-appointment/create-appointment.component';\r\nimport {EditAppointmentComponent} from '../../components/edit-appointment/edit-appointment.component';\r\n\r\nimport {DatatablesResponse} from '../../../../../core/helpers/datatables-response.helper';\r\nimport {appointment_status_key_value} from './../../../../../core/helpers/crm-helper';\r\nimport {environment} from '../../../../../../environments/environment';\r\n\r\nimport 'datatables.net';\r\nimport 'datatables.net-bs4';\r\n\r\n@Component({\r\n    selector: 'app-appointments-list',\r\n    templateUrl: './appointments-list.component.html',\r\n    styleUrls: ['./appointments-list.component.scss']\r\n})\r\n\r\nexport class AppointmentsListComponent implements OnInit {\r\n    public modalRef: BsModalRef;\r\n    @ViewChild(DataTableDirective, {static: true})\r\n    dtElement: DataTableDirective;\r\n    dtTrigger: Subject<any> = new Subject();\r\n    dtOptions: any = {};\r\n    appointments = [];\r\n    loginUser: any;\r\n    statusCount: any;\r\n    statusfilterId: number;\r\n    appointmentStatusKeyValue = appointment_status_key_value;\r\n    isPageLoaded = false;\r\n    exportAsConfig: ExportAsConfig = {\r\n        type: 'pdf',\r\n        elementIdOrContent: 'appointments_table',\r\n    };\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private http: HttpClient,\r\n        private exportAsService: ExportAsService,\r\n        private toastr: ToastrService,\r\n        private modalService: BsModalService,\r\n        private appointmentsService: AppointmentsService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadAppointmentDatatable();\r\n    }\r\n\r\n    loadAppointmentDatatable() {\r\n        this.statusfilterId = 0;\r\n        if (this.route.snapshot.params['statusId']) {\r\n            this.statusfilterId = this.route.snapshot.params['statusId'];\r\n        }\r\n\r\n        let that = this;\r\n        this.dtOptions = {\r\n            pagingType: 'full_numbers',\r\n            pageLength: that.loginUser.settings.tables_pagination_limit,\r\n            serverSide: true,\r\n            processing: true,\r\n            dom: '<\"html5buttons\"B>ltfrtip',\r\n            order: [0],\r\n            columns: [\r\n                {\r\n                    'sortable': true,\r\n                    'width': '8%',\r\n                    'target': [0]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'target': [0]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '15%',\r\n                    'target': [1]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '8%',\r\n                    'target': [2]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '8%',\r\n                    'target': [3]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '12%',\r\n                    'target': [4]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '12%',\r\n                    'target': [5]\r\n                },\r\n                {\r\n                    'sortable': false,\r\n                    'target': [6],\r\n                    'width': '5%'\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    extend: 'csv',\r\n                    title: this.translate.instant('appointments.title'),\r\n                    className: 'btn btn-datatable-gredient',\r\n                    action: function (e, dt, node, config) {\r\n                        that.exportFiles('csv');\r\n                    }\r\n                }, {\r\n                    extend: 'excel',\r\n                    title: this.translate.instant('appointments.title'),\r\n                    className: 'btn btn-datatable-gredient',\r\n                    action: function (e, dt, node, config) {\r\n                        that.exportFiles('xlsx');\r\n                    }\r\n                }, {\r\n                    extend: 'pdf',\r\n                    title: this.translate.instant('appointments.title'),\r\n                    className: 'btn btn-datatable-gredient',\r\n                    action: function (e, dt, node, config) {\r\n                        that.exportFiles('pdf');\r\n                    }\r\n                }\r\n            ],\r\n            language: {\r\n                'sEmptyTable': this.translate.instant('common.datatable.sEmptyTable'),\r\n                'sInfo': this.translate.instant('common.datatable.sInfo'),\r\n                'sInfoEmpty': this.translate.instant('common.datatable.sInfoEmpty'),\r\n                'sSearch': '',\r\n                'sInfoPostFix': this.translate.instant('common.datatable.sInfoPostFix'),\r\n                'sInfoThousands': this.translate.instant('common.datatable.sInfoThousands'),\r\n                'sLengthMenu': this.translate.instant('common.datatable.sLengthMenu'),\r\n                'sLoadingRecords': this.translate.instant('common.datatable.sLoadingRecords'),\r\n                'sProcessing': this.translate.instant('common.datatable.sProcessing'),\r\n                'sZeroRecords': this.translate.instant('common.datatable.sZeroRecords'),\r\n                'sSearchPlaceholder': this.translate.instant('common.datatable.sSearchPlaceholder'),\r\n                'oPaginate': {\r\n                    'sFirst': this.translate.instant('common.datatable.oPaginate.sFirst'),\r\n                    'sLast': this.translate.instant('common.datatable.oPaginate.sLast'),\r\n                    'sNext': this.translate.instant('common.datatable.oPaginate.sNext'),\r\n                    'sPrevious': this.translate.instant('common.datatable.oPaginate.sPrevious')\r\n                },\r\n                'oAria': {\r\n                    'sSortAscending': this.translate.instant('common.datatable.oAria.sSortAscending'),\r\n                    'sSortDescending': this.translate.instant('common.datatable.oAria.sSortDescending')\r\n                }\r\n            },\r\n            ajax: (dataTablesParameters: any, callback) => {\r\n                dataTablesParameters = {\r\n                    columns: dataTablesParameters.columns,\r\n                    draw: dataTablesParameters.draw,\r\n                    length: dataTablesParameters.length,\r\n                    order: dataTablesParameters.order,\r\n                    search: dataTablesParameters.search,\r\n                    start: dataTablesParameters.start,\r\n                    status: this.statusfilterId\r\n                };\r\n                this.http\r\n                    .post<DatatablesResponse>(this.apiUrl + '/api/all-appointments', dataTablesParameters, {})\r\n                    .subscribe(resp => {\r\n                        this.isPageLoaded = true;\r\n                        this.appointments = resp.data;\r\n                        this.statusCount = resp;\r\n                        this.statusCount = this.statusCount.statusCount;\r\n\r\n                        callback({\r\n                            recordsTotal: resp.recordsTotal,\r\n                            recordsFiltered: resp.recordsFiltered,\r\n                            data: [],\r\n                        });\r\n                    });\r\n            }\r\n        };\r\n    }\r\n\r\n    filterByStatus(statusID) {\r\n        this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n        this.router.navigate(['appointments', statusID]);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dtTrigger.next();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n    rerender(): void {\r\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n            dtInstance.destroy();\r\n            setTimeout(() => {\r\n                this.dtTrigger.next();\r\n\r\n                if (this.appointments.length > 0) {\r\n                    $('.tfoot_dt').addClass('d-none');\r\n                } else {\r\n                    $('.tfoot_dt').removeClass('d-none');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    exportFiles(type) {\r\n        this.exportAsConfig.type = type;\r\n        this.exportAsService.save(this.exportAsConfig, this.translate.instant('appointments.title')).subscribe(() => {\r\n        });\r\n    }\r\n\r\n    openAppointmentCreateModal() {\r\n        let modalConfigs = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-md animated fadeIn'\r\n        };\r\n        this.modalRef = this.modalService.show(CreateAppointmentComponent, modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.rerender();\r\n        });\r\n    }\r\n\r\n    openAppointmentEditModal(appointment) {\r\n        let modalConfig = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-md animated fadeIn',\r\n            initialState: {\r\n                appointment: appointment\r\n            }\r\n        };\r\n\r\n        this.modalRef = this.modalService.show(EditAppointmentComponent, modalConfig);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.rerender();\r\n        });\r\n    }\r\n\r\n    deleteAppointment(id) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.appointmentsService.delete(id).subscribe(data => {\r\n                    this.toastr.success(this.translate.instant('appointments.messages.delete'), this.translate.instant('appointments.title'));\r\n                    this.rerender();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    getTranslateStatus(statusKey) {\r\n        return this.appointmentStatusKeyValue[statusKey];\r\n    }\r\n\r\n    changeAppointmentStatus(appointmentId: any, status: any) {\r\n        this.appointmentsService.changeStatus({id: appointmentId, status: status.id}).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('appointments.messages.status'), this.translate.instant('appointments.title'));\r\n            this.rerender();\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY3JtL2FwcG9pbnRtZW50cy9wYWdlcy9hcHBvaW50bWVudHMvYXBwb2ludG1lbnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {BsDatepickerViewMode} from 'ngx-bootstrap/datepicker';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {NgxRolesService} from 'ngx-permissions';\r\nimport {CalendarEvent, CalendarEventTitleFormatter, CalendarView} from 'angular-calendar';\r\nimport {isSameDay, isSameMonth} from 'date-fns';\r\nimport {CustomEventTitleFormatter} from '../../../../../core/helpers/custom-event-title-formatter.provider';\r\nimport {Subject} from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {AppointmentsService} from '../../../../../core/services/appointments.service';\r\nimport {ProviderService} from '../../../../../core/services/provider.service';\r\nimport {AuthenticationService} from '../../../../../core//services/authentication.service';\r\n\r\nimport {CreateAppointmentComponent} from '../../components/create-appointment/create-appointment.component';\r\nimport {EditAppointmentComponent} from '../../components/edit-appointment/edit-appointment.component';\r\n\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-appointments',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './appointments.component.html',\r\n    styleUrls: ['./appointments.component.scss'],\r\n    providers: [{\r\n        provide: CalendarEventTitleFormatter,\r\n        useClass: CustomEventTitleFormatter\r\n    }]\r\n})\r\n\r\nexport class AppointmentsComponent implements OnInit {\r\n    public modalRef: BsModalRef;\r\n    AllCalendarEvents: any;\r\n    isCalendarLoaded: boolean = false;\r\n    appointments: any;\r\n    providers: any;\r\n    loginUser: any;\r\n    view: CalendarView = CalendarView.Month;\r\n    CalendarView = CalendarView;\r\n    viewDate: Date = new Date();\r\n    refresh: Subject<any> = new Subject();\r\n    events: CalendarEvent[] = this.AllCalendarEvents;\r\n    activeDayIsOpen: boolean = true;\r\n    year: Date;\r\n    minMode: BsDatepickerViewMode = 'month';\r\n    filterDate: any;\r\n    appoitmentFilterKey = 0;\r\n    modalConfigs = {\r\n        animated: true,\r\n        keyboard: true,\r\n        backdrop: true,\r\n        ignoreBackdropClick: false,\r\n        class: 'inmodal modal-dialog-centered modal-md animated fadeIn'\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public ngxRolesService: NgxRolesService,\r\n        private http: HttpClient,\r\n        private toastr: ToastrService,\r\n        private modalService: BsModalService,\r\n        private providerService: ProviderService,\r\n        private appointmentsService: AppointmentsService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.filterDate = moment(this.year).format('YYYY-MM');\r\n        this.getProviders();\r\n    }\r\n\r\n    dayClicked({date, events}: { date: Date; events: CalendarEvent[] }): void {\r\n        if (isSameMonth(date, this.viewDate)) {\r\n            if (\r\n                (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n                events.length === 0\r\n            ) {\r\n                this.activeDayIsOpen = false;\r\n            } else {\r\n                this.activeDayIsOpen = true;\r\n            }\r\n            this.viewDate = date;\r\n        }\r\n    }\r\n\r\n    addEvent(tasks): void {\r\n        this.events = tasks;\r\n        this.refreshView();\r\n    }\r\n\r\n    refreshView(): void {\r\n        this.refresh.next();\r\n    }\r\n\r\n    setView(view: CalendarView) {\r\n        this.view = view;\r\n    }\r\n\r\n    closeOpenMonthViewDay() {\r\n        this.activeDayIsOpen = false;\r\n    }\r\n\r\n    getAppointments(status = 0, date) {\r\n        this.appointmentsService.getAll(status, date)\r\n            .subscribe(\r\n                data => {\r\n                    this.appointments = data;\r\n                    this.isCalendarLoaded = true;\r\n                    this.setCalendarData();\r\n                });\r\n    }\r\n\r\n    filterByStatus(status) {\r\n        this.appoitmentFilterKey = status;\r\n        this.getAppointments(status, this.filterDate);\r\n    }\r\n\r\n    appointmentYearChange($event: any) {\r\n        this.filterDate = moment($event).format('YYYY-MM');\r\n        this.getAppointments(this.appoitmentFilterKey, this.filterDate);\r\n    }\r\n\r\n    setCalendarData() {\r\n        let eventsAll = [];\r\n        let roleName = this.ngxRolesService.getRole('admin');\r\n        let isAllowed = false;\r\n\r\n        if ((roleName && roleName.name == 'admin') || this.loginUser.is_super_admin) {\r\n            isAllowed = true;\r\n        }\r\n\r\n        this.appointments['data'].forEach(element => {\r\n            let provider = this.getProvider(element.provider_id);\r\n\r\n            if (provider) {\r\n\r\n                if (element.user_id == this.loginUser.id) {\r\n                    isAllowed = true;\r\n                }\r\n\r\n                if (isAllowed) {\r\n                    eventsAll.push({\r\n                        start: new Date(element.start_date_time),\r\n                        end: new Date(element.end_date_time),\r\n                        title: '(' + moment(element.start_date_time).format(this.loginUser.settings.date_time_format) + ' - ' + moment(element.end_date_time).format(this.loginUser.settings.date_time_format) + ') ' + provider.firstname + ' ' + provider.lastname + ' / ' + element.title,\r\n                        allDay: true,\r\n                        cssClass: 'event_' + element.id,\r\n                        color: {\r\n                            primary: provider.color,\r\n                            secondary: provider.color\r\n                        },\r\n                        actions: [\r\n                            {\r\n                                label: '<i class=\"fa fa-fw fa-pencil\"></i>',\r\n                                onClick: ({event}: { event: CalendarEvent }): void => {\r\n                                    this.openAppointmentEditModal(event);\r\n                                }\r\n                            }, {\r\n                                label: '<i class=\"fa fa-fw fa-times\"></i>',\r\n                                onClick: ({event}: { event: CalendarEvent }): void => {\r\n                                    this.deleteAppointment(event);\r\n                                }\r\n                            }\r\n                        ]\r\n                    });\r\n                } else {\r\n                    eventsAll.push({\r\n                        start: new Date(element.start_date_time),\r\n                        end: new Date(element.end_date_time),\r\n                        title: '(' + moment(element.start_date_time).format(this.loginUser.settings.date_time_format) + ' - ' + moment(element.end_date_time).format(this.loginUser.settings.date_time_format) + ') ' + provider.firstname + ' ' + provider.lastname + ' / ' + element.title,\r\n                        allDay: true,\r\n                        cssClass: 'event_' + element.id,\r\n                        color: {\r\n                            primary: provider.color,\r\n                            secondary: provider.color\r\n                        },\r\n                        actions: []\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        this.addEvent(eventsAll);\r\n        this.AllCalendarEvents = eventsAll;\r\n    }\r\n\r\n    getProvider(providerId) {\r\n        for (let iRow in this.providers) {\r\n            if (this.providers[iRow].id == providerId) {\r\n                return this.providers[iRow];\r\n            }\r\n        }\r\n    }\r\n\r\n    getAppointment(id) {\r\n        for (let iRow in this.appointments['data']) {\r\n            if (this.appointments['data'][iRow].id == id) {\r\n                return this.appointments['data'][iRow];\r\n            }\r\n        }\r\n    }\r\n\r\n    getProviders() {\r\n        this.providerService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.providers = data;\r\n                    this.getAppointments(this.appoitmentFilterKey, this.filterDate);\r\n                });\r\n    }\r\n\r\n    openAppointmentCreateModal() {\r\n        this.modalRef = this.modalService.show(CreateAppointmentComponent, this.modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getAppointments(this.appoitmentFilterKey, this.filterDate);\r\n        });\r\n    }\r\n\r\n    openAppointmentEditModal(event) {\r\n        let appointment = this.getAppointment(parseInt(this.getSecondPartString(event.cssClass)));\r\n        let modalConfig = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-md animated fadeIn',\r\n            initialState: {\r\n                appointment: appointment\r\n            }\r\n        };\r\n\r\n        this.modalRef = this.modalService.show(EditAppointmentComponent, modalConfig);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getAppointments(this.appoitmentFilterKey, this.filterDate);\r\n        });\r\n    }\r\n\r\n    deleteAppointment(event) {\r\n        let appointmentId = parseInt(this.getSecondPartString(event.cssClass));\r\n\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.appointmentsService.delete(appointmentId)\r\n                    .subscribe(\r\n                        data => {\r\n                            this.toastr.success(this.translate.instant('appointments.messages.delete'), this.translate.instant('appointments.title'));\r\n                            this.getAppointments(this.appoitmentFilterKey, this.filterDate);\r\n                        });\r\n            }\r\n        });\r\n    }\r\n\r\n    getSecondPartString(str) {\r\n        return str.split('_')[1];\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}