{"version":3,"sources":["./src/app/modules/pm/task-board/pages/task-board/task-board.component.html","./src/app/core/services/project.service.ts","./src/app/modules/pm/task-board/pages/task-board/task-board.component.scss","./src/app/modules/pm/task-board/pages/task-board/task-board.component.ts","./src/app/modules/pm/task-board/task-board-routing.module.ts","./src/app/modules/pm/task-board/task-board.module.ts"],"names":[],"mappings":"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","file":"modules-pm-task-board-task-board-module.js","sourcesContent":["export default \"<section>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card pl-2 pr-2 pb-2\\\">\\r\\n                <!-- Card header -->\\r\\n                <div class=\\\"card-header pl-0 pr-0\\\">\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-3 p-0\\\">\\r\\n                                <h4 class=\\\"main-title mt-2 text-left\\\"><span>{{'task_boards.title' | translate }}</span>\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-9 p-0\\\">\\r\\n                                <div class=\\\"card-buttons d-lg-flex float-lg-right\\\">\\r\\n                                    <div class=\\\"mr-md-1 mt-lg-0 mt-2\\\">\\r\\n                                        <ng-select (change)=\\\"getTaskForTaskBoard($event?.id, filter)\\\" [(ngModel)]=\\\"project_id\\\" [items]=\\\"projects\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"project_name\\\" bindValue=\\\"id\\\" labelForId=\\\"project_id\\\" placeholder=\\\"{{'common.placeholders.placeholder1' | translate}}\\\">\\r\\n                                            <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                                {{item.project_name}}\\r\\n                                            </ng-template>\\r\\n                                        </ng-select>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"mr-1 mt-lg-0 mt-2 float-left tab-filter\\\">\\r\\n                                        <div class=\\\"btn-group\\\">\\r\\n                                            <label (click)=\\\"getTaskForTaskBoard(project_id, filter)\\\" [(ngModel)]=\\\"filter\\\" btnRadio=\\\"all\\\" class=\\\"btn btn-secondary\\\" role=\\\"button\\\" tabindex=\\\"0\\\">{{'common.status.all' | translate}}</label>\\r\\n                                            <label (click)=\\\"getTaskForTaskBoard(project_id, filter)\\\" [(ngModel)]=\\\"filter\\\" btnRadio=\\\"my\\\" class=\\\"btn btn-secondary\\\" role=\\\"button\\\" tabindex=\\\"0\\\">{{'common.status.my' | translate}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"float-right mt-lg-0 mt-2\\\">\\r\\n                                        <a [routerLink]=\\\"['/tasks']\\\" class=\\\"btn btn-create mb-0 mr-1\\\" tooltip=\\\"{{'common.switch_to_list' | translate}}\\\"><i class=\\\"fa fa-list\\\"></i><span>{{'common.list' | translate}}</span></a>\\r\\n                                        <a *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'tasks_create']\\\" [routerLink]=\\\"['/tasks/create']\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'common.create' | translate}}\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- Card body -->\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row mb-4 taskboard\\\">\\r\\n                        <div class=\\\"col-md-6 col-lg-6 col-xl-4 col-12\\\">\\r\\n                            <h4 class=\\\"ml-2 mt-2 text-bold-500\\\">\\r\\n                                <i class=\\\"ft-list mr-1\\\"></i> {{'task_boards.headings.head1' | translate }}</h4>\\r\\n                            <p class=\\\"ml-2 small\\\">\\r\\n                                <i class=\\\"fa fa-hand-o-up\\\"></i> {{'kanban_board.budges.budges1' | translate }}</p>\\r\\n                            <div class=\\\"drag-container\\\">\\r\\n                                <div #openList=\\\"cdkDropList\\\" (cdkDropListDropped)=\\\"drop($event)\\\" [cdkDropListConnectedTo]=\\\"[inprogressList, completedList]\\\" [cdkDropListData]=\\\"openTasks\\\" cdkDropList class=\\\"item-list\\\">\\r\\n                                    <ul class=\\\"pl-0 open\\\">\\r\\n                                        <li *ngFor=\\\"let task of openTasks | orderBy: 'order'\\\" cdkDrag class=\\\"card\\\">\\r\\n                                            <div class=\\\"card-box\\\">\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                    <h6 class=\\\"col-12 card-text\\\">\\r\\n                                                        <a [routerLink]=\\\"['/tasks/detail', task.id]\\\" class=\\\"text-info\\\" tooltip=\\\"{{'common.view' | translate}}\\\">{{task.generated_id}}</a>\\r\\n                                                        <ng-container *ngFor=\\\"let priority of ('tasks.priorities' | translate)\\\">\\r\\n                                                            <div class=\\\"budges-status d-inline\\\">\\r\\n                                                                <span *ngIf=\\\"priority.id == task.priority\\\" class=\\\"{{priority.class}} pull-right\\\">{{priority.label | strToFirstLetter}}</span>\\r\\n                                                            </div>\\r\\n                                                        </ng-container>\\r\\n                                                        <br>{{task.name}}\\r\\n                                                    </h6>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"row mt-2\\\">\\r\\n                                                    <div class=\\\"col-12\\\">\\r\\n                                                        <div class=\\\"taskboard-foot d-flex justify-content-between\\\">\\r\\n                                                            <div class=\\\"taskboard-date\\\">\\r\\n                                                                <i class=\\\"fa fa-calendar-o\\\"></i>&nbsp;{{task.task_start_date | dateTimeFormatFilter: loginUser.settings.date_format}}\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"task.estimated_hours\\\" class=\\\"taskboard-time\\\">\\r\\n                                                                <i class=\\\"fa fa-clock-o\\\"></i>&nbsp;{{task.estimated_hours}}&nbsp;h\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"people-lists\\\">\\r\\n                                                                <ng-container *ngIf=\\\"task.assign_user == null; else elseBlock\\\">\\r\\n                                                                    <a class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" href=\\\"javascript:void(0);\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                                                                        <img alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/unassign.jpg\\\"/>\\r\\n                                                                    </a>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock>\\r\\n                                                                    <a [routerLink]=\\\"['/users/profile', task.assign_user.id]\\\" class=\\\"btn rounded-circle text-dark btn-profile-danger\\\" placement=\\\"top\\\" tooltip=\\\"{{task.assign_user.firstname}} {{task.assign_user.lastname}}\\\">\\r\\n                                                                        <img *ngIf=\\\"task.assign_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{task.assign_user.avatar}}\\\"/>\\r\\n                                                                        <img *ngIf=\\\"!task.assign_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                                    </a>\\r\\n                                                                </ng-template>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6 col-lg-6 col-xl-4 col-12\\\">\\r\\n                            <h4 class=\\\"ml-2 mt-2 text-bold-500\\\">\\r\\n                                <i class=\\\"ft-trending-up mr-1\\\"></i> {{'task_boards.headings.head2' | translate }}</h4>\\r\\n                            <p class=\\\"ml-2 small\\\">\\r\\n                                <i class=\\\"fa fa-hand-o-up\\\"></i> {{'kanban_board.budges.budges1' | translate }}</p>\\r\\n                            <div class=\\\"drag-container\\\">\\r\\n                                <div #inprogressList=\\\"cdkDropList\\\" (cdkDropListDropped)=\\\"drop($event)\\\" [cdkDropListConnectedTo]=\\\"[openList, completedList]\\\" [cdkDropListData]=\\\"inprogressTasks\\\" cdkDropList class=\\\"item-list\\\">\\r\\n                                    <ul class=\\\"pl-0 in-progress\\\">\\r\\n                                        <li *ngFor=\\\"let task of inprogressTasks | orderBy: 'order'\\\" cdkDrag class=\\\"card\\\">\\r\\n                                            <div class=\\\"card-box\\\">\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                    <h6 class=\\\"col-12 card-text\\\">\\r\\n                                                        <a [routerLink]=\\\"['/tasks/detail', task.id]\\\" class=\\\"text-info\\\" tooltip=\\\"{{'common.view' | translate}}\\\">{{task.generated_id}}</a>\\r\\n                                                        <ng-container *ngFor=\\\"let priority of ('tasks.priorities' | translate)\\\">\\r\\n                                                            <div class=\\\"budges-status d-inline\\\">\\r\\n                                                                <span *ngIf=\\\"priority.id == task.priority\\\" class=\\\"{{priority.class}} pull-right\\\">{{priority.label | strToFirstLetter}}</span>\\r\\n                                                            </div>\\r\\n                                                        </ng-container>\\r\\n                                                        <br>{{task.name}}\\r\\n                                                    </h6>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"row mt-2\\\">\\r\\n                                                    <div class=\\\"col-12\\\">\\r\\n                                                        <div class=\\\"taskboard-foot d-flex justify-content-between\\\">\\r\\n                                                            <div class=\\\"taskboard-date\\\">\\r\\n                                                                <i class=\\\"fa fa-calendar-o\\\"></i>&nbsp;{{task.task_end_date | dateTimeFormatFilter: loginUser.settings.date_format}}\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"task.estimated_hours\\\" class=\\\"taskboard-time\\\">\\r\\n                                                                <i class=\\\"fa fa-clock-o\\\"></i>&nbsp;{{task.estimated_hours}}&nbsp;h\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"people-lists\\\">\\r\\n                                                                <ng-container *ngIf=\\\"task.assign_user == null; else elseBlock2\\\">\\r\\n                                                                    <a class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" href=\\\"javascript:void(0);\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                                                                        <img alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/unassign.jpg\\\"/>\\r\\n                                                                    </a>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock2>\\r\\n                                                                    <a [routerLink]=\\\"['/users/profile', task.assign_user.id]\\\" class=\\\"btn rounded-circle text-dark btn-profile-danger\\\" placement=\\\"top\\\" tooltip=\\\"{{task.assign_user.firstname}} {{task.assign_user.lastname}}\\\">\\r\\n                                                                        <img *ngIf=\\\"task.assign_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{task.assign_user.avatar}}\\\"/>\\r\\n                                                                        <img *ngIf=\\\"!task.assign_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                                    </a>\\r\\n                                                                </ng-template>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6 col-lg-6 col-xl-4 col-12\\\">\\r\\n                            <h4 class=\\\"ml-2 mt-2 text-bold-500\\\">\\r\\n                                <i class=\\\"ft-thumbs-up mr-1\\\"></i> {{'task_boards.headings.head3' | translate }}</h4>\\r\\n                            <p class=\\\"ml-2 small\\\">\\r\\n                                <i class=\\\"fa fa-hand-o-up\\\"></i> {{'kanban_board.budges.budges1' | translate }}</p>\\r\\n                            <div class=\\\"drag-container\\\">\\r\\n                                <div #completedList=\\\"cdkDropList\\\" (cdkDropListDropped)=\\\"drop($event)\\\" [cdkDropListConnectedTo]=\\\"[openList, inprogressList]\\\" [cdkDropListData]=\\\"completedTasks\\\" cdkDropList class=\\\"item-list\\\">\\r\\n                                    <ul class=\\\"pl-0 completed\\\">\\r\\n                                        <li *ngFor=\\\"let task of completedTasks | orderBy: 'order'\\\" cdkDrag class=\\\"card\\\">\\r\\n                                            <div class=\\\"card-box\\\">\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                    <h6 class=\\\"col-12 card-text\\\">\\r\\n                                                        <a [routerLink]=\\\"['/tasks/detail', task.id]\\\" class=\\\"text-info\\\" tooltip=\\\"{{'common.view' | translate}}\\\">{{task.generated_id}}</a>\\r\\n                                                        <ng-container *ngFor=\\\"let priority of ('tasks.priorities' | translate)\\\">\\r\\n                                                            <div class=\\\"budges-status d-inline\\\">\\r\\n                                                                <span *ngIf=\\\"priority.id == task.priority\\\" class=\\\"{{priority.class}} pull-right\\\">{{priority.label | strToFirstLetter}}</span>\\r\\n                                                            </div>\\r\\n                                                        </ng-container>\\r\\n                                                        <br>{{task.name}}\\r\\n                                                    </h6>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"row mt-2\\\">\\r\\n                                                    <div class=\\\"col-12\\\">\\r\\n                                                        <div class=\\\"taskboard-foot d-flex justify-content-between\\\">\\r\\n                                                            <div class=\\\"taskboard-date\\\">\\r\\n                                                                <i class=\\\"fa fa-calendar-o\\\"></i>&nbsp;{{task.task_end_date | dateTimeFormatFilter: loginUser.settings.date_format}}\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"task.estimated_hours\\\" class=\\\"taskboard-time\\\">\\r\\n                                                                <i class=\\\"fa fa-clock-o\\\"></i>&nbsp;{{task.estimated_hours}}&nbsp;h\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"people-lists\\\">\\r\\n                                                                <ng-container *ngIf=\\\"task.assign_user == null; else elseBlock3\\\">\\r\\n                                                                    <a class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" href=\\\"javascript:void(0);\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                                                                        <img alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/unassign.jpg\\\"/>\\r\\n                                                                    </a>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock3>\\r\\n                                                                    <a [routerLink]=\\\"['/users/profile', task.assign_user.id]\\\" class=\\\"btn rounded-circle text-dark btn-profile-danger\\\" placement=\\\"top\\\" tooltip=\\\"{{task.assign_user.firstname}} {{task.assign_user.lastname}}\\\">\\r\\n                                                                        <img *ngIf=\\\"task.assign_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{task.assign_user.avatar}}\\\"/>\\r\\n                                                                        <img *ngIf=\\\"!task.assign_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                                    </a>\\r\\n                                                                </ng-template>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {Project} from '../../shared/models/project.model';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ProjectService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<Project[]>(`${this.apiUrl}/api/projects`);\r\n    }\r\n\r\n    getMyProjects() {\r\n        return this.http.get<Project[]>(`${this.apiUrl}/api/projects/my`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/projects/${id}`);\r\n    }\r\n\r\n    getProjectById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/projects/getbyid/${id}`);\r\n    }\r\n\r\n    create(project: Project) {\r\n        return this.http.post(`${this.apiUrl}/api/projects`, project);\r\n    }\r\n\r\n    update(project: Project) {\r\n        return this.http.put(`${this.apiUrl}/api/projects/${project.id}`, project);\r\n    }\r\n\r\n    delete(id: number, params: any) {\r\n        return this.http.post(`${this.apiUrl}/api/projects/delete/${id}`, params);\r\n    }\r\n\r\n    updateNotes(project: Project) {\r\n        return this.http.put(`${this.apiUrl}/api/projects/notes/${project.id}`, project);\r\n    }\r\n\r\n    changeStatus(project: any) {\r\n        return this.http.post(`${this.apiUrl}/api/projects/${project.ids}/change-status`, {'status': project.status});\r\n    }\r\n\r\n    getReleasePlanner() {\r\n        return this.http.get(`${this.apiUrl}/api/projects/release-planner`);\r\n    }\r\n\r\n    getProject() {\r\n        return this.http.get(`${this.apiUrl}/api/projects/projectmembers`, {});\r\n    }\r\n\r\n    getProjectPermission(id) {\r\n        return this.http.get(`${this.apiUrl}/api/projects/${id}/permission`, {});\r\n    }\r\n}\r\n","export default \".section-heading {\\n  padding: 5px 10px;\\n  font-size: 15px;\\n  font-weight: bold;\\n}\\n\\n.drag-container {\\n  width: 600px;\\n  max-width: 100%;\\n  margin: 0 25px 25px 0;\\n  display: inline-block;\\n  vertical-align: top;\\n  background-color: #E9ECEF;\\n  padding: 15px;\\n  border-radius: 5px;\\n}\\n\\n.item-list {\\n  min-height: 60px;\\n  border-radius: 4px;\\n  display: block;\\n}\\n\\n.item-box {\\n  padding: 8px 10px;\\n  border: solid 1px #ccc;\\n  margin-bottom: 5px;\\n  color: rgba(0, 0, 0, 0.87);\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-direction: row;\\n      flex-direction: row;\\n  -ms-flex-align: center;\\n      align-items: center;\\n  -ms-flex-pack: justify;\\n      justify-content: space-between;\\n  box-sizing: border-box;\\n  cursor: move;\\n  background: white;\\n  font-size: 14px;\\n  border-radius: 20px;\\n}\\n\\n.cdk-drag-preview {\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n  padding: 20px 20px;\\n}\\n\\n.cdk-drag-placeholder {\\n  opacity: 0;\\n}\\n\\n.cdk-drag-animating {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.item-list.cdk-drop-list-dragging .item-box:not(.cdk-drag-placeholder) {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wbS90YXNrLWJvYXJkL3BhZ2VzL3Rhc2stYm9hcmQvQzpcXFVzZXJzXFx0aHVhblxcT25lRHJpdmVcXERlc2t0b3BcXGdsYXZhbC10aHVhbmRpbmgvc3JjXFxhcHBcXG1vZHVsZXNcXHBtXFx0YXNrLWJvYXJkXFxwYWdlc1xcdGFzay1ib2FyZFxcdGFzay1ib2FyZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kdWxlcy9wbS90YXNrLWJvYXJkL3BhZ2VzL3Rhc2stYm9hcmQvdGFzay1ib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0VBQ0EsZUFBQTtFQUNBLHFCQUFBO0VBQ0EscUJBQUE7RUFDQSxtQkFBQTtFQUNBLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVBO0VBQ0ksaUJBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0EsMEJBQUE7RUFDQSxvQkFBQTtFQUFBLGFBQUE7RUFDQSx1QkFBQTtNQUFBLG1CQUFBO0VBQ0Esc0JBQUE7TUFBQSxtQkFBQTtFQUNBLHNCQUFBO01BQUEsOEJBQUE7RUFDQSxzQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtBQ0NKOztBREVBO0VBQ0ksc0JBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxVQUFBO0FDQ0o7O0FERUE7RUFDSSxzREFBQTtBQ0NKOztBREVBO0VBQ0ksc0RBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vdGFzay1ib2FyZC9wYWdlcy90YXNrLWJvYXJkL3Rhc2stYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VjdGlvbi1oZWFkaW5nIHtcclxuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5kcmFnLWNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogNjAwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW46IDAgMjVweCAyNXB4IDA7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U5RUNFRjtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbi5pdGVtLWxpc3Qge1xyXG4gICAgbWluLWhlaWdodDogNjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uaXRlbS1ib3gge1xyXG4gICAgcGFkZGluZzogOHB4IDEwcHg7XHJcbiAgICBib3JkZXI6IHNvbGlkIDFweCAjY2NjO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgY3Vyc29yOiBtb3ZlO1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG59XHJcblxyXG4uY2RrLWRyYWctcHJldmlldyB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgcGFkZGluZzogMjBweCAyMHB4O1xyXG59XHJcblxyXG4uY2RrLWRyYWctcGxhY2Vob2xkZXIge1xyXG4gICAgb3BhY2l0eTogMDtcclxufVxyXG5cclxuLmNkay1kcmFnLWFuaW1hdGluZyB7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMiwgMSk7XHJcbn1cclxuXHJcbi5pdGVtLWxpc3QuY2RrLWRyb3AtbGlzdC1kcmFnZ2luZyAuaXRlbS1ib3g6bm90KC5jZGstZHJhZy1wbGFjZWhvbGRlcikge1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDI1MG1zIGN1YmljLWJlemllcigwLCAwLCAwLjIsIDEpO1xyXG59XHJcbiIsIi5zZWN0aW9uLWhlYWRpbmcge1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmRyYWctY29udGFpbmVyIHtcbiAgd2lkdGg6IDYwMHB4O1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMCAyNXB4IDI1cHggMDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTlFQ0VGO1xuICBwYWRkaW5nOiAxNXB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG5cbi5pdGVtLWxpc3Qge1xuICBtaW4taGVpZ2h0OiA2MHB4O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uaXRlbS1ib3gge1xuICBwYWRkaW5nOiA4cHggMTBweDtcbiAgYm9yZGVyOiBzb2xpZCAxcHggI2NjYztcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBjdXJzb3I6IG1vdmU7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG59XG5cbi5jZGstZHJhZy1wcmV2aWV3IHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBwYWRkaW5nOiAyMHB4IDIwcHg7XG59XG5cbi5jZGstZHJhZy1wbGFjZWhvbGRlciB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5jZGstZHJhZy1hbmltYXRpbmcge1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMiwgMSk7XG59XG5cbi5pdGVtLWxpc3QuY2RrLWRyb3AtbGlzdC1kcmFnZ2luZyAuaXRlbS1ib3g6bm90KC5jZGstZHJhZy1wbGFjZWhvbGRlcikge1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMiwgMSk7XG59Il19 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {NgxRolesService} from 'ngx-permissions';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\r\n\r\nimport {AuthenticationService} from 'src/app/core/services/authentication.service';\r\nimport {TaskService} from '../../../../../core/services/task.service';\r\nimport {ProjectService} from '../../../../../core/services/project.service';\r\n\r\nimport {environment} from '../../../../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-task-board',\r\n    templateUrl: './task-board.component.html',\r\n    styleUrls: ['./task-board.component.scss']\r\n})\r\n\r\nexport class TaskBoardComponent implements OnInit {\r\n    openTasks: any[];\r\n    inprogressTasks: any[];\r\n    completedTasks: any[];\r\n    tasks: any;\r\n    projects: any;\r\n    loginUser: any;\r\n    data: any;\r\n    project_id: number;\r\n    filter = 'my';\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public ngxRolesService: NgxRolesService,\r\n        private toastr: ToastrService,\r\n        private taskService: TaskService,\r\n        private projectService: ProjectService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getProjects();\r\n    }\r\n\r\n    getCheckPermission(task) {\r\n        let role = this.ngxRolesService.getRole('admin');\r\n        if ((role && role.name == 'admin') || this.loginUser.is_super_admin) {\r\n            return true;\r\n        } else if (task.assign_to == this.loginUser.id || task.created_by == this.loginUser.id) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getProjects() {\r\n        this.projectService.getMyProjects().subscribe(data => {\r\n            this.projects = data;\r\n            this.getTaskForTaskBoard();\r\n        });\r\n    }\r\n\r\n    getTasks(project) {\r\n        if (project) {\r\n            this.getTaskForTaskBoard(project.id);\r\n        }\r\n    }\r\n\r\n    getTaskForTaskBoard(projectId = null, filter = 'my') {\r\n        let params = {};\r\n        if (projectId == null) {\r\n            params = {\r\n                'filter': filter\r\n            };\r\n        } else {\r\n            params = {\r\n                'project_id': projectId,\r\n                'filter': filter\r\n            };\r\n        }\r\n\r\n        this.project_id = projectId;\r\n        this.filter = filter;\r\n        this.openTasks = [];\r\n        this.inprogressTasks = [];\r\n        this.completedTasks = [];\r\n        this.taskService.getTaskForTaskBoard(params).subscribe(data => {\r\n            this.tasks = data;\r\n            this.setTasks();\r\n        });\r\n    }\r\n\r\n    setTasks() {\r\n        if (this.tasks) {\r\n            for (let iRow in this.tasks) {\r\n                if (this.tasks[iRow].status == 1) {\r\n                    this.openTasks.push(this.tasks[iRow]);\r\n                }\r\n                if (this.tasks[iRow].status == 2 || this.tasks[iRow].status == 3 || this.tasks[iRow].status == 4) {\r\n                    this.inprogressTasks.push(this.tasks[iRow]);\r\n                }\r\n                if (this.tasks[iRow].status == 6 || this.tasks[iRow].status == 5) {\r\n                    this.completedTasks.push(this.tasks[iRow]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    drop(event: CdkDragDrop<string[]>) {\r\n        if (event.previousContainer === event.container) {\r\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n        } else {\r\n            transferArrayItem(\r\n                event.previousContainer.data,\r\n                event.container.data,\r\n                event.previousIndex,\r\n                event.currentIndex\r\n            );\r\n        }\r\n\r\n        let statusTask = [{\r\n            status: 1,\r\n            list: this.converToArray(this.openTasks)\r\n        },\r\n            {\r\n                status: 2,\r\n                list: this.converToArray(this.inprogressTasks)\r\n            },\r\n            {\r\n                status: 6,\r\n                list: this.converToArray(this.completedTasks)\r\n            }];\r\n\r\n        this.updateStatusList(statusTask);\r\n    }\r\n\r\n    updateStatusList(task) {\r\n        // if(this.getCheckPermission(task)) {\r\n\r\n        // } else {\r\n        // \tthis.toastr.error(this.translate.instant('common.error_messages.message1'), this.translate.instant('common.errors_keys.key1'));\r\n        // }\r\n\r\n        this.taskService.updateStatusList(task).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('tasks.messages.status'), this.translate.instant('tasks.title'));\r\n            this.getTaskForTaskBoard(this.project_id, this.filter);\r\n        });\r\n    }\r\n\r\n    converToArray(list) {\r\n        let status_list = [];\r\n        list.forEach(element => {\r\n            status_list.push(parseInt(element.id));\r\n        });\r\n\r\n        return status_list;\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NgxPermissionsGuard} from 'ngx-permissions';\r\n\r\nimport {TaskBoardComponent} from './pages/task-board/task-board.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        canActivate: [NgxPermissionsGuard],\r\n        component: TaskBoardComponent,\r\n        data: {\r\n            permissions: {\r\n                only: ['admin', 'super_admin', 'tasks_view']\r\n            }\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class TaskBoardRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {BsDropdownModule, ButtonsModule, TooltipModule} from 'ngx-bootstrap';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\nimport {OrderModule} from 'ngx-order-pipe';\r\nimport {NgxPermissionsModule} from 'ngx-permissions';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\n\r\nimport {TaskBoardRoutingModule} from './task-board-routing.module';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\n\r\nimport {TaskBoardComponent} from './pages/task-board/task-board.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TaskBoardComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        TaskBoardRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgSelectModule,\r\n        NgxPermissionsModule,\r\n        OrderModule,\r\n        DragDropModule,\r\n        TooltipModule.forRoot(),\r\n        BsDropdownModule.forRoot(),\r\n        ButtonsModule.forRoot(),\r\n        TranslateModule.forChild({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (HttpLoaderFactory),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        SharedModule,\r\n    ],\r\n    entryComponents: []\r\n})\r\n\r\nexport class TaskBoardModule {\r\n}\r\n\r\n// Required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n"],"sourceRoot":"webpack:///"}