{"version":3,"sources":["./src/app/modules/pm/tasks/components/create-attachment-modal/create-attachment-modal.component.html","./src/app/modules/pm/tasks/components/task-activities/task-activities.component.html","./src/app/modules/pm/tasks/components/task-attachments/task-attachments.component.html","./src/app/modules/pm/tasks/components/task-comments/task-comments.component.html","./src/app/modules/pm/tasks/components/task-details/task-details.component.html","./src/app/modules/pm/tasks/components/task-import-modal/task-import-modal.component.html","./src/app/modules/pm/tasks/components/task-notes/task-notes.component.html","./src/app/modules/pm/tasks/pages/task-copy/task-copy.component.html","./src/app/modules/pm/tasks/pages/task-create/task-create.component.html","./src/app/modules/pm/tasks/pages/task-detail/task-detail.component.html","./src/app/modules/pm/tasks/pages/task-edit/task-edit.component.html","./src/app/modules/pm/tasks/pages/task-list/task-list.component.html","./src/app/core/services/import-task.service.ts","./src/app/core/services/task-attachment.service.ts","./src/app/core/services/task-comments.service.ts","./src/app/modules/pm/tasks/components/create-attachment-modal/create-attachment-modal.component.scss","./src/app/modules/pm/tasks/components/create-attachment-modal/create-attachment-modal.component.ts","./src/app/modules/pm/tasks/components/task-activities/task-activities.component.scss","./src/app/modules/pm/tasks/components/task-activities/task-activities.component.ts","./src/app/modules/pm/tasks/components/task-attachments/task-attachments.component.scss","./src/app/modules/pm/tasks/components/task-attachments/task-attachments.component.ts","./src/app/modules/pm/tasks/components/task-comments/task-comments.component.scss","./src/app/modules/pm/tasks/components/task-comments/task-comments.component.ts","./src/app/modules/pm/tasks/components/task-details/task-details.component.scss","./src/app/modules/pm/tasks/components/task-details/task-details.component.ts","./src/app/modules/pm/tasks/components/task-import-modal/task-import-modal.component.scss","./src/app/modules/pm/tasks/components/task-import-modal/task-import-modal.component.ts","./src/app/modules/pm/tasks/components/task-notes/task-notes.component.scss","./src/app/modules/pm/tasks/components/task-notes/task-notes.component.ts","./src/app/modules/pm/tasks/pages/task-copy/task-copy.component.scss","./src/app/modules/pm/tasks/pages/task-copy/task-copy.component.ts","./src/app/modules/pm/tasks/pages/task-create/task-create.component.scss","./src/app/modules/pm/tasks/pages/task-create/task-create.component.ts","./src/app/modules/pm/tasks/pages/task-detail/task-detail.component.scss","./src/app/modules/pm/tasks/pages/task-detail/task-detail.component.ts","./src/app/modules/pm/tasks/pages/task-edit/task-edit.component.scss","./src/app/modules/pm/tasks/pages/task-edit/task-edit.component.ts","./src/app/modules/pm/tasks/pages/task-list/task-list.component.scss","./src/app/modules/pm/tasks/pages/task-list/task-list.component.ts","./src/app/modules/pm/tasks/task-routing.module.ts","./src/app/modules/pm/tasks/tasks.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,sOAAuK,iCAAiC,6LAA6L,kXAAkX,qDAAqD,kEAAkE,gEAAgE,+DAA+D,yFAAyF,6DAA6D,6NAA6N,2DAA2D,6FAA6F,0DAA0D,uLAAuL,0DAA0D,0EAA0E,qDAAqD,kEAAkE,oSAAoS,2DAA2D,yRAAyR,2DAA2D,0XAA0X,8BAA8B,6EAA6E,8BAA8B,uC;;;;;;;;;;;;ACAzqG;AAAe,mVAAoR,qRAAqR,yBAAyB,GAAG,wBAAwB,uRAAuR,QAAQ,mBAAmB,sBAAsB,yEAAyE,yBAAyB,GAAG,wBAAwB,6MAA6M,0BAA0B,yCAAyC,kFAAkF,+N;;;;;;;;;;;;ACAn5C;AAAe,uSAAwO,6BAA6B,yEAAyE,gCAAgC,uNAAuN,oVAAoV,4XAA4X,gBAAgB,YAAY,QAAQ,2BAA2B,gBAAgB,iCAAiC,+BAA+B,wSAAwS,6BAA6B,6kBAA6kB,UAAU,2BAA2B,gBAAgB,2IAA2I,gBAAgB,YAAY,QAAQ,2BAA2B,gBAAgB,iCAAiC,gBAAgB,6CAA6C,0FAA0F,8EAA8E,mCAAmC,IAAI,8EAA8E,2UAA2U,4CAA4C,mC;;;;;;;;;;;;ACAt0G;AAAe,mRAAoN,qCAAqC,uDAAuD,wCAAwC,+TAA+T,wEAAwE,sGAAsG,yDAAyD,4NAA4N,uDAAuD,oXAAoX,uDAAuD,4+BAA4+B,QAAQ,mBAAmB,qBAAqB,gDAAgD,wBAAwB,GAAG,uBAAuB,8GAA8G,iFAAiF,kNAAkN,kUAAkU,cAAc,sEAAsE,WAAW,YAAY,QAAQ,2BAA2B,WAAW,6BAA6B,WAAW,0SAA0S,6BAA6B,2FAA2F,wCAAwC,sM;;;;;;;;;;;;ACAviI;AAAe,uZAAwV,mBAAmB,0GAA0G,WAAW,8QAA8Q,2BAA2B,g6BAAg6B,gDAAgD,+FAA+F,4BAA4B,mNAAmN,mDAAmD,+FAA+F,sBAAsB,mTAAmT,0CAA0C,oMAAoM,0UAA0U,6CAA6C,MAAM,0lBAA0lB,uCAAuC,mCAAmC,sCAAsC,cAAc,KAAK,cAAc,2wBAA2wB,cAAc,KAAK,cAAc,wfAAwf,6CAA6C,qGAAqG,gaAAga,mDAAmD,MAAM,4lBAA4lB,2CAA2C,uCAAuC,sCAAsC,gBAAgB,KAAK,gBAAgB,4zBAA4zB,gBAAgB,KAAK,gBAAgB,2mBAA2mB,8CAA8C,8SAA8S,wBAAwB,GAAG,uBAAuB,kKAAkK,QAAQ,mBAAmB,qBAAqB,oWAAoW,wBAAwB,GAAG,uBAAuB,+RAA+R,+CAA+C,+MAA+M,8KAA8K,iCAAiC,iCAAiC,0mBAA0mB,4BAA4B,GAAG,2BAA2B,0KAA0K,QAAQ,mBAAmB,yBAAyB,oXAAoX,4BAA4B,GAAG,2BAA2B,kaAAka,4CAA4C,iRAAiR,eAAe,ibAAib,kDAAkD,+FAA+F,iFAAiF,mNAAmN,gDAAgD,+FAA+F,+EAA+E,mNAAmN,oDAAoD,+FAA+F,mFAAmF,mNAAmN,kDAAkD,+FAA+F,iFAAiF,mNAAmN,kDAAkD,0LAA0L,gKAAgK,qVAAqV,uBAAuB,yRAAyR,gDAAgD,+FAA+F,mBAAmB,mNAAmN,8BAA8B,+FAA+F,8EAA8E,mNAAmN,8BAA8B,+FAA+F,8EAA8E,84BAA84B,oCAAoC,sKAAsK,sJAAsJ,4zBAA4zB,oCAAoC,giBAAgiB,yBAAyB,mGAAmG,gCAAgC,mQAAmQ,yBAAyB,mGAAmG,uFAAuF,uQAAuQ,yBAAyB,8cAA8c,kBAAkB,qeAAqe,yBAAyB,kNAAkN,4BAA4B,2BAA2B,wGAAwG,4BAA4B,mpBAAmpB,yBAAyB,mGAAmG,gCAAgC,2iCAA2iC,oCAAoC,0UAA0U,uCAAuC,goBAAgoB,gCAAgC,mEAAmE,uCAAuC,mEAAmE,sCAAsC,mEAAmE,mCAAmC,mEAAmE,sCAAsC,mEAAmE,qCAAqC,mEAAmE,sCAAsC,mEAAmE,oCAAoC,mEAAmE,qCAAqC,qRAAqR,qMAAqM,2BAA2B,KAAK,uBAAuB,4OAA4O,kKAAkK,+UAA+U,eAAe,yIAAyI,+EAA+E,mEAAmE,0BAA0B,2bAA2b,gBAAgB,KAAK,gBAAgB,wfAAwf,iCAAiC,GAAG,gCAAgC,uKAAuK,QAAQ,mBAAmB,8BAA8B,ugBAAugB,0KAA0K,iCAAiC,iCAAiC,ulBAAulB,gCAAgC,GAAG,+BAA+B,0KAA0K,QAAQ,mBAAmB,6BAA6B,6lBAA6lB,uUAAuU,iDAAiD,MAAM,slBAAslB,2CAA2C,uCAAuC,sCAAsC,cAAc,KAAK,cAAc,ovBAAovB,cAAc,KAAK,cAAc,ywCAAywC,2BAA2B,waAAwa,6BAA6B,2iDAA2iD,8BAA8B,65BAA65B,iCAAiC,k+BAAk+B,2BAA2B,kYAAkY,2BAA2B,0LAA0L,wJAAwJ,+zBAA+zB,gCAAgC,0qB;;;;;;;;;;;;ACAlksC;AAAe,kOAAmK,4BAA4B,8GAA8G,sTAAsT,qCAAqC,oDAAoD,4CAA4C,+SAA+S,qDAAqD,mPAAmP,4BAA4B,oFAAoF,6BAA6B,uC;;;;;;;;;;;;ACA39C;AAAe,mLAAoH,2BAA2B,8nBAA8nB,6BAA6B,yG;;;;;;;;;;;;ACAzzB;AAAe,wbAAyX,4BAA4B,oTAAoT,oCAAoC,oTAAoT,4CAA4C,MAAM,gHAAgH,mEAAmE,kWAAkW,qDAAqD,wWAAwW,8CAA8C,MAAM,gHAAgH,2DAA2D,+EAA+E,uDAAuD,6PAA6P,qDAAqD,6GAA6G,qDAAqD,6UAA6U,oCAAoC,0LAA0L,yEAAyE,4GAA4G,mDAAmD,wXAAwX,uDAAuD,oZAAoZ,qDAAqD,oVAAoV,uEAAuE,0GAA0G,iDAAiD,oYAAoY,uDAAuD,gZAAgZ,qDAAqD,oVAAoV,sEAAsE,yGAAyG,qDAAqD,kXAAkX,uDAAuD,8YAA8Y,qDAAqD,oVAAoV,oEAAoE,uGAAuG,mDAAmD,2XAA2X,uDAAuD,0YAA0Y,qDAAqD,0YAA0Y,oCAAoC,4PAA4P,6CAA6C,qjBAAqjB,qSAAqS,oCAAoC,0LAA0L,iEAAiE,oGAAoG,iDAAiD,MAAM,mXAAmX,uDAAuD,8JAA8J,mBAAmB,qXAAqX,qDAAqD,mXAAmX,oDAAoD,gMAAgM,uDAAuD,8JAA8J,MAAM,gZAAgZ,oCAAoC,6QAA6Q,gDAAgD,kPAAkP,uDAAuD,sGAAsG,gBAAgB,GAAG,eAAe,wSAAwS,6DAA6D,gGAAgG,2CAA2C,MAAM,+VAA+V,uDAAuD,8PAA8P,sDAAsD,0RAA0R,+DAA+D,gGAAgG,6CAA6C,MAAM,2SAA2S,wDAAwD,kQAAkQ,sDAAsD,mXAAmX,mDAAmD,4EAA4E,wFAAwF,gWAAgW,sDAAsD,qPAAqP,sDAAsD,GAAG,oCAAoC,qsBAAqsB,oCAAoC,wiCAAwiC,oCAAoC,qRAAqR,gDAAgD,kfAAkf,6BAA6B,wGAAwG,2BAA2B,2S;;;;;;;;;;;;ACA9ioB;AAAe,2fAA4b,KAAK,4BAA4B,yFAAyF,KAAK,4BAA4B,mUAAmU,oCAAoC,kVAAkV,4CAA4C,MAAM,wJAAwJ,+CAA+C,MAAM,gHAAgH,mEAAmE,uXAAuX,qDAAqD,wWAAwW,8CAA8C,MAAM,gHAAgH,2DAA2D,+EAA+E,uDAAuD,6PAA6P,qDAAqD,6GAA6G,qDAAqD,6UAA6U,oCAAoC,0LAA0L,yEAAyE,4GAA4G,mDAAmD,6XAA6X,uDAAuD,oZAAoZ,qDAAqD,oVAAoV,uEAAuE,kGAAkG,iDAAiD,sYAAsY,uDAAuD,gZAAgZ,qDAAqD,oVAAoV,sEAAsE,yGAAyG,qDAAqD,uXAAuX,uDAAuD,8YAA8Y,qDAAqD,oVAAoV,oEAAoE,kGAAkG,mDAAmD,6XAA6X,uDAAuD,0YAA0Y,qDAAqD,0YAA0Y,oCAAoC,4PAA4P,6CAA6C,qjBAAqjB,qSAAqS,oCAAoC,0EAA0E,+IAA+I,iEAAiE,oGAAoG,iDAAiD,MAAM,iUAAiU,uDAAuD,sGAAsG,mBAAmB,iUAAiU,qDAAqD,mXAAmX,oDAAoD,gMAAgM,uDAAuD,sGAAsG,MAAM,yRAAyR,iNAAiN,iDAAiD,iDAAiD,sBAAsB,oEAAoE,oDAAoD,iDAAiD,4BAA4B,oEAAoE,kDAAkD,iDAAiD,yBAAyB,yRAAyR,oCAAoC,6QAA6Q,gDAAgD,kPAAkP,uDAAuD,sGAAsG,gBAAgB,GAAG,eAAe,wSAAwS,6DAA6D,gGAAgG,2CAA2C,MAAM,oVAAoV,uDAAuD,8PAA8P,sDAAsD,0RAA0R,+DAA+D,kGAAkG,6CAA6C,MAAM,2SAA2S,wDAAwD,kQAAkQ,sDAAsD,mXAAmX,mDAAmD,4EAA4E,wFAAwF,gWAAgW,sDAAsD,qPAAqP,sDAAsD,GAAG,8BAA8B,qsBAAqsB,oCAAoC,4iCAA4iC,oCAAoC,qRAAqR,gDAAgD,kfAAkf,6BAA6B,wGAAwG,6BAA6B,2S;;;;;;;;;;;;ACAhrqB;AAAe,iV;;;;;;;;;;;;ACAf;AAAe,qeAAsa,KAAK,4BAA4B,8FAA8F,KAAK,4BAA4B,mUAAmU,oCAAoC,uVAAuV,4CAA4C,MAAM,4JAA4J,+CAA+C,MAAM,gHAAgH,mEAAmE,kWAAkW,qDAAqD,wWAAwW,8CAA8C,MAAM,gHAAgH,2DAA2D,+EAA+E,uDAAuD,6PAA6P,qDAAqD,6GAA6G,qDAAqD,6UAA6U,oCAAoC,0LAA0L,yEAAyE,4GAA4G,mDAAmD,wXAAwX,uDAAuD,oZAAoZ,qDAAqD,oVAAoV,uEAAuE,0GAA0G,iDAAiD,oYAAoY,uDAAuD,gZAAgZ,qDAAqD,oVAAoV,sEAAsE,yGAAyG,qDAAqD,kXAAkX,uDAAuD,8YAA8Y,qDAAqD,oVAAoV,oEAAoE,uGAAuG,mDAAmD,2XAA2X,uDAAuD,0YAA0Y,qDAAqD,0YAA0Y,oCAAoC,4PAA4P,6CAA6C,qjBAAqjB,qSAAqS,oCAAoC,6NAA6N,iEAAiE,oGAAoG,iDAAiD,MAAM,mXAAmX,uDAAuD,8JAA8J,mBAAmB,qXAAqX,qDAAqD,mXAAmX,oDAAoD,gMAAgM,uDAAuD,8JAA8J,MAAM,kVAAkV,iNAAiN,iDAAiD,iGAAiG,4BAA4B,oEAAoE,oDAAoD,iGAAiG,4BAA4B,oEAAoE,kDAAkD,iDAAiD,yBAAyB,yRAAyR,oCAAoC,6QAA6Q,gDAAgD,kPAAkP,uDAAuD,sGAAsG,gBAAgB,GAAG,eAAe,wSAAwS,6DAA6D,gGAAgG,2CAA2C,MAAM,+VAA+V,uDAAuD,8PAA8P,sDAAsD,0RAA0R,+DAA+D,gGAAgG,6CAA6C,MAAM,2SAA2S,wDAAwD,kQAAkQ,sDAAsD,mXAAmX,mDAAmD,4EAA4E,wFAAwF,gWAAgW,sDAAsD,qPAAqP,sDAAsD,GAAG,oCAAoC,qsBAAqsB,oCAAoC,wiCAAwiC,oCAAoC,qRAAqR,gDAAgD,kfAAkf,6BAA6B,wGAAwG,6BAA6B,2S;;;;;;;;;;;;ACAthrB;AAAe,sYAAuU,2BAA2B,yKAAyK,uCAAuC,yCAAyC,6BAA6B,gLAAgL,UAAU,sDAAsD,8CAA8C,uNAAuN,6BAA6B,uPAAuP,6BAA6B,8xBAA8xB,iCAAiC,iPAAiP,gCAAgC,mQAAmQ,6BAA6B,8FAA8F,kCAAkC,yHAAyH,qBAAqB,KAAK,kBAAkB,ySAAyS,4BAA4B,qGAAqG,yCAAyC,gIAAgI,qBAAqB,KAAK,yBAAyB,ySAAyS,4BAA4B,mGAAmG,uCAAuC,8HAA8H,qBAAqB,KAAK,uBAAuB,4PAA4P,6BAA6B,qJAAqJ,mCAAmC,gKAAgK,qBAAqB,KAAK,iBAAiB,06BAA06B,gCAAgC,2DAA2D,uCAAuC,2DAA2D,wCAAwC,2DAA2D,sCAAsC,2DAA2D,mCAAmC,2DAA2D,sCAAsC,2DAA2D,sCAAsC,2DAA2D,oCAAoC,2DAA2D,qCAAqC,qQAAqQ,iLAAiL,2BAA2B,KAAK,mBAAmB,gNAAgN,gJAAgJ,2TAA2T,WAAW,yHAAyH,6EAA6E,2DAA2D,2EAA2E,2DAA2D,mBAAmB,iLAAiL,kKAAkK,iCAAiC,iCAAiC,2iBAA2iB,uBAAuB,GAAG,sBAAsB,yJAAyJ,QAAQ,mBAAmB,oBAAoB,iwBAAiwB,gBAAgB,KAAK,gBAAgB,gcAAgc,2TAA2T,6CAA6C,MAAM,0jBAA0jB,uCAAuC,mCAAmC,sCAAsC,cAAc,KAAK,cAAc,4sBAA4sB,cAAc,KAAK,cAAc,mcAAmc,8BAA8B,KAAK,iBAAiB,GAAG,2BAA2B,+lCAA+lC,2BAA2B,2aAA2a,2BAA2B,2XAA2X,6BAA6B,unBAAunB,4CAA4C,6Y;;;;;;;;;;;;;;;;;;;ACArgf;AACO;AAGc;AAM9D;IAII,2BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,WAAM,GAAG,qEAAW,CAAC,MAAM,CAAC;IAGpC,CAAC;IAED,kCAAM,GAAN,UAAO,UAAsB;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,MAAM,sBAAmB,EAAE,UAAU,CAAC,CAAC;IACzE,CAAC;;gBALyB,+DAAU;;IAJ3B,iBAAiB;QAJ7B,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;+EAM4B,+DAAU;OAJ3B,iBAAiB,CAU7B;IAAD,wBAAC;CAAA;AAV6B;;;;;;;;;;;;;;;;;;;;ACVW;AACO;AAGc;AAM9D;IAGI,+BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,WAAM,GAAG,qEAAW,CAAC,MAAM,CAAC;IAGpC,CAAC;IAED,oDAAoB,GAApB,UAAqB,MAAc;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,MAAM,6BAAwB,MAAQ,CAAC,CAAC;IAC3F,CAAC;IAED,sCAAM,GAAN,UAAO,cAA8B;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,MAAM,yBAAsB,EAAE,cAAc,CAAC,CAAC;IAChF,CAAC;IAED,sCAAM,GAAN,UAAO,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,MAAM,6BAAwB,EAAI,CAAC,CAAC;IACxE,CAAC;;gBAbyB,+DAAU;;IAH3B,qBAAqB;QAJjC,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;+EAK4B,+DAAU;OAH3B,qBAAqB,CAiBjC;IAAD,4BAAC;CAAA;AAjBiC;;;;;;;;;;;;;;;;;;;;ACVO;AACO;AAGc;AAM9D;IAGI,6BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,WAAM,GAAG,qEAAW,CAAC,MAAM,CAAC;IAGpC,CAAC;IAED,oCAAM,GAAN,UAAO,WAAyB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,MAAM,sBAAmB,EAAE,WAAW,CAAC,CAAC;IAC1E,CAAC;IAED,oCAAM,GAAN,UAAO,WAAgB;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,0BAAqB,WAAW,CAAC,EAAI,EAAE,WAAW,CAAC,CAAC;IAC3F,CAAC;IAED,oCAAM,GAAN,UAAO,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,MAAM,0BAAqB,EAAI,CAAC,CAAC;IACrE,CAAC;;gBAbyB,+DAAU;;IAH3B,mBAAmB;QAJ/B,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;+EAK4B,+DAAU;OAH3B,mBAAmB,CAiB/B;IAAD,0BAAC;CAAA;AAjB+B;;;;;;;;;;;;;ACVhC;AAAe,6GAA8C,+N;;;;;;;;;;;;;;;;;;;;;;;;;;ACAwB;AACnB;AACX;AACR;AACN;AACY;AACxB;AAIgE;AAExD;AAQrC;IAaI,wCACW,SAA2B,EAC3B,0BAAsC,EACrC,WAAwB,EACxB,MAAqB,EACrB,qBAA4C,EAC5C,KAAqB,EACrB,MAAc;QANf,cAAS,GAAT,SAAS,CAAkB;QAC3B,+BAA0B,GAA1B,0BAA0B,CAAY;QACrC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAnBnB,UAAK,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAKrD,oBAAe,GAAG,KAAK,CAAC;QACxB,iBAAY,GAAG,KAAK,CAAC;QACrB,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,IAAI,CAAC;IAapB,CAAC;IAED,sBAAI,sDAAU;aAAd;YACI,OAAO,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC;QAC9C,CAAC;;;OAAA;IAED,iDAAQ,GAAR;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,4CAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,EAAE,CAAC;IAErB,CAAC;IAED,kDAAS,GAAT;QAAA,mBAYC;QAXG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/C,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;YACtB,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACjE,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,cAAc,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC/B,gBAAgB,EAAE,CAAC,EAAE,CAAC;SACzB,CAAC,CAAC;QAEH,UAAU,CAAC;YACP,OAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qDAAY,GAAZ;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,qCAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE;YAC1C,GAAG,EAAE,0BAA0B;YAC/B,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,IAAI;YACf,qBAAqB,EAAE,IAAI;YAC3B,IAAI,EAAE;gBACF,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,UAAU,IAAI;oBAC/B,IAAM,YAAY,GAAG,sDAAsB,CAAC,yCAAyC,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,oBAAoB,CAAC,GAAG,WAAW,CAAC,CAAC;oBACpJ,IAAM,KAAK,GAAG,IAAI,CAAC;oBACnB,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,CAAC;wBAC9C,CAAC,CAAC,cAAc,EAAE,CAAC;wBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;wBACpB,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAC3B,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;oBAE9C,IAAI,IAAI,EAAE;wBACN,IAAI,QAAM,GAAG,IAAI,UAAU,EAAE,CAAC;wBAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC1B,IAAI,IAAI,CAAC,QAAQ,EAAE;4BACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;yBAClD;wBACD,QAAM,CAAC,MAAM,GAAG,UAAC,CAAC;4BACd,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAC,IAAI,EAAE,QAAM,CAAC,MAAM,EAAC,CAAC,CAAC;4BAC5D,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC;wBAC1E,CAAC,CAAC;wBACF,QAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;qBAC9B;gBACL,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,IAAI;oBACjC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,OAAY;oBACzC,IAAI,IAAI,EAAE;wBACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;qBAC9B;gBACL,CAAC,CAAC,CAAC;YACP,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAED,4DAAmB,GAAnB;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC9B,CAAC;IAED,iDAAQ,GAAR;QAAA,mBAYC;QAXG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE;YACnC,OAAO;SACV;QACD,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;aAC7D,SAAS,CACN,cAAI;YACA,OAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,6BAA6B,CAAC,EAAE,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACxH,OAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,QAAC,CAAC,CAAC;YACxB,OAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACf,CAAC;IAED,iDAAQ,GAAR;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,CAAC;IAC3C,CAAC;;gBAtGqB,oEAAgB;gBACC,8DAAU;gBACxB,0DAAW;gBAChB,wDAAa;gBACE,4FAAqB;gBACrC,8DAAc;gBACb,sDAAM;;IATkB;QAA3C,+DAAS,CAAC,cAAc,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;wEAAe,wDAAU;wEAAC;IAX5D,8BAA8B;QAN1C,+DAAS,CAAC;YACP,QAAQ,EAAE,6BAA6B;YACvC,qSAAuD;;SAE1D,CAAC;+EAgBwB,oEAAgB;YACC,8DAAU;YACxB,0DAAW;YAChB,wDAAa;YACE,4FAAqB;YACrC,8DAAc;YACb,sDAAM;OApBjB,8BAA8B,CAsH1C;IAAD,qCAAC;CAAA;AAtH0C;;;;;;;;;;;;;ACpB3C;AAAe,6GAA8C,2M;;;;;;;;;;;;;;;;;ACAN;AASvD;IAMI;QALO,iBAAY,GAAoC,EAAE,CAAC;IAM1D,CAAC;IAED,0CAAQ,GAAR;IACA,CAAC;IARQ;QAAR,2DAAK,EAAE;;yDAAM;IACL;QAAR,2DAAK,EAAE;;8DAAgB;IACf;QAAR,2DAAK,EAAE;;2DAAQ;IAJP,uBAAuB;QANnC,+DAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;YAC/B,6QAA+C;;SAElD,CAAC;;OAEW,uBAAuB,CAWnC;IAAD,8BAAC;CAAA;AAXmC;;;;;;;;;;;;;ACTpC;AAAe,6GAA8C,+M;;;;;;;;;;;;;;;;;;;;;;;;;;ACAN;AACP;AACD;AACgB;AACtB;AACY;AACtB;AAE4D;AAC+B;AAQ1H;IAkBI,kCACW,SAA2B,EAC1B,MAAqB,EACrB,KAAqB,EACrB,IAAgB,EAChB,YAA4B,EAC5B,qBAA4C;QAL7C,cAAS,GAAT,SAAS,CAAkB;QAC1B,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAY;QAChB,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,0BAAqB,GAArB,qBAAqB,CAAuB;QAjBxD,iBAAY,GAAG;YACX,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,mBAAmB,EAAE,KAAK;YAC1B,KAAK,EAAE,wDAAwD;YAC/D,YAAY,EAAE;gBACV,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;aACxC;SACJ,CAAC;QAUE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,2CAAQ,GAAR;IACA,CAAC;IAED,mDAAgB,GAAhB,UAAiB,MAAM;QAAvB,iBAKC;QAJG,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAClE,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,KAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAQ,GAAR;QACI,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;YAC/B,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE;gBAC3C,KAAK,KAAK;oBACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,iBAAiB,CAAC;oBAChD,MAAM;gBACV,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK;oBACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,aAAa,CAAC;oBAC5C,MAAM;gBACV,KAAK,MAAM,CAAC;gBACZ,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK,CAAC;gBACX,KAAK,MAAM,CAAC;gBACZ,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK;oBACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,YAAY,CAAC;oBAC3C,MAAM;gBACV,KAAK,KAAK;oBACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,kBAAkB,CAAC;oBACjD,MAAM;gBACV,KAAK,MAAM,CAAC;gBACZ,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK;oBACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC;oBAC1C,MAAM;gBACV;oBACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;oBAC3C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,YAAY,CAAC;oBAC3C,MAAM;aACb;SACJ;IACL,CAAC;IAED,4DAAyB,GAAzB;QAAA,iBAKC;QAJG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oIAA8B,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC1F,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,cAAI;YACtC,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAgB,GAAhB,UAAiB,YAAY;QAA7B,iBAgBC;QAfG,kDAAI,CAAC,IAAI,CAAC;YACN,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC;YAClD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC;YAChD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC;YAC1E,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC;SAC3E,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACX,IAAI,MAAM,CAAC,KAAK,EAAE;gBACd,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI;oBAC1D,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,6BAA6B,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBAClH,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;gBArFqB,oEAAgB;gBAClB,wDAAa;gBACd,8DAAc;gBACf,+DAAU;gBACF,kEAAc;gBACL,4FAAqB;;IAtB/C;QAAR,2DAAK,EAAE;;0DAAM;IACL;QAAR,2DAAK,EAAE;;+DAAgB;IACf;QAAR,2DAAK,EAAE;;gEAAqB;IACpB;QAAR,2DAAK,EAAE;;4DAAQ;IALP,wBAAwB;QANpC,+DAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;YAChC,gRAAgD;;SAEnD,CAAC;+EAqBwB,oEAAgB;YAClB,wDAAa;YACd,8DAAc;YACf,+DAAU;YACF,kEAAc;YACL,4FAAqB;OAxB/C,wBAAwB,CA0GpC;IAAD,+BAAC;CAAA;AA1GoC;;;;;;;;;;;;;ACjBrC;AAAe,6GAA8C,uM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAiB;AACZ;AACX;AACd;AACY;AACtB;AAEuC;AACiB;AAElD;AAQrC;IAsBI,+BACW,SAA2B,EAC1B,MAAc,EACd,KAAqB,EACrB,WAAwB,EACxB,MAAqB,EACrB,mBAAwC,EACxC,WAAwB;QANzB,cAAS,GAAT,SAAS,CAAkB;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gBAAW,GAAX,WAAW,CAAa;QApBpC,iBAAY,GAAG,KAAK,CAAC;QAGrB,2BAAsB,GAAG,KAAK,CAAC;QAC/B,0BAAqB,GAAG,KAAK,CAAC;QAC9B,gBAAW,GAAG,EAAE,CAAC;QACjB,kBAAa,GAAG,EAAE,CAAC;QACnB,WAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACvC,gBAAW,GAAG,kBAAkB,CAAC;QACjC,eAAU,GAAY,IAAI,CAAC;IAa3B,CAAC;IAED,sBAAI,iDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;QAC1C,CAAC;;;OAAA;IAED,sBAAI,sDAAmB;aAAvB;YACI,OAAO,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC;QAC/C,CAAC;;;OAAA;IAED,wCAAQ,GAAR;QAAA,mBAQC;QAPG,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,UAAU,CAAC;YACP,OAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAS,GAAT;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;YACtB,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,KAAK,EAAE,CAAC,IAAI,CAAC;SAChB,CAAC,CAAC;IACP,CAAC;IAED,6CAAa,GAAb;QACI,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAChD,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;YACtB,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,SAAS,EAAE,CAAC,IAAI,CAAC;SACpB,CAAC,CAAC;IACP,CAAC;IAED,4CAAY,GAAZ;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,qCAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE;YAChE,GAAG,EAAE,0BAA0B;YAC/B,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,IAAI;YACf,qBAAqB,EAAE,IAAI;YAC3B,IAAI,EAAE;gBACF,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,UAAU,IAAI;oBAC/B,IAAM,YAAY,GAAG,sDAAsB,CAAC,yCAAyC,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,oBAAoB,CAAC,GAAG,WAAW,CAAC,CAAC;oBACpJ,IAAM,KAAK,GAAG,IAAI,CAAC;oBACnB,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,CAAC;wBAC9C,CAAC,CAAC,cAAc,EAAE,CAAC;wBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;wBACpB,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAE3B,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;oBAE9C,IAAI,IAAI,EAAE;wBACN,IAAI,QAAM,GAAG,IAAI,UAAU,EAAE,CAAC;wBAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wBACxB,QAAM,CAAC,MAAM,GAAG,UAAC,CAAC;4BACd,IAAI,QAAQ,GAAG;gCACX,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI;gCAClC,IAAI,EAAE,IAAI,CAAC,IAAI;gCACf,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;gCACrC,IAAI,EAAE,IAAI,CAAC,IAAI;gCACf,IAAI,EAAE,QAAM,CAAC,MAAM;6BACtB,CAAC;4BACF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACtC,CAAC,CAAC;wBACF,QAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;qBAC9B;gBACL,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,IAAI;oBACjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK;wBACpC,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE;4BAC5C,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;yBACvC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,OAAY;oBACzC,IAAI,IAAI,EAAE;wBACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;qBAC9B;gBACL,CAAC,CAAC,CAAC;YACP,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAED,wCAAQ,GAAR;QAAA,mBAgBC;QAfG,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QAEnC,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YAC/B,OAAO;SACV;QAED,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,aAAa,EAAC,CAAC,CAAC;QAE9D,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YACvE,OAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,EAAE,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAClH,OAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;YAClC,OAAI,CAAC,UAAU,CAAC,OAAI,CAAC,MAAM,CAAC,CAAC;YAC7B,OAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,OAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAc,GAAd;QACI,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAC,cAAc,EAAE,EAAE,EAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAC,KAAK,EAAE,EAAE,EAAC,CAAC,CAAC;QACnD,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAC,WAAW,EAAE,EAAE,EAAC,CAAC,CAAC;IAC7D,CAAC;IAED,gDAAgB,GAAhB;QACI,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACpC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC,CAAC;IAC1D,CAAC;IAED,oDAAoB,GAApB,UAAqB,EAAE;QACnB,CAAC,CAAC,kBAAkB,GAAG,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED,0CAAU,GAAV,UAAW,MAAM;QAAjB,mBAOC;QANG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CACtC,cAAI;YACA,OAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,OAAI,CAAC,iBAAiB,CAAC,OAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAC3E,OAAI,CAAC,QAAQ,GAAG,OAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAC3C,CAAC,CAAC,CAAC;IACX,CAAC;IAED,iDAAiB,GAAjB,UAAkB,OAAO,EAAE,MAAM;QAC7B,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,KAAK,IAAI,CAAC,IAAI,OAAO,EAAE;YACnB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,QAAQ,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;gBACnD,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,SAAS,CAAC;aACtC;YACD,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,MAAM,EAAE;gBAChC,IAAI,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBAC3D,IAAI,KAAK,CAAC,MAAM,EAAE;oBACd,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;iBAC5B;gBACD,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aAChC;SACJ;QACD,OAAO,WAAW,CAAC;IACvB,CAAC;IAED,iDAAiB,GAAjB,UAAkB,OAAO;QAAzB,mBAiCC;QAhCG,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,cAAc,EAAE;YACjD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,EAAE,CAAC;YAC/B,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;YACnB,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,cAAc,CAAC;YAClE,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAC,WAAW,EAAE,EAAE,EAAC,CAAC,CAAC;YACzD,IAAI,kBAAkB,GAAG;gBACrB,OAAO,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,cAAc;gBACxD,SAAS,EAAE,OAAO,CAAC,SAAS;gBAC5B,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,KAAK,EAAE,EAAE;gBACT,WAAW,EAAE,EAAE;gBACf,cAAc,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,cAAc;aAClE,CAAC;YAEF,IAAI,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE;gBACpC,OAAO;aACV;YACD,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,kBAAkB,CAAC;iBAC9C,SAAS,CACN,cAAI;gBACA,OAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,EAAE,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAClH,OAAI,CAAC,UAAU,CAAC,OAAI,CAAC,MAAM,CAAC,CAAC;gBAC7B,OAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,OAAI,CAAC,SAAS,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;SACd;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,yCAAyC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC/H,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IAED,6CAAa,GAAb,UAAc,SAAS;QAAvB,mBAkBC;QAjBG,kDAAI,CAAC,IAAI,CAAC;YACN,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC;YAClD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC;YAChD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC;YAC1E,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC;SAC3E,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACX,IAAI,MAAM,CAAC,KAAK,EAAE;gBACd,OAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,SAAS,CAAC;qBACrC,SAAS,CACN,cAAI;oBACA,OAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,EAAE,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBAC/G,OAAI,CAAC,UAAU,CAAC,OAAI,CAAC,MAAM,CAAC,CAAC;gBACjC,CAAC,CAAC,CAAC;aACd;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAY,GAAZ,UAAa,OAAO,EAAE,KAAK,EAAE,KAAK;QAAlC,mBAMC;QALG,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YACnD,OAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,EAAE,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC/G,OAAI,CAAC,UAAU,CAAC,OAAI,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;;gBA9NqB,oEAAgB;gBAClB,sDAAM;gBACP,8DAAc;gBACR,0DAAW;gBAChB,wDAAa;gBACA,wFAAmB;gBAC3B,uEAAW;;IA5B3B;QAAR,2DAAK,EAAE;;6DAAqB;IACpB;QAAR,2DAAK,EAAE;;yDAAQ;IACP;QAAR,2DAAK,EAAE;;4DAAgB;IAiBuB;QAA9C,+DAAS,CAAC,iBAAiB,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;wEAAkB,wDAAU;kEAAC;IApBlE,qBAAqB;QANjC,+DAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;YAC7B,uQAA6C;;SAEhD,CAAC;+EAyBwB,oEAAgB;YAClB,sDAAM;YACP,8DAAc;YACR,0DAAW;YAChB,wDAAa;YACA,wFAAmB;YAC3B,uEAAW;OA7B3B,qBAAqB,CAuPjC;IAAD,4BAAC;CAAA;AAvPiC;;;;;;;;;;;;;AClBlC;AAAe,6GAA8C,mM;;;;;;;;;;;;;;;;;;;;;;;;;ACAN;AACd;AACO;AACK;AACtB;AAEuC;AAEiC;AAQvG;IAsBI,8BACW,eAAgC,EAChC,SAA2B,EAC1B,WAAwB,EACxB,MAAqB;QAHtB,oBAAe,GAAf,eAAe,CAAiB;QAChC,cAAS,GAAT,SAAS,CAAkB;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QArBjC,uBAAkB,GAAG,6EAAqB,CAAC;QAC3C,yBAAoB,GAAG,+EAAuB,CAAC;QAC/C,cAAS,GAAG;YACR,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,GAAG;YACT,IAAI,EAAE,GAAG;YACT,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,IAAI;YACd,WAAW,EAAE,SAAS;YACtB,KAAK,EAAE,CAAC;YACR,GAAG,EAAE,GAAG;YACR,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,SAAS;YACrB,QAAQ,EAAE,SAAS;SACtB,CAAC;IAQF,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAED,0CAAW,GAAX,UAAY,MAAM;QAAlB,iBAMC;QALG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;aAC3B,SAAS,CACN,cAAI;YACA,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;IACf,CAAC;IAED,4CAAa,GAAb,UAAc,MAAM;QAChB,OAAO,cAAc,GAAG,MAAM,CAAC;IACnC,CAAC;IAED,iDAAkB,GAAlB,UAAmB,SAAS;QACxB,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;IAC9C,CAAC;IAED,qDAAsB,GAAtB,UAAuB,WAAW;QAC9B,OAAO,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;IAED,iDAAkB,GAAlB,UAAmB,MAAW,EAAE,QAAa;QAA7C,iBAKC;QAJG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/E,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,yBAAyB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC9G,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAgB,GAAhB,UAAiB,MAAW,EAAE,MAAW;QAAzC,iBASC;QARG,IAAI,UAAU,GAAG;YACb,EAAE,EAAE,MAAM;YACV,MAAM,EAAE,MAAM,CAAC,EAAE;SACpB,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC5G,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAa,GAAb,UAAc,MAAM;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED,6CAAc,GAAd,UAAe,IAAI,EAAE,KAAK;QAA1B,iBAQC;QAPG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;aAC7B,SAAS,CACN,cAAI;YACA,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC5G,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACf,CAAC;IAED,gDAAiB,GAAjB,UAAkB,OAAO,EAAE,IAAI,EAAE,KAAK;QAAtC,iBAMC;QALG,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3C,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC5G,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iDAAkB,GAAlB,UAAmB,QAAQ;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;YACjE,OAAO,IAAI,CAAC;SACf;aAAM,IAAI,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,QAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE;YAC5F,OAAO,IAAI,CAAC;SACf;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IAED,4CAAa,GAAb,UAAc,EAAE;QAAhB,iBAgBC;QAfG,kDAAI,CAAC,IAAI,CAAC;YACN,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC;YAClD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC;YAChD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC;YAC1E,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC;SAC3E,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACX,IAAI,MAAM,CAAC,KAAK,EAAE;gBACd,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;oBACtC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBAC5G,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;gBAjG2B,+DAAe;gBACrB,oEAAgB;gBACb,uEAAW;gBAChB,wDAAa;;IAzBxB;QAAR,2DAAK,EAAE;;sDAAW;IACV;QAAR,2DAAK,EAAE;;2DAAgB;IACf;QAAR,2DAAK,EAAE;;4DAAqB;IACpB;QAAR,2DAAK,EAAE;;wDAAQ;IAJP,oBAAoB;QANhC,+DAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;YAC5B,oQAA4C;;SAE/C,CAAC;+EAyB8B,+DAAe;YACrB,oEAAgB;YACb,uEAAW;YAChB,wDAAa;OA1BxB,oBAAoB,CAyHhC;IAAD,2BAAC;CAAA;AAzHgC;;;;;;;;;;;;;AChBjC;AAAe,6GAA8C,+M;;;;;;;;;;;;;;;;;;;;;;ACAC;AACf;AACN;AACY;AACxB;AAEsD;AAQnF;IAWI,kCACW,SAA2B,EAC3B,oBAAgC,EAC/B,MAAqB,EACrB,iBAAoC;QAHrC,cAAS,GAAT,SAAS,CAAkB;QAC3B,yBAAoB,GAApB,oBAAoB,CAAY;QAC/B,WAAM,GAAN,MAAM,CAAe;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAdzC,UAAK,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAKrD,iBAAY,GAAY,KAAK,CAAC;QAC9B,iBAAY,GAAG,KAAK,CAAC;QACrB,oBAAe,GAAG,KAAK,CAAC;QACxB,oBAAe,GAAG,KAAK,CAAC;IAQxB,CAAC;IAED,2CAAQ,GAAR;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,4CAAO,EAAE,CAAC;IACjC,CAAC;IAED,6CAAU,GAAV,UAAW,KAAK;QAAhB,iBA6BC;QA5BG,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,IAAI,IAAI,GAAS,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,QAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,QAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxB,QAAM,CAAC,MAAM,GAAG,eAAK;gBACjB,IAAI,OAAO,GAAW,QAAM,CAAC,MAAgB,CAAC;gBAC9C,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBAEvB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,KAAI,CAAC,OAAO,IAAI,SAAS,EAAE;oBAC3B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;iBAC/B;qBAAM;oBACH,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;iBAChC;gBAED,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC7B,IAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACzD,IAAI,GAAG,IAAI,KAAK,EAAE;oBACd,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uCAAuC,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBAC1H,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,OAAO;iBACV;gBAED,IAAI,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACrC,IAAI,WAAW,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC3C,KAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC;YACzC,CAAC,CAAC;SACL;IACL,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAQC;QAPG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;aAClD,SAAS,CACN,cAAI;YACA,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;YAC9B,KAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACf,CAAC;IAED,2CAAQ,GAAR;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;;gBAvDqB,oEAAgB;gBACL,8DAAU;gBACvB,wDAAa;gBACF,oFAAiB;;IAfvC,wBAAwB;QANpC,+DAAS,CAAC;YACP,QAAQ,EAAE,uBAAuB;YACjC,mRAAiD;;SAEpD,CAAC;+EAcwB,oEAAgB;YACL,8DAAU;YACvB,wDAAa;YACF,oFAAiB;OAfvC,wBAAwB,CAqEpC;IAAD,+BAAC;CAAA;AArEoC;;;;;;;;;;;;;ACdrC;AAAe,6GAA8C,+L;;;;;;;;;;;;;;;;;;;;;ACAN;AACD;AACb;AACY;AAEiB;AAQtE;IAOI,4BACW,SAA2B,EAC1B,WAAwB,EACxB,MAAqB,EACrB,WAAwB;QAHzB,cAAS,GAAT,SAAS,CAAkB;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,gBAAW,GAAX,WAAW,CAAa;QANpC,oBAAe,GAAG,KAAK,CAAC;IAQxB,CAAC;IAED,qCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAClB,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;SAC3B,CAAC,CAAC;IACP,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAWC;QAVG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC3B,OAAO;SACV;QAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;aAChD,SAAS,CACN,cAAI;YACA,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAChH,CAAC,CAAC,CAAC;IACf,CAAC;;gBAzBqB,oEAAgB;gBACb,0DAAW;gBAChB,wDAAa;gBACR,uEAAW;;IAV3B;QAAR,2DAAK,EAAE;;oDAAM;IACL;QAAR,2DAAK,EAAE;;0DAAqB;IAFpB,kBAAkB;QAN9B,+DAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,8PAA0C;;SAE7C,CAAC;+EAUwB,oEAAgB;YACb,0DAAW;YAChB,wDAAa;YACR,uEAAW;OAX3B,kBAAkB,CAkC9B;IAAD,yBAAC;CAAA;AAlC8B;;;;;;;;;;;;;ACb/B;AAAe,6GAA8C,mL;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACP;AACoC;AACtB;AACd;AACY;AAGqC;AACd;AACN;AACiB;AAQvF;IAsBI,2BACW,SAA2B,EAC3B,QAAkB,EACjB,KAAqB,EACrB,MAAc,EACd,WAAwB,EACxB,MAAqB,EACrB,cAA8B,EAC9B,WAAwB,EACxB,mBAAwC,EACxC,qBAA4C;QAVxD,iBAgBC;QAfU,cAAS,GAAT,SAAS,CAAkB;QAC3B,aAAQ,GAAR,QAAQ,CAAU;QACjB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,0BAAqB,GAArB,qBAAqB,CAAuB;QA1BxD,iBAAY,GAAQ,EAAC,MAAM,EAAE,CAAC,EAAC,CAAC;QAChC,oBAAe,GAAG,KAAK,CAAC;QACxB,iBAAY,GAAG,KAAK,CAAC;QACrB,iBAAY,GAAG,KAAK,CAAC;QACrB,UAAK,GAAG,EAAE,CAAC;QACX,YAAO,GAAG,EAAE,CAAC;QACb,oBAAe,GAAG,EAAE,CAAC;QACrB,oBAAe,GAAY;YACvB,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,GAAG;SACZ,CAAC;QACF,qBAAgB,GAAG;YACf,eAAe,EAAE,YAAY;YAC7B,cAAc,EAAE,WAAW;SAC9B,CAAC;QAcE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,SAAS,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAC5E,CAAC;IAED,sBAAI,0CAAW;aAAf;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QACtC,CAAC;;;OAAA;IAED,oCAAQ,GAAR;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,uCAAW,GAAX,UAAY,MAAM;QAAlB,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,KAAI,CAAC,aAAa,EAAE,CAAC;YACrB,KAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,yCAAa,GAAb;QACI,IAAI,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC9B,IAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACzE;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACrE;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YAC3B,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACnE;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC/D;IACL,CAAC;IAED,qCAAS,GAAT;QACI,gBAAgB;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SACvC;QAED,kBAAkB;QAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAErE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,YAAY,EAAE,CAAC,OAAO,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC9C,UAAU,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;YAC5C,kBAAkB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;YAClD,gBAAgB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;YAC9C,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;YAC5C,aAAa,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;YACxC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAChC,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,yDAAU,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;YACxF,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,WAAW,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;YACpC,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC;YACrB,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YACxC,aAAa,EAAE,CAAC,IAAI,CAAC;SACxB,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,0CAAc,GAAd;QAAA,iBAIC;QAHG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,cAAI;YAC5C,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAoB,GAApB;QAAA,iBAOC;QANG,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3D,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9B,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;aAC3C;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAe,GAAf,UAAgB,SAAS;QAAzB,iBAqBC;QApBG,SAAS,CAAC,OAAO,CAAC,iBAAO;;YACrB,IAAI,OAAO,GAAc,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC;YACjE,IAAI,UAAU,GAAG,IAAI,CAAC;YACtB,IAAI,OAAO,CAAC,WAAW,IAAI,CAAC,EAAE;gBAC1B,UAAU,GAAG,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;aACtC;YACD,IAAI,OAAO,CAAC,UAAU,IAAI,MAAM,IAAI,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;gBACzE,OAAO,CAAC,IAAI,CACR,KAAI,CAAC,WAAW,CAAC,KAAK;oBAClB,GAAC,OAAO,CAAC,YAAY,IAAG,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,UAAU,CAAC;wBACjF,CACL,CAAC;aACL;iBAAM;gBACH,OAAO,CAAC,IAAI,CACR,KAAI,CAAC,WAAW,CAAC,KAAK;oBAClB,GAAC,OAAO,CAAC,YAAY,IAAG,CAAC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,UAAU,CAAC;wBACvE,CACL,CAAC;aACL;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAa,GAAb,UAAc,MAAM;QAChB,OAAO,cAAc,GAAG,MAAM,CAAC;IACnC,CAAC;IAED,uCAAW,GAAX;QAAA,iBAIC;QAHG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,cAAI;YAC3C,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAa,GAAb,UAAc,KAAU;QACpB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,kBAAkB,EAAE,IAAI,EAAC,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,gBAAgB,EAAE,IAAI,EAAC,CAAC,CAAC;QACvD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,aAAa,EAAE,IAAI,EAAC,CAAC,CAAC;QAEpD,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,IAAI,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE,EAAE;YAC3I,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,OAAO;SACV;QAED,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAExD,gBAAgB;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SACvC;QACD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;IACxD,CAAC;IAED,8CAAkB,GAAlB;QACI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC;IAC1D,CAAC;IAED,+CAAmB,GAAnB,UAAoB,KAAU;QAC1B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,kBAAkB,EAAC,CAAC,CAAC;IACjG,CAAC;IAED,+CAAmB,GAAnB,UAAoB,KAAU;QAC1B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,EAAC,CAAC,CAAC;IAC3F,CAAC;IAED,oCAAQ,GAAR;QAAA,iBA8BC;QA7BG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC3B,OAAO;SACV;QAED,mBAAmB;QACnB,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;YAC/E,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,EACpE,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAC3E,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,EAAE;gBAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,OAAO;aACV;SACJ;QAED,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;QAED,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;QAC/H,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;QAC3H,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;QACzH,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;QAErH,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3D,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qBAAqB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC1G,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAe,GAAf;QACI,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY,CAAC;QAC/C,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,GAAG,CAAC,OAAO,CAAC,UAAU,IAAI;YACtB,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,UAAU,IAAI,MAAM,EAAE;gBAChD,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC;aAC/D;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,aAAa,EAAE,GAAG,EAAC,CAAC,CAAC;IACvD,CAAC;;gBAvNqB,oEAAgB;gBACjB,wDAAQ;gBACV,8DAAc;gBACb,sDAAM;gBACD,0DAAW;gBAChB,wDAAa;gBACL,6EAAc;gBACjB,uEAAW;gBACH,yFAAmB;gBACjB,2FAAqB;;IAhC/C,iBAAiB;QAN7B,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,sPAAyC;;SAE5C,CAAC;+EAyBwB,oEAAgB;YACjB,wDAAQ;YACV,8DAAc;YACb,sDAAM;YACD,0DAAW;YAChB,wDAAa;YACL,6EAAc;YACjB,uEAAW;YACH,yFAAmB;YACjB,2FAAqB;OAhC/C,iBAAiB,CAgP7B;IAAD,wBAAC;CAAA;AAhP6B;;;;;;;;;;;;;ACnB9B;AAAe,gFAAiB,kBAAkB,GAAG,6CAA6C,uqB;;;;;;;;;;;;;;;;;;;;;;;;;ACAlD;AACP;AACoC;AACtB;AACd;AACY;AAGiB;AACiB;AACX;AAS5E;IAsBI,6BACW,SAA2B,EAC1B,MAAc,EACd,KAAqB,EACrB,WAAwB,EACxB,MAAqB,EACrB,WAAwB,EACxB,cAA8B,EAC9B,mBAAwC,EACzC,QAAkB;QARlB,cAAS,GAAT,SAAS,CAAkB;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACzC,aAAQ,GAAR,QAAQ,CAAU;QA1B7B,iBAAY,GAAQ,EAAC,MAAM,EAAE,CAAC,EAAC,CAAC;QAChC,oBAAe,GAAG,KAAK,CAAC;QACxB,iBAAY,GAAG,KAAK,CAAC;QACrB,iBAAY,GAAG,KAAK,CAAC;QACrB,oBAAe,GAAG,EAAE,CAAC;QACrB,UAAK,GAAG,EAAE,CAAC;QACX,YAAO,GAAG,EAAE,CAAC;QACb,mBAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC/C,oBAAe,GAAY;YACvB,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,GAAG;SACZ,CAAC;QACF,qBAAgB,GAAG;YACf,eAAe,EAAE,YAAY;YAC7B,cAAc,EAAE,WAAW;SAC9B,CAAC;IAaF,CAAC;IAED,sBAAI,4CAAW;aAAf;YACI,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;QACxC,CAAC;;;OAAA;IAED,sCAAQ,GAAR;QACI,IAAI,IAAI,CAAC,cAAc,IAAI,EAAE,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAC1D,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;SAC3B;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,uCAAS,GAAT,UAAU,YAAY;QAClB,IAAI,YAAY,IAAI,CAAC,EAAE;YACnB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACzC,cAAc,EAAE,CAAC,YAAY,CAAC;gBAC9B,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC5D,YAAY,EAAE,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAC5C,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBACvC,eAAe,EAAE,CAAC,IAAI,CAAC;gBACvB,kBAAkB,EAAE,CAAC,IAAI,CAAC;gBAC1B,gBAAgB,EAAE,CAAC,IAAI,CAAC;gBACxB,eAAe,EAAE,CAAC,IAAI,CAAC;gBACvB,aAAa,EAAE,CAAC,IAAI,CAAC;gBACrB,SAAS,EAAE,CAAC,IAAI,CAAC;gBACjB,MAAM,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAChC,QAAQ,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAClC,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;gBACjE,QAAQ,EAAE,CAAC,CAAC,CAAC;gBACb,WAAW,EAAE,CAAC,EAAE,CAAC;gBACjB,KAAK,EAAE,EAAE;gBACT,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;gBACxC,aAAa,EAAE,CAAC,IAAI,CAAC;aACxB,CAAC,CAAC;YAEH,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC5B;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC3C;IACL,CAAC;IAED,6CAAe,GAAf,UAAgB,UAAU;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;QAExC,KAAK;QACL,gBAAgB;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SACvC;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,cAAc,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC;YAC/B,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5D,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,UAAU,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;YAC7B,eAAe,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;YAC/C,kBAAkB,EAAE,CAAC,IAAI,CAAC;YAC1B,gBAAgB,EAAE,CAAC,IAAI,CAAC;YACxB,eAAe,EAAE,CAAC,IAAI,CAAC;YACvB,aAAa,EAAE,CAAC,IAAI,CAAC;YACrB,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,MAAM,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,QAAQ,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;YACjE,QAAQ,EAAE,CAAC,CAAC,CAAC;YACb,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC;YACrB,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YACxC,aAAa,EAAE,CAAC,IAAI,CAAC;SACxB,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,kDAAoB,GAApB;QAAA,iBASC;QARG,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CAAC,CAAC;aAC3C,SAAS,CACN,cAAI;YACA,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9B,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;aAC3C;QACL,CAAC,CAAC,CAAC;IACf,CAAC;IAED,2CAAa,GAAb;QACI,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,EAAE;YAC1B,OAAO,cAAc,CAAC;SACzB;aAAM;YACH,OAAO,qBAAqB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;SACzD;IACL,CAAC;IAED,yCAAW,GAAX;QAAA,iBAOC;QANG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;aAC3B,SAAS,CACN,cAAI;YACA,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACf,CAAC;IAED,4CAAc,GAAd;QAAA,iBAIC;QAHG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,cAAI;YAC5C,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAqB,GAArB,UAAsB,YAAY;QAAlC,iBAIC;QAHG,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI;YACjE,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAC,YAAY,EAAE,KAAI,CAAC,UAAU,CAAC,YAAY,GAAG,GAAG,GAAG,IAAI,EAAC,CAAC,CAAC;QAC9F,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAa,GAAb,UAAc,YAAY;QAA1B,iBAMC;QALG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC;aACvC,SAAS,CACN,cAAI;YACA,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACf,CAAC;IAED,2CAAa,GAAb,UAAc,KAAU;QACpB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;QAClD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAC,kBAAkB,EAAE,IAAI,EAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAC,gBAAgB,EAAE,IAAI,EAAC,CAAC,CAAC;QACzD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAC,aAAa,EAAE,IAAI,EAAC,CAAC,CAAC;QAEtD,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,IAAI,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE,EAAE;YACjJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,OAAO;SACV;QAED,KAAK;QACL,kBAAkB;QAClB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAExD,KAAK;QACL,gBAAgB;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SACvC;QACD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;QAEtD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,6CAAe,GAAf,UAAgB,SAAS;QAAzB,iBAcC;QAbG,SAAS,CAAC,OAAO,CAAC,iBAAO;;YACrB,IAAI,OAAO,GAAc,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,YAAY,CAAC;YACnE,IAAI,UAAU,GAAG,IAAI,CAAC;YACtB,IAAI,OAAO,CAAC,WAAW,IAAI,CAAC,EAAE;gBAC1B,UAAU,GAAG,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;aACtC;YAED,OAAO,CAAC,IAAI,CACR,KAAI,CAAC,WAAW,CAAC,KAAK;gBAClB,GAAC,OAAO,CAAC,YAAY,IAAG,CAAC,IAAI,EAAE,UAAU,CAAC;oBAC5C,CACL,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAe,GAAf;QACI,IAAI,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,YAAY,EAC5C,GAAG,GAAG,EAAE,EACR,IAAI,GAAG,CAAC,EACR,IAAI,GAAG,IAAI,CAAC;QAEhB,GAAG,CAAC,OAAO,CAAC,UAAU,IAAI;YACtB,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,UAAU,IAAI,MAAM,EAAE;gBAChD,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC;aAC/D;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAC,aAAa,EAAE,GAAG,EAAC,CAAC,CAAC;IACzD,CAAC;IAED,iDAAmB,GAAnB,UAAoB,KAAU;QAC1B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAC,gBAAgB,EAAE,KAAK,EAAC,CAAC,CAAC;IAC9D,CAAC;IAED,iDAAmB,GAAnB,UAAoB,KAAU;QAC1B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAC,aAAa,EAAE,KAAK,EAAC,CAAC,CAAC;IAC3D,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAiCC;QAhCG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;YAC7B,OAAO;SACV;QAED,KAAK;QACL,mBAAmB;QACnB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,eAAe,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YAC3E,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,EAC9D,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAC7E,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,EAAE;gBAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,OAAO;aACV;SACJ;QAED,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;QAED,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;QACnI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;QAC/H,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;QAC7H,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;QAEzH,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;aAC7C,SAAS,CACN,cAAI;YACA,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC5G,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACf,CAAC;;gBAnPqB,oEAAgB;gBAClB,sDAAM;gBACP,8DAAc;gBACR,0DAAW;gBAChB,wDAAa;gBACR,uEAAW;gBACR,6EAAc;gBACT,wFAAmB;gBAC/B,wDAAQ;;IA/BpB,mBAAmB;QAP/B,+DAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;YAC3B,4PAA2C;YAE3C,mBAAmB,EAAE,IAAI;;SAC5B,CAAC;+EAyBwB,oEAAgB;YAClB,sDAAM;YACP,8DAAc;YACR,0DAAW;YAChB,wDAAa;YACR,uEAAW;YACR,6EAAc;YACT,wFAAmB;YAC/B,wDAAQ;OA/BpB,mBAAmB,CA2Q/B;IAAD,0BAAC;CAAA;AA3Q+B;;;;;;;;;;;;;ACnBhC;AAAe,6GAA8C,2L;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACO;AACP;AAEsB;AACa;AAEZ;AAQvE;IAOI,6BACY,KAAqB,EACrB,MAAc,EACf,eAAgC,EAC/B,WAAwB,EACxB,qBAA4C;QALxD,iBAWC;QAVW,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACf,oBAAe,GAAf,eAAe,CAAiB;QAC/B,gBAAW,GAAX,WAAW,CAAa;QACxB,0BAAqB,GAArB,qBAAqB,CAAuB;QATxD,iBAAY,GAAG,KAAK,CAAC;QACrB,eAAU,GAAG,KAAK,CAAC;QACX,WAAM,GAAG,qEAAW,CAAC,MAAM,CAAC;QAShC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,SAAS,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAC5E,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAED,gDAAkB,GAAlB,UAAmB,IAAI;QACnB,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;YACjE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAC1B;aAAM,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE;YACpF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAC1B;IACL,CAAC;IAED,qCAAO,GAAP,UAAQ,MAAM;QAAd,iBAMC;QALG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,KAAI,CAAC,kBAAkB,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;;gBA9BkB,8DAAc;gBACb,sDAAM;gBACE,+DAAe;gBAClB,uEAAW;gBACD,kGAAqB;;IAZ/C,mBAAmB;QAN/B,+DAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;YAC3B,4PAA2C;;SAE9C,CAAC;+EAUqB,8DAAc;YACb,sDAAM;YACE,+DAAe;YAClB,uEAAW;YACD,kGAAqB;OAZ/C,mBAAmB,CAuC/B;IAAD,0BAAC;CAAA;AAvC+B;;;;;;;;;;;;;ACfhC;AAAe,6GAA8C,mL;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACP;AACoC;AACtB;AACd;AACO;AACK;AAGkC;AACjB;AACM;AACc;AAS1F;IAuBI,2BACW,SAA2B,EAC3B,QAAkB,EACjB,KAAqB,EACrB,MAAc,EACf,eAAgC,EAC/B,WAAwB,EACxB,MAAqB,EACrB,WAAwB,EACxB,cAA8B,EAC9B,mBAAwC,EACxC,qBAA4C;QAXxD,iBAiBC;QAhBU,cAAS,GAAT,SAAS,CAAkB;QAC3B,aAAQ,GAAR,QAAQ,CAAU;QACjB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACf,oBAAe,GAAf,eAAe,CAAiB;QAC/B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,0BAAqB,GAArB,qBAAqB,CAAuB;QA3BxD,iBAAY,GAAQ,EAAC,MAAM,EAAE,CAAC,EAAC,CAAC;QAChC,oBAAe,GAAG,KAAK,CAAC;QACxB,iBAAY,GAAG,KAAK,CAAC;QACrB,iBAAY,GAAG,KAAK,CAAC;QACrB,UAAK,GAAG,EAAE,CAAC;QACX,YAAO,GAAG,EAAE,CAAC;QACb,oBAAe,GAAG,EAAE,CAAC;QACrB,oBAAe,GAAY;YACvB,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,GAAG;SACZ,CAAC;QACF,qBAAgB,GAAG;YACf,eAAe,EAAE,YAAY;YAC7B,cAAc,EAAE,WAAW;SAC9B,CAAC;QAeE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,SAAS,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAC5E,CAAC;IAED,sBAAI,0CAAW;aAAf;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QACtC,CAAC;;;OAAA;IAED,oCAAQ,GAAR;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,qCAAS,GAAT;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAClB,cAAc,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;YAC1C,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,YAAY,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC7D,UAAU,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;YAC5C,kBAAkB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;YAClD,gBAAgB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;YAC9C,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;YAC5C,aAAa,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;YACxC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAChC,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,yDAAU,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;YACxF,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,WAAW,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;YACpC,KAAK,EAAE,EAAE;YACT,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YACxC,aAAa,EAAE,CAAC,IAAI,CAAC;SACxB,CAAC,CAAC;QAEH,KAAK;QACL,kBAAkB;QAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrE,KAAK;QACL,gBAAgB;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC;SAC/C;QACD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;QAEpD,KAAK;QACL,gBAAgB;QAChB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,KAAK;QACL,oBAAoB;QACpB,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAChD;aAAM;YACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC5B;IACL,CAAC;IAED,2CAAe,GAAf,UAAgB,UAAU;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,yCAAa,GAAb,UAAc,MAAM;QAChB,OAAO,cAAc,GAAG,MAAM,CAAC;IACnC,CAAC;IAED,gDAAoB,GAApB;QAAA,iBASC;QARG,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CAAC,CAAC;aAC3C,SAAS,CACN,cAAI;YACA,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9B,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;aAC3C;QACL,CAAC,CAAC,CAAC;IACf,CAAC;IAED,2CAAe,GAAf,UAAgB,SAAS;QAAzB,iBAqBC;QApBG,SAAS,CAAC,OAAO,CAAC,iBAAO;;YACrB,IAAI,OAAO,GAAc,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC;YACjE,IAAI,UAAU,GAAG,IAAI,CAAC;YACtB,IAAI,OAAO,CAAC,WAAW,IAAI,CAAC,EAAE;gBAC1B,UAAU,GAAG,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;aACtC;YACD,IAAI,OAAO,CAAC,UAAU,IAAI,MAAM,IAAI,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;gBACzE,OAAO,CAAC,IAAI,CACR,KAAI,CAAC,WAAW,CAAC,KAAK;oBAClB,GAAC,OAAO,CAAC,YAAY,IAAG,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,UAAU,CAAC;wBACjF,CACL,CAAC;aACL;iBAAM;gBACH,OAAO,CAAC,IAAI,CACR,KAAI,CAAC,WAAW,CAAC,KAAK;oBAClB,GAAC,OAAO,CAAC,YAAY,IAAG,CAAC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,UAAU,CAAC;wBACvE,CACL,CAAC;aACL;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAkB,GAAlB,UAAmB,IAAI;QACnB,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;SACpE;aAAM,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE;SACvF;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACnC;IACL,CAAC;IAED,uCAAW,GAAX;QAAA,iBAIC;QAHG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,cAAI;YAC3C,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAW,GAAX,UAAY,MAAM;QAAlB,iBAUC;QATG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;aAC3B,SAAS,CACN,cAAI;YACA,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,KAAI,CAAC,kBAAkB,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YACnC,KAAI,CAAC,aAAa,EAAE,CAAC;YACrB,KAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IAEf,CAAC;IAED,yCAAa,GAAb;QACI,IAAI,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC9B,IAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACzE;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACrE;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YAC3B,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACnE;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC/D;IACL,CAAC;IAED,yCAAa,GAAb,UAAc,YAAY;QAA1B,iBAMC;QALG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC;aACvC,SAAS,CACN,cAAI;YACA,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACf,CAAC;IAED,2CAAe,GAAf;QACI,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY,CAAC;QAC/C,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,GAAG,CAAC,OAAO,CAAC,UAAU,IAAI;YACtB,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,UAAU,IAAI,MAAM,EAAE;gBAChD,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC;aAC/D;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,aAAa,EAAE,GAAG,EAAC,CAAC,CAAC;IACvD,CAAC;IAED,yCAAa,GAAb,UAAc,KAAU;QACpB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,kBAAkB,EAAE,IAAI,EAAC,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,gBAAgB,EAAE,IAAI,EAAC,CAAC,CAAC;QACvD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,aAAa,EAAE,IAAI,EAAC,CAAC,CAAC;QAEpD,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,IAAI,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE,EAAE;YAC3I,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,OAAO;SACV;QAED,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAExD,KAAK;QACL,gBAAgB;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC;SAC/C;QACD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;IACxD,CAAC;IAED,8CAAkB,GAAlB;QACI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC;IAC1D,CAAC;IAED,+CAAmB,GAAnB,UAAoB,KAAU;QAC1B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,kBAAkB,EAAC,CAAC,CAAC;IACjG,CAAC;IAED,+CAAmB,GAAnB,UAAoB,KAAU;QAC1B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,EAAC,CAAC,CAAC;IAC3F,CAAC;IAED,oCAAQ,GAAR;QAAA,iBA+BC;QA9BG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC3B,OAAO;SACV;QAED,KAAK;QACL,mBAAmB;QACnB,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;YAC/E,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,EACpE,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAC3E,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,EAAE;gBAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,OAAO;aACV;SACJ;QAED,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;QAED,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;QAC/H,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;QAC3H,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;QACzH,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;QAErH,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3D,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC5G,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;;gBA1PqB,oEAAgB;gBACjB,wDAAQ;gBACV,8DAAc;gBACb,sDAAM;gBACE,+DAAe;gBAClB,0DAAW;gBAChB,wDAAa;gBACR,uEAAW;gBACR,8EAAc;gBACT,wFAAmB;gBACjB,4FAAqB;;IAlC/C,iBAAiB;QAP7B,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,sPAAyC;YAEzC,mBAAmB,EAAE,IAAI;;SAC5B,CAAC;+EA0BwB,oEAAgB;YACjB,wDAAQ;YACV,8DAAc;YACb,sDAAM;YACE,+DAAe;YAClB,0DAAW;YAChB,wDAAa;YACR,uEAAW;YACR,8EAAc;YACT,wFAAmB;YACjB,4FAAqB;OAlC/C,iBAAiB,CAoR7B;IAAD,wBAAC;CAAA;AApR6B;;;;;;;;;;;;;ACrB9B;AAAe,oGAAqC,kBAAkB,GAAG,2FAA2F,qBAAqB,GAAG,6CAA6C,+iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9K;AACX;AACO;AACQ;AACD;AACrB;AACO;AACK;AACC;AACzB;AACE;AAEuC;AACoB;AAEgB;AAE5B;AAEP;AAE/C;AACI;AAS5B;IA+BI,2BACW,SAA2B,EAC3B,eAAgC,EAC/B,YAA4B,EAC5B,IAAgB,EAChB,eAAgC,EAChC,WAAwB,EACxB,MAAc,EACd,MAAqB,EACrB,KAAqB,EACrB,qBAA4C;QAVxD,iBAaC;QAZU,cAAS,GAAT,SAAS,CAAkB;QAC3B,oBAAe,GAAf,eAAe,CAAiB;QAC/B,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,SAAI,GAAJ,IAAI,CAAY;QAChB,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAgB;QACrB,0BAAqB,GAArB,qBAAqB,CAAuB;QArCxD,cAAS,GAAiB,IAAI,6CAAO,EAAE,CAAC;QACxC,cAAS,GAAQ,EAAE,CAAC;QAGpB,mBAAc,GAAG,CAAC,CAAC;QAEnB,UAAK,GAAG,EAAE,CAAC;QACX,uBAAkB,GAAG,8EAAqB,CAAC;QAC3C,kBAAa,GAAG,UAAU,CAAC;QAC3B,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAmB;YAC7B,IAAI,EAAE,KAAK;YACX,kBAAkB,EAAE,aAAa;SACpC,CAAC;QACF,qBAAgB,GAAG;YACf,eAAe,EAAE,YAAY;YAC7B,cAAc,EAAE,WAAW;SAC9B,CAAC;QACF,iBAAY,GAAG;YACX,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,mBAAmB,EAAE,KAAK;YAC1B,KAAK,EAAE,+CAA+C;SACzD,CAAC;QACM,WAAM,GAAG,sEAAW,CAAC,MAAM,CAAC;QAchC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,SAAS,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAC5E,CAAC;IAED,oCAAQ,GAAR;QACI,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAED,6CAAiB,GAAjB;QAAA,iBA+IC;QA9IG,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;YACxC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SAChE;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE;YAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;SACpE;QAED,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG;YACb,UAAU,EAAE,cAAc;YAC1B,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,uBAAuB;YAC3D,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE,IAAI;YAChB,GAAG,EAAE,0BAA0B;YAC/B,KAAK,EAAE,CAAC,CAAC,CAAC;YACV,OAAO,EAAE;gBACL;oBACI,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAChB;gBACD;oBACI,UAAU,EAAE,IAAI;oBAChB,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAChB;gBACD;oBACI,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAChB;gBACD;oBACI,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAChB;gBACD;oBACI,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAChB;gBACD;oBACI,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAChB;gBACD;oBACI,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAChB;gBACD;oBACI,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAChB;gBACD;oBACI,UAAU,EAAE,KAAK;oBACjB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAChB;aACJ;YACD,OAAO,EAAE;gBACL;oBACI,MAAM,EAAE,KAAK;oBACb,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC;oBAC5C,SAAS,EAAE,4BAA4B;oBACvC,MAAM,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM;wBACjC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAC5B,CAAC;iBACJ,EAAE;oBACC,MAAM,EAAE,OAAO;oBACf,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC;oBAC5C,SAAS,EAAE,4BAA4B;oBACvC,MAAM,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM;wBACjC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBAC7B,CAAC;iBACJ,EAAE;oBACC,MAAM,EAAE,KAAK;oBACb,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC;oBAC5C,SAAS,EAAE,4BAA4B;oBACvC,MAAM,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM;wBACjC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAC5B,CAAC;iBACJ;aACJ;YACD,QAAQ,EAAE;gBACN,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC;gBACrE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,wBAAwB,CAAC;gBACzD,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,6BAA6B,CAAC;gBACnE,SAAS,EAAE,EAAE;gBACb,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC;gBACvE,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iCAAiC,CAAC;gBAC3E,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC;gBACrE,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kCAAkC,CAAC;gBAC7E,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC;gBACrE,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC;gBACvE,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC;gBACnF,WAAW,EAAE;oBACT,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC;oBACrE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kCAAkC,CAAC;oBACnE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kCAAkC,CAAC;oBACnE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,sCAAsC,CAAC;iBAC9E;gBACD,OAAO,EAAE;oBACL,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uCAAuC,CAAC;oBACjF,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,wCAAwC,CAAC;iBACtF;aACJ;YACD,IAAI,EAAE,UAAC,oBAAyB,EAAE,QAAQ;gBACtC,oBAAoB,GAAG;oBACnB,OAAO,EAAE,oBAAoB,CAAC,OAAO;oBACrC,IAAI,EAAE,oBAAoB,CAAC,IAAI;oBAC/B,MAAM,EAAE,oBAAoB,CAAC,MAAM;oBACnC,KAAK,EAAE,oBAAoB,CAAC,KAAK;oBACjC,MAAM,EAAE,oBAAoB,CAAC,MAAM;oBACnC,KAAK,EAAE,oBAAoB,CAAC,KAAK;oBACjC,MAAM,EAAE,KAAI,CAAC,cAAc;oBAC3B,MAAM,EAAE,KAAI,CAAC,aAAa;iBAC7B,CAAC;gBACF,KAAI,CAAC,IAAI;qBACJ,IAAI,CAAqB,KAAI,CAAC,MAAM,GAAG,gBAAgB,EAAE,oBAAoB,EAAE,EAAE,CAAC;qBAClF,SAAS,CAAC,cAAI;oBACX,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC;oBAChD,IAAI,KAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,EAAE;wBAC3B,KAAI,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;wBACzB,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;wBAC1B,KAAI,CAAC,WAAW,CAAC,WAAW,GAAG,CAAC,CAAC;wBACjC,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,CAAC;qBAClC;oBAED,QAAQ,CAAC;wBACL,YAAY,EAAE,IAAI,CAAC,YAAY;wBAC/B,eAAe,EAAE,IAAI,CAAC,eAAe;wBACrC,IAAI,EAAE,EAAE;qBACX,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACX,CAAC;SACJ,CAAC;IACN,CAAC;IAED,2CAAe,GAAf;QACI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,uCAAW,GAAX;QACI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAaC;QAZG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,UAA0B;YACtD,UAAU,CAAC,OAAO,EAAE,CAAC;YACrB,UAAU,CAAC;gBACP,KAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;gBAEtB,IAAI,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvB,CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;iBACrC;qBAAM;oBACH,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;iBACxC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAW,GAAX,UAAY,IAAI;QACZ,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC;QAChG,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAkB,GAAlB,UAAmB,IAAI;QACnB,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;YACjE,OAAO,IAAI,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE;YACpF,OAAO,IAAI,CAAC;SACf;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IAED,4CAAgB,GAAhB,UAAiB,MAAW,EAAE,MAAW;QAAzC,iBAWC;QAVG,IAAI,UAAU,GAAG;YACb,EAAE,EAAE,MAAM;YACV,MAAM,EAAE,MAAM,CAAC,EAAE;SACpB,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC;aACpC,SAAS,CACN,cAAI;YACA,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC5G,KAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACf,CAAC;IAED,0CAAc,GAAd,UAAe,QAAQ,EAAE,aAAa;QAClC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,gBAAgB,GAAG,cAAM,YAAK,EAAL,CAAK,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,yCAAa,GAAb,UAAc,MAAM;QAChB,OAAO,cAAc,GAAG,MAAM,CAAC;IACnC,CAAC;IAED,8CAAkB,GAAlB,UAAmB,SAAS;QACxB,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;IAC9C,CAAC;IAED,0CAAc,GAAd,UAAe,KAAK,EAAE,IAAI,EAAE,KAAK;QAAjC,iBAQC;QAPG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACrC,SAAS,CACN,cAAI;YACA,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC5G,KAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACf,CAAC;IAED,sCAAU,GAAV,UAAW,EAAE;QAAb,iBAkBC;QAjBG,mDAAI,CAAC,IAAI,CAAC;YACN,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC;YAClD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC;YAChD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC;YAC1E,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC;SAC3E,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACX,IAAI,MAAM,CAAC,KAAK,EAAE;gBACd,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC;qBACtB,SAAS,CACN,cAAI;oBACA,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBAC5G,KAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC,CAAC,CAAC;aACd;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAmB,GAAnB;QAAA,iBAMC;QALG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mHAAwB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACpF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,cAAI;YACtC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC5G,KAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;;gBAzQqB,oEAAgB;gBACV,+DAAe;gBACjB,kEAAc;gBACtB,+DAAU;gBACC,6DAAe;gBACnB,wEAAW;gBAChB,sDAAM;gBACN,wDAAa;gBACd,8DAAc;gBACE,4FAAqB;;IAtCxD;QADC,+DAAS,CAAC,qEAAkB,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;wEACnC,qEAAkB;wDAAC;IAHrB,iBAAiB;QAP7B,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,sPAAyC;YAEzC,mBAAmB,EAAE,IAAI;;SAC5B,CAAC;+EAkCwB,oEAAgB;YACV,+DAAe;YACjB,kEAAc;YACtB,+DAAU;YACC,6DAAe;YACnB,wEAAW;YAChB,sDAAM;YACN,wDAAa;YACd,8DAAc;YACE,4FAAqB;OAzC/C,iBAAiB,CA0S7B;IAAD,wBAAC;CAAA;AA1S6B;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BS;AACc;AACD;AAE0B;AACN;AACA;AACM;AACN;AAExE,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE;YACN;gBACI,IAAI,EAAE,EAAE;gBACR,WAAW,EAAE,CAAC,mEAAmB,CAAC;gBAClC,SAAS,EAAE,sFAAiB;gBAC5B,IAAI,EAAE;oBACF,WAAW,EAAE;wBACT,IAAI,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,YAAY,CAAC;qBAC/C;iBACJ;aACJ;YACD;gBACI,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,CAAC,mEAAmB,CAAC;gBAClC,SAAS,EAAE,4FAAmB;gBAC9B,IAAI,EAAE;oBACF,WAAW,EAAE;wBACT,IAAI,EAAE,eAAe;wBACrB,IAAI,EAAE,aAAa;wBACnB,IAAI,EAAE,IAAI;wBACV,MAAM,EAAE,IAAI;qBACf;oBACD,WAAW,EAAE;wBACT,IAAI,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,cAAc,CAAC;qBACjD;iBACJ;aACJ;YACD;gBACI,IAAI,EAAE,UAAU;gBAChB,WAAW,EAAE,CAAC,mEAAmB,CAAC;gBAClC,SAAS,EAAE,sFAAiB;gBAC5B,IAAI,EAAE;oBACF,WAAW,EAAE;wBACT,IAAI,EAAE,aAAa;wBACnB,IAAI,EAAE,aAAa;wBACnB,IAAI,EAAE,IAAI;wBACV,MAAM,EAAE,IAAI;qBACf;oBACD,WAAW,EAAE;wBACT,IAAI,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,cAAc,CAAC;qBACjD;iBACJ;aACJ;YACD;gBACI,IAAI,EAAE,UAAU;gBAChB,WAAW,EAAE,CAAC,mEAAmB,CAAC;gBAClC,SAAS,EAAE,sFAAiB;gBAC5B,IAAI,EAAE;oBACF,WAAW,EAAE;wBACT,IAAI,EAAE,aAAa;wBACnB,IAAI,EAAE,aAAa;wBACnB,SAAS,EAAE,IAAI;wBACf,IAAI,EAAE,IAAI;wBACV,MAAM,EAAE,IAAI;qBACf;iBACJ;aACJ;YACD;gBACI,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,4FAAmB;gBAC9B,WAAW,EAAE,CAAC,mEAAmB,CAAC;gBAClC,IAAI,EAAE;oBACF,WAAW,EAAE;wBACT,IAAI,EAAE,eAAe;wBACrB,IAAI,EAAE,aAAa;wBACnB,SAAS,EAAE,IAAI;wBACf,IAAI,EAAE,IAAI;wBACV,MAAM,EAAE,IAAI;qBACf;oBACD,WAAW,EAAE;wBACT,IAAI,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,cAAc,CAAC;qBACjD;iBACJ;aACJ;YACD;gBACI,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,4FAAmB;gBAC9B,WAAW,EAAE,CAAC,mEAAmB,CAAC;gBAClC,IAAI,EAAE;oBACF,WAAW,EAAE;wBACT,IAAI,EAAE,eAAe;wBACrB,IAAI,EAAE,aAAa;wBACnB,SAAS,EAAE,IAAI;wBACf,IAAI,EAAE,IAAI;wBACV,MAAM,EAAE,IAAI;qBACf;oBACD,WAAW,EAAE;wBACT,IAAI,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,YAAY,CAAC;qBAC/C;iBACJ;aACJ;YACD;gBACI,IAAI,EAAE,0BAA0B;gBAChC,SAAS,EAAE,sFAAiB;aAC/B;SACJ;KACJ;CACJ,CAAC;AAOF;IAAA;IACA,CAAC;IADY,kBAAkB;QAL9B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OAEW,kBAAkB,CAC9B;IAAD,yBAAC;CAAA;AAD8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHQ;AACM;AACG;AACgB;AAUzC;AACsC;AAChB;AACF;AACiB;AACP;AACD;AACiB;AACN;AACX;AACU;AACJ;AACf;AAEc;AACE;AACH;AAEsB;AACN;AACA;AACM;AACQ;AACS;AACG;AACT;AACW;AACpB;AACsC;AACrD;AACO;AAsDxE;IAAA;IACA,CAAC;IADY,WAAW;QApDvB,8DAAQ,CAAC;YACN,YAAY,EAAE;gBACV,6FAAmB;gBACnB,uFAAiB;gBACjB,uFAAiB;gBACjB,6FAAmB;gBACnB,qGAAoB;gBACpB,8GAAuB;gBACvB,iHAAwB;gBACxB,wGAAqB;gBACrB,mHAAwB;gBACxB,+FAAkB;gBAClB,qIAA8B;gBAC9B,uFAAiB;aACpB;YACD,OAAO,EAAE;gBACL,4DAAY;gBACZ,wEAAkB;gBAClB,0DAAW;gBACX,kEAAmB;gBACnB,oEAAc;gBACd,oEAAgB;gBAChB,4DAAc;gBACd,8DAAgB;gBAChB,0DAAe;gBACf,8EAAiB;gBACjB,0EAAe;gBACf,2DAAe;gBACf,4EAAsB;gBACtB,2EAAiB,CAAC,OAAO,EAAE;gBAC3B,qEAAoB;gBACpB,2DAAa,CAAC,OAAO,EAAE;gBACvB,8DAAgB,CAAC,OAAO,EAAE;gBAC1B,gEAAkB,CAAC,OAAO,EAAE;gBAC5B,yDAAW,CAAC,OAAO,EAAE;gBACrB,wDAAU,CAAC,OAAO,EAAE;gBACpB,2DAAa,CAAC,OAAO,EAAE;gBACvB,6DAAe,CAAC,OAAO,EAAE;gBACzB,oEAAe,CAAC,QAAQ,CAAC;oBACrB,MAAM,EAAE;wBACJ,OAAO,EAAE,oEAAe;wBACxB,UAAU,EAAE,CAAC,iBAAiB,CAAC;wBAC/B,IAAI,EAAE,CAAC,+DAAU,CAAC;qBACrB;iBACJ,CAAC;gBACF,mEAAU;gBACV,4EAAe;gBACf,mEAAY;aACf;YACD,eAAe,EAAE,CAAC,qIAA8B,EAAE,mHAAwB,CAAC;SAC9E,CAAC;OAEW,WAAW,CACvB;IAAD,kBAAC;CAAA;AADuB;AAGxB,+BAA+B;AACxB,SAAS,iBAAiB,CAAC,IAAgB;IAC9C,OAAO,IAAI,+EAAmB,CAAC,IAAI,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;AACpE,CAAC","file":"modules-pm-tasks-tasks-module.js","sourcesContent":["export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-paperclip modal-icon\\\"></i>&nbsp;{{'attachments.title' | translate}}</h2>\\r\\n    <button (click)=\\\"bsCreateAttachmentModalRef.hide()\\\" aria-label=\\\"Close\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"createAttachmentForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"file_name\\\">{{'attachments.create.fields.file_title' | translate }}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && attachment.file_name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"file_name\\\" id=\\\"file_name\\\" placeholder=\\\"{{'attachments.create.placeholders.placeholder1' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && attachment.file_name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"attachment.file_name.errors.required\\\">{{'attachments.create.error_messages.message1' | translate }}</div>\\r\\n                            <div *ngIf=\\\"attachment.file_name.errors.maxlength\\\">{{'attachments.create.error_messages.message5' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && attachment.file.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"file\\\">{{'attachments.create.fields.attachment' | translate }}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <input formControlName=\\\"file\\\" type=\\\"hidden\\\">\\r\\n                        <div #logodropzone class=\\\"dropzone dz-clickable\\\">\\r\\n                            <div class=\\\"dz-default dz-message\\\">\\r\\n                                <span><strong>{{'attachments.create.error_messages.message2' | translate }}</strong></span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && attachment.file.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"attachment.file.errors.required\\\">{{'attachments.create.error_messages.message3' | translate }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <input formControlName=\\\"file_extension\\\" type=\\\"hidden\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">{{'common.cancel' | translate }}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.create' | translate }}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"activity-timeline\\\">\\r\\n    <div class=\\\"card overflow-hidden shadow-none p-2\\\">\\r\\n        <div [perfectScrollbar]=\\\"scrollConfig\\\" class=\\\"card-body\\\">\\r\\n            <ul class=\\\"timeline pr-2\\\">\\r\\n                <li *ngFor=\\\"let activity of task.activities; index as i\\\" class=\\\"d-flex flex-column\\\">\\r\\n                    <div class=\\\"d-flex flex-column flex-md-row justify-content-start justify-content-md-between\\\">\\r\\n                        <a [routerLink]=\\\"['/users/profile', activity.user.id]\\\" placement=\\\"top\\\" tooltip=\\\"{{activity.user.firstname}} {{activity.user.lastname}}\\\">\\r\\n                            <img *ngIf=\\\"!activity.user.avatar\\\" alt=\\\"Profile Photo\\\" class=\\\"user-profile\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                            <img *ngIf=\\\"activity.user.avatar\\\" alt=\\\"Profile Photo\\\" class=\\\"user-profile\\\" src=\\\"{{apiUrl}}/uploads/profile/{{activity.user.avatar}}\\\"/>\\r\\n                            <span class=\\\"ml-1 activity-user\\\">{{activity.user.firstname}} {{activity.user.lastname}}</span>\\r\\n                        </a>\\r\\n                        <a class=\\\"float-left activity-date\\\" href=\\\"javascript:void(0)\\\">\\r\\n                            <span class=\\\"badge badge-secondary\\\">{{activity.diff_for_humans}}</span>\\r\\n                            {{activity.created_at | dateTimeFormatFilter: loginUser.settings.date_time_format }}\\r\\n                        </a>\\r\\n                    </div>\\r\\n                    <p [innerHTML]=\\\"activity.description\\\"></p>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header justify-content-center p-0\\\">\\r\\n    <div class=\\\"card-buttons pt-2 pb-2 pr-1\\\">\\r\\n        <button (click)=\\\"openAttachmentCreateModal()\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'common.create' | translate}}\\\" type=\\\"button\\\">\\r\\n            <i class=\\\"fa fa-upload\\\"></i><span>{{'common.drag_file' | translate}}</span></button>\\r\\n    </div>\\r\\n</div><!-- Card body -->\\r\\n<div class=\\\"card-body\\\">\\r\\n    <div *ngIf=\\\"attachments?.length != 0\\\" class=\\\"row border-top pt-2\\\">\\r\\n        <div *ngFor=\\\"let file of attachments; index as i\\\" class=\\\"col-sm-4\\\">\\r\\n            <div class=\\\"file-browser\\\">\\r\\n                <div class=\\\"actions-dropdown text-right m-1 pr-2\\\">\\r\\n                    <div class=\\\"btn-group\\\" dropdown>\\r\\n                        <a aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle\\\" dropdownToggle href=\\\"javascript:void(0);\\\" id=\\\"button-basic-1\\\"><i class=\\\"fa fa-ellipsis-v\\\"></i></a>\\r\\n                        <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                            <li role=\\\"menuitem\\\">\\r\\n                                <a class=\\\"dropdown-item btn btn-download btn-raised\\\" download=\\\"{{file.file_name}}\\\" href=\\\"{{apiUrl}}/uploads/task_attachment/{{file.file_hash}}\\\" target=\\\"_blank\\\" tooltip=\\\"{{'common.download' | translate}}\\\"><i class=\\\"fa fa-download\\\"></i></a>\\r\\n                            </li>\\r\\n                            <li *ngIf=\\\"permission\\\" role=\\\"menuitem\\\">\\r\\n                                <a (click)=\\\"attachmentDelete(attachment.id)\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"file-box\\\">\\r\\n                    <div class=\\\"files\\\">\\r\\n                        <div *ngIf=\\\"file.icon\\\" class=\\\"icon docx\\\">\\r\\n                            <i [ngClass]=\\\"file.icon\\\"></i>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"file.isImageFile\\\" class=\\\"image\\\">\\r\\n                            <img alt=\\\"image\\\" class=\\\"img-fluid height-100\\\" src=\\\"{{ apiUrl }}/uploads/task_attachment/{{file.file_hash}}\\\"/>\\r\\n                        </div>\\r\\n                        <div class=\\\"file-name\\\">\\r\\n                            <a download=\\\"{{file.file_name}}\\\" href=\\\"{{apiUrl}}/uploads/task_attachment/{{file.file_hash}}\\\" target=\\\"_blank\\\" tooltip=\\\"{{file.file_name}}\\\">\\r\\n                                <h4>{{ (file.file_name.length > 20) ? (file.file_name | slice:0:20) + '..' : (file.file_name) }}</h4>\\r\\n                            </a>\\r\\n                            <p>{{'file_browser.title7' | translate}}: {{ file.updated_at | dateTimeFormatFilter:loginUser.settings.date_time_format }}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <span class=\\\"corner\\\"></span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"attachments?.length == 0\\\" class=\\\"row border-top pt-2\\\">\\r\\n        <div class=\\\"col-sm-12 text-center\\\">{{'common.datatable.sEmptyTable' | translate}}</div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header p-0\\\">\\r\\n    <div class=\\\"card-buttons pt-2 pb-2 pr-1\\\">\\r\\n        <button (click)=\\\"onSubmit()\\\" class=\\\"btn btn-create mb-0\\\" id=\\\"post_comment\\\" tooltip=\\\"{{'common.create_comment' | translate}}\\\">\\r\\n            <i class=\\\"fa fa-plus\\\"></i><span>{{'comments.buttons.button1' | translate}}</span></button>\\r\\n    </div>\\r\\n</div><!-- Card body -->\\r\\n<div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <form [formGroup]=\\\"taskCommentsForm\\\" class=\\\"bs4-forms\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <textarea [ngClass]=\\\"{ 'is-invalid': isCommentFormSubmitted && commentControl.comment.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"comment\\\" id=\\\"comment\\\" name=\\\"comment\\\" placeholder=\\\"{{'comments.create.placeholders.placeholder1' | translate}}\\\"></textarea>\\r\\n                    <div *ngIf=\\\"isCommentFormSubmitted && commentControl.comment.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"commentControl.comment.errors.required\\\">{{'comments.create.error_messages.message1' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input formControlName=\\\"files\\\" type=\\\"hidden\\\">\\r\\n                    <div #commentdropzone class=\\\"dropzone dz-clickable\\\">\\r\\n                        <div class=\\\"dz-default dz-message\\\">\\r\\n                            <span><strong>{{'comments.create.error_messages.message2' | translate}}</strong></span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- Comments lists -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <accordion [closeOthers]=\\\"oneAtATime\\\">\\r\\n                <ng-container *ngFor=\\\"let comment of comments\\\">\\r\\n                    <accordion-group [panelClass]=\\\"customClass\\\">\\r\\n                        <button accordion-heading class=\\\"btn btn-link btn-block d-lg-flex justify-content-between\\\" type=\\\"button\\\">\\r\\n                            <div class=\\\"\\\">\\r\\n                                <i class=\\\"fa fa-angle-down\\\"></i>\\r\\n                                <img *ngIf=\\\"!comment.user.avatar\\\" alt=\\\"User profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_large.jpg\\\"/>\\r\\n                                <img *ngIf=\\\"comment.user.avatar\\\" alt=\\\"User profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{comment.user.avatar}}\\\"/>\\r\\n                                <span>{{comment.user.firstname}} {{comment.user.lastname}}</span>\\r\\n                            </div>\\r\\n                            <div class=\\\" text-dark pt-1\\\">{{comment.created_at | dateTimeFormatFilter: loginUser.settings.date_time_format }}</div>\\r\\n                        </button>\\r\\n                        <div class=\\\"comment-text\\\">\\r\\n                            <inline-edit-textarea (updateValue)=\\\"saveComments(comment, 'comment', $event);\\\" [elementFor]=\\\"'common.comment' | translate\\\" [fieldValue]=\\\"comment.comment\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'comment'\\\"></inline-edit-textarea>\\r\\n                            <ul *ngIf=\\\"comment.attachments\\\" class=\\\"attachment_box\\\">\\r\\n                                <li *ngFor=\\\"let item of comment.attachments;let i = index; trackBy: i\\\">\\r\\n                                    <a download=\\\"{{item.name}}\\\" href=\\\"{{apiUrl}}/uploads/task_attachment/{{item.file}}\\\" target=\\\"_blank\\\"><span>{{item.name}}</span></a>\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                        <div class=\\\"comment-reply\\\">\\r\\n                            <a (click)=\\\"commentDelete(comment.id)\\\" *ngIf=\\\"permission\\\" class=\\\"text-danger\\\">{{'common.remove' | translate}}</a>\\r\\n                            <!-- <a (click)=\\\"showReplayCommentBox(comment.id)\\\">{{'comments.buttons.button2' | translate}}</a> -->\\r\\n                        </div>\\r\\n                    </accordion-group>\\r\\n                </ng-container>\\r\\n            </accordion>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"card-content\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row mr-2 ml-2\\\">\\r\\n            <div class=\\\"col-md-12 card-separator\\\">\\r\\n                <div class=\\\"d-flex justify-content-between\\\">\\r\\n                    <div class=\\\" task-name d-lg-flex\\\">\\r\\n                        <h4 class=\\\"task-id\\\"><span>#{{task.generated_id}}</span></h4>\\r\\n                        <p class=\\\"task-title ml-lg-2\\\">\\r\\n                            {{task.name}}\\r\\n                        </p>\\r\\n                    </div>\\r\\n                    <div class=\\\" task-action\\\">\\r\\n                        <a *ngIf=\\\"permission\\\" [routerLink]=\\\"['/tasks/edit', task.id]\\\" class=\\\"btn btn-create mb-2 mb-lg-0 float-right\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 pr-0 pl-0 \\\">\\r\\n                <form class=\\\"form-body overflow-hidden mt-3\\\">\\r\\n                    <!-- Detail fields -->\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!-- left side -->\\r\\n                            <div class=\\\"col-lg-4 pr-lg-3 pl-lg-2 pr-2 pl-2\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col\\\">\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col card-separator mb-3\\\">\\r\\n                                                <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                    <label>{{'tasks.create.fields.project_name' | translate}}</label>\\r\\n                                                    <div class=\\\"detail-inline\\\">{{task.project1.project_name}}</div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                    <label>{{'tasks.create.fields.project_version' | translate}}</label>\\r\\n                                                    <div class=\\\"detail-inline\\\">{{task.project_version}}</div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-md-12 mb-3 d-flex justify-content-between\\\">\\r\\n                                                    <div>\\r\\n                                                        <label>{{'tasks.create.fields.status' | translate}}</label>\\r\\n                                                        <div class=\\\"status-dropdown\\\">\\r\\n                                                            <ng-container *ngIf=\\\"permission; else elseBlock\\\">\\r\\n                                                                <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                                    <button aria-controls=\\\"dropdown-basic\\\" class=\\\"btn dropdown-toggle select-btn-lg\\\" dropdownToggle id=\\\"button-basic\\\" type=\\\"button\\\">{{getTranslateStatus(task.status) | translate}}&nbsp;<span class=\\\"caret\\\"></span>\\r\\n                                                                    </button>\\r\\n                                                                    <ul *dropdownMenu aria-labelledby=\\\"button-basic\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic\\\" role=\\\"menu\\\">\\r\\n                                                                        <li *ngFor=\\\"let status of (getTaskStatus(task.status) | translate)\\\" role=\\\"menuitem\\\">\\r\\n                                                                            <a (click)=\\\"changeTaskStatus([task.id], status);task.status = status.id\\\" [ngClass]=\\\"{'active': task.status == status.id}\\\" class=\\\"dropdown-item btn btn-sm {{status.class}}\\\">{{status.label}}</a>\\r\\n                                                                        </li>\\r\\n                                                                    </ul>\\r\\n                                                                </div>\\r\\n                                                            </ng-container>\\r\\n                                                            <ng-template #elseBlock>\\r\\n                                                                <ng-container *ngFor=\\\"let status of (getTaskStatus(task.status) | translate)\\\">\\r\\n                                                                    <div class=\\\"budges-status\\\">\\r\\n                                                                        <span *ngIf=\\\"status.id == task.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                                                    </div>\\r\\n                                                                </ng-container>\\r\\n                                                            </ng-template>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                    <div>\\r\\n                                                        <label>{{'tasks.create.fields.priority' | translate }}</label>\\r\\n                                                        <ng-container *ngIf=\\\"permission; else elseBlock8\\\">\\r\\n                                                            <div class=\\\"status-dropdown\\\">\\r\\n                                                                <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                                    <button aria-controls=\\\"dropdown-basic-3\\\" class=\\\"btn dropdown-toggle\\\" dropdownToggle id=\\\"button-basic-3\\\" type=\\\"button\\\">{{getTranslatePriorities(task.priority) | translate}}&nbsp;<span class=\\\"caret\\\"></span>\\r\\n                                                                    </button>\\r\\n                                                                    <ul *dropdownMenu aria-labelledby=\\\"button-basic-3\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-3\\\" role=\\\"menu\\\">\\r\\n                                                                        <li *ngFor=\\\"let priority of ('tasks.priorities' | translate)\\\" role=\\\"menuitem\\\">\\r\\n                                                                            <a (click)=\\\"changeTaskPriority([task.id], priority);task.priority = priority.id\\\" [ngClass]=\\\"{'active': task.priority == priority.id}\\\" class=\\\"dropdown-item btn btn-sm {{priority.class}}\\\">{{priority.label}}</a>\\r\\n                                                                        </li>\\r\\n                                                                    </ul>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </ng-container>\\r\\n                                                        <ng-template #elseBlock8>\\r\\n                                                            <ng-container *ngFor=\\\"let priority of ('tasks.priorities' | translate)\\\">\\r\\n                                                                <div class=\\\"budges-status\\\">\\r\\n                                                                    <span *ngIf=\\\"priority.id == task.priority\\\" class=\\\"{{priority.class}}\\\">{{priority.label}}</span>\\r\\n                                                                </div>\\r\\n                                                            </ng-container>\\r\\n                                                        </ng-template>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-lg-12 mb-3 d-flex justify-content-between\\\">\\r\\n                                                    <div class=\\\"text-center\\\">\\r\\n                                                        <label>{{'tasks.create.fields.created_by' | translate}}</label>\\r\\n                                                        <div class=\\\"people-lists\\\">\\r\\n                                                            <a [routerLink]=\\\"['/users/profile', task.created_by]\\\" class=\\\"btn btn-profile-info rounded-circle text-dark\\\" placement=\\\"top\\\" tooltip=\\\"{{task.created_firstname}} {{task.created_lastname}}\\\">\\r\\n                                                                <img *ngIf=\\\"task.created_avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{task.created_avatar}}\\\"/>\\r\\n                                                                <img *ngIf=\\\"!task.created_avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                            </a><br>\\r\\n                                                            <span class=\\\"mt-2\\\">{{task.created_firstname}} {{task.created_lastname}}</span>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"text-center\\\">\\r\\n                                                        <label>{{'tasks.create.fields.assigned_To' | translate}}</label>\\r\\n                                                        <div class=\\\"people-lists\\\">\\r\\n                                                            <ng-container *ngIf=\\\"task.assign_user == null; else elseBlock6\\\">\\r\\n                                                                <a class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" href=\\\"javascript:void(0);\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                                                                    <img alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/unassign.jpg\\\"/>\\r\\n                                                                </a>\\r\\n                                                            </ng-container>\\r\\n                                                            <ng-template #elseBlock6>\\r\\n                                                                <a [routerLink]=\\\"['/users/profile', task.assign_user.id]\\\" class=\\\"btn btn-profile-info rounded-circle text-dark\\\" placement=\\\"top\\\" tooltip=\\\"{{task.assign_user.firstname}} {{task.assign_user.lastname}}\\\">\\r\\n                                                                    <img *ngIf=\\\"task.assign_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{task.assign_user.avatar}}\\\"/>\\r\\n                                                                    <img *ngIf=\\\"!task.assign_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                                </a><br>\\r\\n                                                                <span class=\\\"mt-2\\\">{{task.assign_user.firstname}} {{task.assign_user.lastname}}</span>\\r\\n                                                            </ng-template>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                    <label>{{'tasks.create.fields.progress' | translate}}</label>\\r\\n                                                    <div>\\r\\n                                                        <progressbar [animate]=\\\"true\\\" [value]=\\\"task.progress\\\" max=\\\"100\\\">\\r\\n                                                            <strong>{{task.progress}}%</strong></progressbar>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-md-12 card-separator\\\">\\r\\n                                                <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                    <label>{{'tasks.create.fields.plan_startdate' | translate}}</label>\\r\\n                                                    <div class=\\\"detail-inline\\\">{{task.planned_start_date | dateTimeFormatFilter : loginUser.settings.date_format}}</div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                    <label>{{'tasks.create.fields.plan_enddate' | translate}}</label>\\r\\n                                                    <div class=\\\"detail-inline\\\">{{task.planned_end_date | dateTimeFormatFilter : loginUser.settings.date_format}}</div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                    <label>{{'tasks.create.fields.actual_startdate' | translate}}</label>\\r\\n                                                    <div class=\\\"detail-inline\\\">{{task.task_start_date | dateTimeFormatFilter : loginUser.settings.date_time_format}}</div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                    <label>{{'tasks.create.fields.actual_enddate' | translate}}</label>\\r\\n                                                    <div class=\\\"detail-inline\\\">{{task.task_end_date | dateTimeFormatFilter : loginUser.settings.date_time_format}}</div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                    <label>{{'tasks.create.fields.estimate_hours' | translate}}</label>\\r\\n                                                    <div class=\\\"detail-inline\\\">\\r\\n                                                        <ng-container *ngIf=\\\"permission; else elseBlock1\\\">\\r\\n                                                            <inline-edit-hours (updateValue)=\\\"saveTaskDetail('estimated_hours', $event);\\\" [elementFor]=\\\"'tasks.inline_edit.estimate_hours' | translate\\\" [fieldValue]=\\\"task.estimated_hours\\\" [isRequired]=\\\"'false'\\\" [name]=\\\"'estimated_hours'\\\"></inline-edit-hours>\\r\\n                                                        </ng-container>\\r\\n                                                        <ng-template #elseBlock1>{{ task.estimated_hours}}</ng-template>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                    <label>{{'tasks.create.fields.actual_hours' | translate}}</label>\\r\\n                                                    <div class=\\\"detail-inline\\\">{{task.actual_hours}}</div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                    <label>{{'common.created' | translate}}</label>\\r\\n                                                    <div class=\\\"detail-inline\\\">{{task.created_at | dateTimeFormatFilter : loginUser.settings.date_time_format}}</div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                    <label>{{'common.updated' | translate}}</label>\\r\\n                                                    <div class=\\\"detail-inline\\\">{{task.updated_at | dateTimeFormatFilter : loginUser.settings.date_time_format}}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!-- Task Activity -->\\r\\n                                    <div class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 mt-1 pl-0 pr-0\\\"></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- right side -->\\r\\n                            <div class=\\\"col-lg-8\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <!-- Description field -->\\r\\n                                    <div class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 description-detail mb-3 card-separator\\\">\\r\\n                                        <h4 class=\\\"sub-title\\\"><span>{{'tasks.details.title2' | translate}}</span></h4>\\r\\n                                        <div class=\\\"detail-inline\\\">\\r\\n                                            <ng-container *ngIf=\\\"permission; else elseBlock2\\\">\\r\\n                                                <inline-edit-text-editor (updateValue)=\\\"saveTaskDetail('description', $event);\\\" [elementFor]=\\\"'tasks.inline_edit.description' | translate\\\" [fieldValue]=\\\"task.description\\\" [name]=\\\"'description'\\\"></inline-edit-text-editor>\\r\\n                                            </ng-container>\\r\\n                                            <ng-template #elseBlock2>\\r\\n                                                <p [innerHtml]=\\\"task.description\\\"></p>\\r\\n                                            </ng-template>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!-- Custom fields -->\\r\\n                                    <div *ngIf=\\\"task.custom_fields.length > 0\\\" class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 card-separator mb-3\\\">\\r\\n                                        <h4 class=\\\"sub-title\\\"><span>{{'tasks.details.title1' | translate}}</span></h4>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <ng-container *ngFor=\\\"let customField of task.custom_fields\\\">\\r\\n                                                <div *ngIf=\\\"customField.field_type != 'textarea'\\\" class=\\\"col-lg-4 col-md-6 mt-2\\\">\\r\\n                                                    <ng-container *ngIf=\\\"customField.field_type == 'text' || customField.field_type == 'numeric'\\\">\\r\\n                                                        <label>{{customField.field_label}}</label>\\r\\n                                                        <div class=\\\"detail-inline\\\">{{task[customField.field_column]}}</div>\\r\\n                                                    </ng-container>\\r\\n                                                    <ng-container *ngIf=\\\"customField.field_type == 'date'\\\">\\r\\n                                                        <label>{{customField.field_label}}</label>\\r\\n                                                        <div class=\\\"detail-inline\\\">{{task[customField.field_column] | dateTimeFormatFilter: loginUser.settings.date_format}}</div>\\r\\n                                                    </ng-container>\\r\\n                                                    <ng-container *ngIf=\\\"customField.field_type == 'dropdown'\\\">\\r\\n                                                        <label>{{customField.field_label}}</label>\\r\\n                                                        <div class=\\\"detail-inline\\\">\\r\\n                                                            <ng-container *ngFor=\\\"let fieldValue of getParseArray(customField.default_value)\\\">\\r\\n                                                                <ng-container *ngIf=\\\"fieldValue.value == task[customField.field_column]\\\">\\r\\n                                                                    {{fieldValue.label}}\\r\\n                                                                </ng-container>\\r\\n                                                            </ng-container>\\r\\n                                                        </div>\\r\\n                                                    </ng-container>\\r\\n                                                    <ng-container *ngIf=\\\"customField.field_type == 'checkbox'\\\">\\r\\n                                                        <label>{{customField.field_label}}</label>\\r\\n                                                        <div class=\\\"detail-inline\\\">\\r\\n                                                            <div *ngIf=\\\"task[customField.field_column] == 1; else checkboxElseBlock\\\">{{'common.true' | translate}}</div>\\r\\n                                                            <ng-template #checkboxElseBlock>{{'common.false' | translate}}</ng-template>\\r\\n                                                        </div>\\r\\n                                                    </ng-container>\\r\\n                                                </div>\\r\\n                                            </ng-container>\\r\\n                                            <ng-container *ngFor=\\\"let customField of task.custom_fields\\\">\\r\\n                                                <div *ngIf=\\\"customField.field_type == 'textarea'\\\" class=\\\"col-lg-4 col-md-6 mt-2\\\">\\r\\n                                                    <ng-container>\\r\\n                                                        <label>{{customField.field_label}}</label>\\r\\n                                                        <div class=\\\"detail-inline\\\">{{task[customField.field_column]}}</div>\\r\\n                                                    </ng-container>\\r\\n                                                </div>\\r\\n                                            </ng-container>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!-- Todos list -->\\r\\n                                    <div class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 card-separator mb-3\\\">\\r\\n                                        <app-todo-detail [module_id]=\\\"2\\\" [module_related_id]=\\\"task.id\\\"></app-todo-detail>\\r\\n                                    </div>\\r\\n                                    <!-- Sub-task list -->\\r\\n                                    <div *ngIf=\\\"task.parent_task_id == 0\\\" class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 card-separator mb-3\\\">\\r\\n                                        <div class=\\\"card-header p-0\\\">\\r\\n                                            <h4 class=\\\"sub-title mt-3\\\">\\r\\n                                                <span>{{'tasks.details.title3' | translate}}</span></h4>\\r\\n                                            <div class=\\\"card-buttons pt-2 pr-1 pt-2\\\">\\r\\n                                                <a *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'tasks_create']\\\" [routerLink]=\\\"['/tasks/create', task.id]\\\" class=\\\"btn btn-create mb-2 mb-lg-0  float-right\\\" tooltip=\\\"{{'tasks.tooltips.sub_task' | translate}}\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"task.sub_tasks?.length != 0\\\" class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl overflow-x-auto\\\">\\r\\n                                            <table class=\\\"table table-bordered table-hover b4-datatable\\\">\\r\\n                                                <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>{{'tasks.columns.id' | translate}}</th>\\r\\n                                                    <th>{{'tasks.columns.task_name' | translate}}</th>\\r\\n                                                    <th>{{'tasks.columns.end_date' | translate}}</th>\\r\\n                                                    <th>{{'tasks.columns.hours' | translate}}</th>\\r\\n                                                    <th>{{'tasks.columns.priority' | translate}}</th>\\r\\n                                                    <th>{{'tasks.columns.creator' | translate}}</th>\\r\\n                                                    <th>{{'tasks.columns.assigned' | translate}}</th>\\r\\n                                                    <th>{{'tasks.columns.status' | translate}}</th>\\r\\n                                                    <th>{{'tasks.columns.actions' | translate}}</th>\\r\\n                                                </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                <tr *ngFor=\\\"let sub_task of task.sub_tasks; index as i\\\">\\r\\n                                                    <td>\\r\\n                                                        <a [routerLink]=\\\"['/tasks/detail', sub_task.id]\\\" tooltip=\\\"{{'common.view' | translate}}\\\">{{sub_task.generated_id}}</a>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <ng-container *ngIf=\\\"getCheckPermission(sub_task); else elseBlock3\\\">\\r\\n                                                            <inline-edit-input (updateValue)=\\\"saveSubTaskDetail(sub_task, 'name', $event);\\\" [elementFor]=\\\"'tasks.inline_edit.task_name' | translate\\\" [fieldValue]=\\\"sub_task.name\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'name'\\\" [type]=\\\"'text'\\\"></inline-edit-input>\\r\\n                                                        </ng-container>\\r\\n                                                        <ng-template #elseBlock3>{{sub_task.name}}</ng-template>\\r\\n                                                    </td>\\r\\n                                                    <td>{{sub_task.task_end_date | dateTimeFormatFilter: loginUser.settings.date_format}}</td>\\r\\n                                                    <td>{{sub_task.estimated_hours}}</td>\\r\\n                                                    <td class=\\\"budges-status\\\">\\r\\n                                                        <ng-container *ngFor=\\\"let priority of ('tasks.priorities' | translate)\\\">\\r\\n                                                            <div class=\\\"budges-status\\\">\\r\\n                                                                <span *ngIf=\\\"priority.id == sub_task.priority\\\" class=\\\"{{priority.class}}\\\">{{priority.label}}</span>\\r\\n                                                            </div>\\r\\n                                                        </ng-container>\\r\\n                                                    </td>\\r\\n                                                    <td class=\\\"people-lists\\\">\\r\\n                                                        <a [routerLink]=\\\"['/users/profile', sub_task.created_by]\\\" class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" placement=\\\"top\\\" tooltip=\\\"{{sub_task.created_user.firstname}} {{sub_task.created_user.lastname}}\\\">\\r\\n                                                            <img *ngIf=\\\"sub_task.created_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{sub_task.created_user.avatar}}\\\"/>\\r\\n                                                            <img *ngIf=\\\"!sub_task.created_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                        </a>\\r\\n                                                    </td>\\r\\n                                                    <td class=\\\"people-lists\\\">\\r\\n                                                        <ng-container *ngIf=\\\"sub_task.assign_to == null; else elseBlock7\\\">\\r\\n                                                            <a class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" href=\\\"javascript:void(0);\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                                                                <img alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/unassign.jpg\\\"/>\\r\\n                                                            </a>\\r\\n                                                        </ng-container>\\r\\n                                                        <ng-template #elseBlock7>\\r\\n                                                            <a [routerLink]=\\\"['/users/profile', sub_task.assign_to]\\\" class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" placement=\\\"top\\\" tooltip=\\\"{{sub_task.assign_user.firstname}} {{sub_task.assign_user.lastname}}\\\">\\r\\n                                                                <img *ngIf=\\\"sub_task.assign_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{sub_task.assign_user.avatar}}\\\"/>\\r\\n                                                                <img *ngIf=\\\"!sub_task.assign_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                            </a>\\r\\n                                                        </ng-template>\\r\\n                                                    </td>\\r\\n                                                    <td class=\\\"status-dropdown\\\">\\r\\n                                                        <ng-container *ngIf=\\\"getCheckPermission(sub_task); else elseBlock4\\\">\\r\\n                                                            <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                                <button aria-controls=\\\"dropdown-basic-2\\\" class=\\\"btn dropdown-toggle select-btn-lg\\\" dropdownToggle id=\\\"button-basic-2\\\" type=\\\"button\\\">{{getTranslateStatus(sub_task.status) | translate}}&nbsp;<span class=\\\"caret\\\"></span>\\r\\n                                                                </button>\\r\\n                                                                <ul *dropdownMenu aria-labelledby=\\\"button-basic-2\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-2\\\" role=\\\"menu\\\">\\r\\n                                                                    <li *ngFor=\\\"let status of (getTaskStatus(sub_task.status) | translate)\\\" role=\\\"menuitem\\\">\\r\\n                                                                        <a (click)=\\\"changeTaskStatus([sub_task.id], status);sub_task.status = status.id\\\" [ngClass]=\\\"{'active': sub_task.status == status.id}\\\" class=\\\"dropdown-item btn btn-sm {{status.class}}\\\">{{status.label}}</a>\\r\\n                                                                    </li>\\r\\n                                                                </ul>\\r\\n                                                            </div>\\r\\n                                                        </ng-container>\\r\\n                                                        <ng-template #elseBlock4>\\r\\n                                                            <ng-container *ngFor=\\\"let status of (getTaskStatus(sub_task.status) | translate)\\\">\\r\\n                                                                <div class=\\\"budges-status\\\">\\r\\n                                                                    <span *ngIf=\\\"status.id == sub_task.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                                                </div>\\r\\n                                                            </ng-container>\\r\\n                                                        </ng-template>\\r\\n                                                    </td>\\r\\n                                                    <td class=\\\"actions-dropdown\\\">\\r\\n                                                        <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                            <button aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-1\\\" type=\\\"button\\\">\\r\\n                                                                <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                                                            <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                                                <li *ngIf=\\\"getCheckPermission(sub_task)\\\" role=\\\"menuitem\\\">\\r\\n                                                                    <a [routerLink]=\\\"['/tasks/edit', sub_task.id]\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\r\\n                                                                </li>\\r\\n                                                                <li *ngIf=\\\"getCheckPermission(sub_task)\\\" role=\\\"menuitem\\\">\\r\\n                                                                    <a (click)=\\\"deleteSubTask(sub_task.id)\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                                                </li>\\r\\n                                                            </ul>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                                </tbody>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!-- Task Timesheet -->\\r\\n                                    <div class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 card-separator mb-3\\\">\\r\\n                                        <app-timesheet-list [apiUrl]=\\\"apiUrl\\\" [loginUser]=\\\"loginUser\\\" [module_id]=\\\"'2'\\\" [module_related_id]=\\\"task.id\\\" [project_id]=\\\"task.project_id\\\"></app-timesheet-list>\\r\\n                                    </div>\\r\\n                                    <!-- Tab Design -->\\r\\n                                    <tabset class=\\\"nav nav-tabs d-flex justify-content-left details-tabs col-md-12 p-0\\\">\\r\\n                                        <tab class=\\\"card-separator mb-3\\\" customClass=\\\"text-left\\\" id=\\\"1\\\">\\r\\n                                            <ng-template tabHeading>\\r\\n                                                <div class=\\\"d-flex\\\">\\r\\n                                                    <i class=\\\"fa fa-comments-o\\\"></i><span class=\\\"mt-1 ml-1\\\">{{'comments.title' | translate}}</span>\\r\\n                                                </div>\\r\\n                                            </ng-template>\\r\\n                                            <!-- Task Comment -->\\r\\n                                            <div class=\\\"col-lg-12 pr-0 pl-0\\\">\\r\\n                                                <app-task-comments [apiUrl]=\\\"apiUrl\\\" [loginUser]=\\\"loginUser\\\" [permission]=\\\"permission\\\"></app-task-comments>\\r\\n                                            </div>\\r\\n                                        </tab>\\r\\n                                        <tab class=\\\"card-separator mb-3\\\" customClass=\\\"text-left\\\" id=\\\"2\\\">\\r\\n                                            <ng-template tabHeading>\\r\\n                                                <div class=\\\"d-flex\\\">\\r\\n                                                    <i class=\\\"fa fa-paperclip\\\"></i><span class=\\\"mt-1 ml-1\\\">{{'attachments.title' | translate}}</span>\\r\\n                                                </div>\\r\\n                                            </ng-template>\\r\\n                                            <!-- Task Attachment -->\\r\\n                                            <div class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 pr-0 pl-0\\\">\\r\\n                                                <app-task-attachments [apiUrl]=\\\"apiUrl\\\" [loginUser]=\\\"loginUser\\\" [permission]=\\\"permission\\\" [task]=\\\"task\\\"></app-task-attachments>\\r\\n                                            </div>\\r\\n                                        </tab>\\r\\n                                        <tab class=\\\"card-separator mb-3 tab-width\\\" customClass=\\\"text-left\\\" id=\\\"3\\\">\\r\\n                                            <ng-template tabHeading>\\r\\n                                                <div class=\\\"d-flex\\\">\\r\\n                                                    <i class=\\\"fa fa-sticky-note-o\\\"></i><span class=\\\"mt-1 ml-1\\\">{{'notes.title' | translate}}</span>\\r\\n                                                </div>\\r\\n                                            </ng-template>\\r\\n                                            <!-- Notes -->\\r\\n                                            <div class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12\\\">\\r\\n                                                <!-- <h4 class=\\\"sub-title pt-2\\\"><span>{{'notes.title' | translate}}</span></h4> -->\\r\\n                                                <div class=\\\"detail-inline\\\">\\r\\n                                                    <ng-container *ngIf=\\\"permission; else elseBlock5\\\">\\r\\n                                                        <inline-edit-text-editor (updateValue)=\\\"saveTaskDetail('notes', $event);\\\" [elementFor]=\\\"'tasks.inline_edit.notes' | translate\\\" [fieldValue]=\\\"task.notes\\\" [name]=\\\"'notes'\\\"></inline-edit-text-editor>\\r\\n                                                    </ng-container>\\r\\n                                                    <ng-template #elseBlock5></ng-template>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </tab>\\r\\n                                        <tab class=\\\"card-separator mb-3\\\" customClass=\\\"text-left\\\" id=\\\"4\\\">\\r\\n                                            <ng-template tabHeading>\\r\\n                                                <div class=\\\"d-flex\\\">\\r\\n                                                    <i class=\\\"fa fa-list\\\"></i><span class=\\\"mt-1 ml-1\\\">{{'activities.title' | translate}}</span>\\r\\n                                                </div>\\r\\n                                            </ng-template>\\r\\n                                            <app-task-activities [apiUrl]=\\\"apiUrl\\\" [loginUser]=\\\"loginUser\\\" [task]=\\\"task\\\"></app-task-activities>\\r\\n                                        </tab>\\r\\n                                    </tabset>\\r\\n                                    <!-- Tab Design End -->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-tasks modal-icon\\\"></i>&nbsp;{{'tasks.title3' | translate}}</h2>\\r\\n    <button (click)=\\\"onCancel()\\\" class=\\\"close\\\" type=\\\"button\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form class=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <span class=\\\"text-danger\\\">{{'tasks.budges.csv_file' | translate}}</span><br><br>\\r\\n                        <label>{{'tasks.create.fields.csv_file' | translate}} <span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input (change)=\\\"fileUpload($event.target.files)\\\" accept=\\\".csv\\\" class=\\\"mb-3 btn btn-secondary\\\" id=\\\"file\\\" type=\\\"file\\\">\\r\\n                        <div *ngIf=\\\"!csvFileSelected && isFormSubmitted\\\" class=\\\"text-danger\\\">{{'tasks.create.error_messages.message15' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button (click)=\\\"onSubmit()\\\" class=\\\"btn btn-submit mb-0\\\">{{'common.import' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 border-bottom\\\">\\r\\n    <h4 class=\\\"card-title mt-3\\\">{{'notes.title' | translate}}</h4>\\r\\n</div><!-- Card body -->\\r\\n<div class=\\\"card-body pt-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n            <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"editNoteForm\\\" class=\\\"bs4-forms\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <app-ngx-editor [placeholder]=\\\"''\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"notes\\\" height=\\\"100px\\\" id=\\\"notes\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"permission\\\" class=\\\"form-group text-right\\\">\\r\\n                    <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.update' | translate}}</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<section *ngIf=\\\"isPageLoaded\\\" id=\\\"basic-form-layouts\\\">\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"copyTaskForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <h4 class=\\\"card-title\\\">\\r\\n                            {{'tasks.title6' | translate}}\\r\\n                        </h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\"><i class=\\\"ft-type\\\"></i> {{'tasks.headings.head1' | translate}}\\r\\n                                </h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-4\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"generated_id\\\">{{'tasks.create.fields.task_ID' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.generated_id.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"generated_id\\\" id=\\\"generated_id\\\" readonly type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.generated_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.generated_id.errors.required\\\">{{'tasks.create.error_messages.message3' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"name\\\">{{'tasks.create.fields.task_name' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder1' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.name.errors.required\\\">{{'tasks.create.error_messages.message1' | translate }}</div>\\r\\n                                                <div *ngIf=\\\"taskControl.name.errors.maxlength\\\">{{'tasks.create.error_messages.message2' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-calendar\\\"></i> {{'tasks.headings.head2' | translate}}</h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.planned_start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"planned_start_date\\\">{{'tasks.create.fields.plan_startdate' | translate }}</label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp1=\\\"bsDatepicker\\\" (onHidden)=\\\"planstartDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"planned_start_date\\\" id=\\\"planned_start_date\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder2' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && taskControl.planned_start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"taskControl.planned_start_date.errors\\\">{{'tasks.create.error_messages.message4' | translate }}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.planned_end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"planned_end_date\\\">{{'tasks.create.fields.plan_enddate' | translate }}</label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp2=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [minDate]=\\\"copyTaskForm.get('planned_start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"planned_end_date\\\" id=\\\"planned_end_date\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder3' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && taskControl.planned_end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"taskControl.planned_end_date.errors\\\">{{'tasks.create.error_messages.message5' | translate }}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.task_start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"task_start_date\\\">{{'tasks.create.fields.actual_startdate' | translate }}</label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp3=\\\"bsDatepicker\\\" (onHidden)=\\\"taskstartDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"task_start_date\\\" id=\\\"task_start_date\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder4' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && taskControl.task_start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"taskControl.task_start_date.errors\\\">{{'tasks.create.error_messages.message6' | translate }}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.task_end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"task_end_date\\\">{{'tasks.create.fields.actual_enddate' | translate }}</label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp4=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [minDate]=\\\"copyTaskForm.get('task_start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"task_end_date\\\" id=\\\"task_end_date\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder5' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && taskControl.task_end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"taskControl.task_end_date.errors\\\">{{'tasks.create.error_messages.message7' | translate }}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-trending-up\\\"></i> {{'tasks.headings.head3' | translate}}</h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label>{{'tasks.create.fields.progress' | translate }}</label>\\r\\n                                            <ng5-slider [options]=\\\"progressOptions\\\" formControlName=\\\"progress\\\"></ng5-slider>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">&nbsp;</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"fa ft-zap\\\"></i> {{'tasks.headings.head4' | translate}}</h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-7\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.project_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"project_id\\\">{{'tasks.create.fields.project_name' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <ng-select (change)=\\\"projectChange($event)\\\" (clear)=\\\"clearVersionValues('project_version')\\\" [items]=\\\"projects\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"project_name\\\" bindValue=\\\"id\\\" formControlName=\\\"project_id\\\" labelForId=\\\"project_id\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder6' | translate }}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                                    {{item.project_name}}\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.project_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.project_id.errors.required\\\">{{'tasks.create.error_messages.message8' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-5\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"project_version\\\">{{'tasks.create.fields.project_version' | translate }}</label>\\r\\n                                            <ng-select [items]=\\\"projectVersions\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" formControlName=\\\"project_version\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder7' | translate }}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                                    {{item}}\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-file-text\\\"></i> {{'tasks.headings.head5' | translate}}</h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"assign_to\\\">{{'tasks.create.fields.assigned_To' | translate }}</label>\\r\\n                                            <ng-select [items]=\\\"users\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"assign_to\\\" labelForId=\\\"assign_to\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder8' | translate }}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>{{item.firstname}} {{item.lastname}}</ng-template>\\r\\n                                            </ng-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.status.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"status\\\">{{'tasks.create.fields.status' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <ng-select [items]=\\\"(getTaskStatus(task.status) | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"status\\\" labelForId=\\\"status\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder9' | translate }}\\\"></ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.status.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.status.errors.required\\\">{{'tasks.create.error_messages.message11' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.priority.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"status\\\">{{'tasks.create.fields.priority' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <ng-select [items]=\\\"('tasks.priorities' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"priority\\\" labelForId=\\\"priority\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder10' | translate }}\\\"></ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.priority.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.priority.errors.required\\\">{{'tasks.create.error_messages.message12' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"estimated_hours\\\">{{'tasks.create.fields.estimate_hours' | translate }}</label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': (isFormSubmitted && taskControl.estimated_hours.errors || isHoursValid) }\\\" class=\\\"form-control\\\" formControlName=\\\"estimated_hours\\\" placeholder=\\\"00:00\\\" type='text'>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.estimated_hours.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.estimated_hours.errors.pattern\\\">{{'tasks.create.error_messages.message13' | translate }}</div>\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"isHoursValid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"isHoursValid\\\">{{'tasks.create.error_messages.message14' | translate }} {{this.task.project1.estimated_hours}}.</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"customFields.length > 0\\\" class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\"><i class=\\\"ft-star\\\"></i> {{'tasks.headings.head6' | translate}}\\r\\n                                </h4>\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <app-show-custom-field-element [controls]=\\\"copyTaskForm.get('custom_field')\\\" [customFields]=\\\"customFields\\\" [formArray]=\\\"'custom_field'\\\" [formName]=\\\"copyTaskForm\\\" [isFormSubmitted]=\\\"isFormSubmitted\\\"></app-show-custom-field-element>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-message-square\\\"></i> {{'tasks.headings.head7' | translate}}</h4>\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"description\\\">{{'tasks.create.fields.description' | translate }}</label>\\r\\n                                            <app-ngx-editor [placeholder]=\\\"''\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"description\\\" height=\\\"100px\\\" id=\\\"description\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12 text-right\\\">\\r\\n                                        <a [routerLink]=\\\"['/tasks']\\\" class=\\\"btn btn-cancel mb-0\\\">{{'common.cancel' | translate}}</a>\\r\\n                                        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.copy' | translate}}</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</section>\\r\\n\"","export default \"<section *ngIf=\\\"isPageLoaded\\\" id=\\\"basic-form-layouts\\\">\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"createTaskForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <h4 class=\\\"main-title\\\" id=\\\"basic-layout-form\\\">\\r\\n                            <ng-container *ngIf=\\\"parent_task_id == 0;\\\">{{'tasks.title1' | translate}}</ng-container>\\r\\n                            <ng-container *ngIf=\\\"parent_task_id != 0;\\\">{{'tasks.title2' | translate}}</ng-container>\\r\\n                        </h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\"><i class=\\\"ft-type\\\"></i> {{'tasks.headings.head1' | translate}}\\r\\n                                </h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-4\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label *ngIf=\\\"parent_task_id == 0\\\" for=\\\"generated_id\\\">{{'tasks.create.fields.task_ID' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <label *ngIf=\\\"parent_task_id != 0\\\" for=\\\"generated_id\\\">{{'tasks.create.fields.subtask_Id' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.generated_id.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"generated_id\\\" id=\\\"generated_id\\\" placeholder=\\\"T000\\\" readonly type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.generated_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.generated_id.errors.required\\\">{{'tasks.create.error_messages.message3' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"name\\\">{{'tasks.create.fields.task_name' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder1' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.name.errors.required\\\">{{'tasks.create.error_messages.message1' | translate }}</div>\\r\\n                                                <div *ngIf=\\\"taskControl.name.errors.maxlength\\\">{{'tasks.create.error_messages.message2' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-calendar\\\"></i> {{'tasks.headings.head2' | translate}}</h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.planned_start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"planned_start_date\\\">{{'tasks.create.fields.plan_startdate' | translate }}</label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp1=\\\"bsDatepicker\\\" (bsValueChange)=\\\"planstartDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"planned_start_date\\\" id=\\\"planned_start_date\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder2' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && taskControl.planned_start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"taskControl.planned_start_date.errors\\\">{{'tasks.create.error_messages.message4' | translate }}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.planned_end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"end-date\\\">{{'tasks.create.fields.plan_enddate' | translate }}</label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp2=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [minDate]=\\\"createTaskForm.get('planned_start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"planned_end_date\\\" id=\\\"planned_end_date\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder3' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && taskControl.planned_end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"taskControl.planned_end_date.errors\\\">{{'tasks.create.error_messages.message5' | translate }}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.task_start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"task_start_date\\\">{{'tasks.create.fields.actual_startdate' | translate }}</label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp3=\\\"bsDatepicker\\\" (bsValueChange)=\\\"taskstartDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"task_start_date\\\" id=\\\"task_start_date\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder4' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && taskControl.task_start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"taskControl.task_start_date.errors\\\">{{'tasks.create.error_messages.message6' | translate }}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.task_end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"end-date\\\">{{'tasks.create.fields.actual_enddate' | translate }}</label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp4=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [minDate]=\\\"createTaskForm.get('task_start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"task_end_date\\\" id=\\\"task_end_date\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder5' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && taskControl.task_end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"taskControl.task_end_date.errors\\\">{{'tasks.create.error_messages.message7' | translate }}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-trending-up\\\"></i> {{'tasks.headings.head3' | translate}}</h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label>{{'tasks.create.fields.progress' | translate }}</label>\\r\\n                                            <ng5-slider [options]=\\\"progressOptions\\\" formControlName=\\\"progress\\\"></ng5-slider>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">&nbsp;</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"fa ft-zap\\\"></i> {{'tasks.headings.head4' | translate}}</h4>\\r\\n                                <div *ngIf=\\\"parent_task_id == 0;\\\" class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-7\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.project_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"project_id\\\">{{'tasks.create.fields.project_name' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <ng-select (change)=\\\"projectChange($event)\\\" [items]=\\\"projects\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"project_name\\\" bindValue=\\\"id\\\" formControlName=\\\"project_id\\\" labelForId=\\\"project_id\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder6' | translate }}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>{{item.project_name}}</ng-template>\\r\\n                                            </ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.project_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.project_id.errors.required\\\">{{'tasks.create.error_messages.message8' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-5\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"project_version\\\">{{'tasks.create.fields.project_version' | translate }}</label>\\r\\n                                            <ng-select [items]=\\\"projectVersions\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" formControlName=\\\"project_version\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder7' | translate }}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>{{item}}</ng-template>\\r\\n                                            </ng-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"parent_task_id != 0;\\\" class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label>{{'tasks.create.fields.project_name' | translate }}:</label><span class=\\\"badge badge-secondary\\\">{{project.project_name}}</span><br>\\r\\n                                            <label>{{'tasks.create.fields.project_version' | translate }}:</label><span class=\\\"badge badge-secondary\\\">{{parentTask.project_version}}</span><br>\\r\\n                                            <label>{{'tasks.create.fields.parent_taskID' | translate }}:</label><span class=\\\"badge badge-secondary\\\">{{parentTask.generated_id}}</span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-file-text\\\"></i> {{'tasks.headings.head5' | translate}}</h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"assign_to\\\">{{'tasks.create.fields.assigned_To' | translate }}</label>\\r\\n                                            <ng-select [items]=\\\"users\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"assign_to\\\" labelForId=\\\"assign_to\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder8' | translate }}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>{{item.firstname}} {{item.lastname}}</ng-template>\\r\\n                                            </ng-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.status.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"status\\\">{{'tasks.create.fields.status' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <ng-select [items]=\\\"(getTaskStatus() | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"status\\\" labelForId=\\\"status\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder9' | translate }}\\\"></ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.status.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.status.errors.required\\\">{{'tasks.create.error_messages.message11' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.priority.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"priority\\\">{{'tasks.create.fields.priority' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <ng-select [items]=\\\"('tasks.priorities' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"priority\\\" labelForId=\\\"priority\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder10' | translate }}\\\"></ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.priority.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.priority.errors.required\\\">{{'tasks.create.error_messages.message12' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"estimated_hours\\\">{{'tasks.create.fields.estimate_hours' | translate }}</label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': (isFormSubmitted && taskControl.estimated_hours.errors || isHoursValid) }\\\" class=\\\"form-control\\\" formControlName=\\\"estimated_hours\\\" placeholder=\\\"00:00\\\" type='text'>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.estimated_hours.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.estimated_hours.errors.pattern\\\">{{'tasks.create.error_messages.message13' | translate }}</div>\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"isHoursValid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"isHoursValid\\\">{{'tasks.create.error_messages.message14' | translate }} {{this.project.estimated_hours}}.</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"customFields.length > 0\\\" class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\"><i class=\\\"ft-star\\\"></i> {{'tasks.headings.head6' | translate}}\\r\\n                                </h4>\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <app-show-custom-field-element [controls]=\\\"createTaskForm.get('custom_field')\\\" [customFields]=\\\"customFields\\\" [formArray]=\\\"'custom_field'\\\" [formName]=\\\"createTaskForm\\\" [isFormSubmitted]=\\\"isFormSubmitted\\\"></app-show-custom-field-element>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-message-square\\\"></i> {{'tasks.headings.head7' | translate}}</h4>\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"description\\\">{{'tasks.create.fields.description' | translate }}</label>\\r\\n                                            <app-ngx-editor [placeholder]=\\\"''\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"description\\\" height=\\\"100px\\\" id=\\\"description\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12 text-right\\\">\\r\\n                                        <a [routerLink]=\\\"['/tasks']\\\" class=\\\"btn btn-cancel mb-0\\\">{{'common.cancel' | translate}}</a>\\r\\n                                        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.create' | translate}}</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"row detail-page\\\">\\r\\n    <div *ngIf=\\\"isPageLoaded\\\" class=\\\"card bg-transparent\\\">\\r\\n        <app-task-details [apiUrl]=\\\"apiUrl\\\" [loginUser]=\\\"loginUser\\\" [permission]=\\\"permission\\\" [task]=\\\"task\\\"></app-task-details>\\r\\n    </div>\\r\\n</section>\\r\\n\"","export default \"<section *ngIf=\\\"isPageLoaded\\\" id=\\\"basic-form-layouts\\\">\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"editTaskForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <h4 class=\\\"card-title\\\">\\r\\n                            <ng-container *ngIf=\\\"task.parent_task_id == 0;\\\">{{'tasks.title4' | translate}}</ng-container>\\r\\n                            <ng-container *ngIf=\\\"task.parent_task_id != 0;\\\">{{'tasks.title5' | translate}}</ng-container>\\r\\n                        </h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\"><i class=\\\"ft-type\\\"></i> {{'tasks.headings.head1' | translate}}\\r\\n                                </h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-4\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label *ngIf=\\\"task.parent_task_id == 0\\\" for=\\\"generated_id\\\">{{'tasks.create.fields.task_ID' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <label *ngIf=\\\"task.parent_task_id !=0\\\" for=\\\"generated_id\\\">{{'tasks.create.fields.subtask_Id' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.generated_id.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"generated_id\\\" id=\\\"generated_id\\\" readonly type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.generated_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.generated_id.errors.required\\\">{{'tasks.create.error_messages.message3' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"name\\\">{{'tasks.create.fields.task_name' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder1' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.name.errors.required\\\">{{'tasks.create.error_messages.message1' | translate }}</div>\\r\\n                                                <div *ngIf=\\\"taskControl.name.errors.maxlength\\\">{{'tasks.create.error_messages.message2' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-calendar\\\"></i> {{'tasks.headings.head2' | translate}}</h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.planned_start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"planned_start_date\\\">{{'tasks.create.fields.plan_startdate' | translate }}</label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp1=\\\"bsDatepicker\\\" (onHidden)=\\\"planstartDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"planned_start_date\\\" id=\\\"planned_start_date\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder2' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && taskControl.planned_start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"taskControl.planned_start_date.errors\\\">{{'tasks.create.error_messages.message4' | translate }}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.planned_end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"planned_end_date\\\">{{'tasks.create.fields.plan_enddate' | translate }}</label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp2=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [minDate]=\\\"editTaskForm.get('planned_start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"planned_end_date\\\" id=\\\"planned_end_date\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder3' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && taskControl.planned_end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"taskControl.planned_end_date.errors\\\">{{'tasks.create.error_messages.message5' | translate }}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.task_start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"task_start_date\\\">{{'tasks.create.fields.actual_startdate' | translate }}</label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp3=\\\"bsDatepicker\\\" (onHidden)=\\\"taskstartDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"task_start_date\\\" id=\\\"task_start_date\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder4' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && taskControl.task_start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"taskControl.task_start_date.errors\\\">{{'tasks.create.error_messages.message6' | translate }}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.task_end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"task_end_date\\\">{{'tasks.create.fields.actual_enddate' | translate }}</label>\\r\\n                                            <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                <input #dp4=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [minDate]=\\\"editTaskForm.get('task_start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"task_end_date\\\" id=\\\"task_end_date\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder5' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                                                <div *ngIf=\\\"isFormSubmitted && taskControl.task_end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"taskControl.task_end_date.errors\\\">{{'tasks.create.error_messages.message7' | translate }}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-trending-up\\\"></i> {{'tasks.headings.head3' | translate}}</h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label>{{'tasks.create.fields.progress' | translate }}</label>\\r\\n                                            <ng5-slider [options]=\\\"progressOptions\\\" formControlName=\\\"progress\\\"></ng5-slider>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">&nbsp;</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"fa ft-zap\\\"></i> {{'tasks.headings.head4' | translate}}</h4>\\r\\n                                <div *ngIf=\\\"task.parent_task_id == 0\\\" class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-7\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.project_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"project_id\\\">{{'tasks.create.fields.project_name' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <ng-select (change)=\\\"projectChange($event)\\\" (clear)=\\\"clearVersionValues('project_version')\\\" [items]=\\\"projects\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"project_name\\\" bindValue=\\\"id\\\" formControlName=\\\"project_id\\\" labelForId=\\\"project_id\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder6' | translate }}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                                    {{item.project_name}}\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.project_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.project_id.errors.required\\\">{{'tasks.create.error_messages.message8' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-5\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"project_version\\\">{{'tasks.create.fields.project_version' | translate }}</label>\\r\\n                                            <ng-select [items]=\\\"projectVersions\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" formControlName=\\\"project_version\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder7' | translate }}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                                    {{item}}\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"task.parent_task_id != 0;\\\" class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label>{{'tasks.create.fields.project_name' | translate }}:</label>\\r\\n                                            <span class=\\\"badge badge-secondary\\\">{{task.project1.project_name}}</span><br>\\r\\n                                            <label>{{'tasks.create.fields.project_version' | translate }}:</label>\\r\\n                                            <span class=\\\"badge badge-secondary\\\">{{parentTask.project_version}}</span><br>\\r\\n                                            <label>{{'tasks.create.fields.parent_taskID' | translate }}:</label><span class=\\\"badge badge-secondary\\\">{{parentTask.generated_id}}</span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-file-text\\\"></i> {{'tasks.headings.head5' | translate}}</h4>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"assign_to\\\">{{'tasks.create.fields.assigned_To' | translate }}</label>\\r\\n                                            <ng-select [items]=\\\"users\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"assign_to\\\" labelForId=\\\"assign_to\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder8' | translate }}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>{{item.firstname}} {{item.lastname}}</ng-template>\\r\\n                                            </ng-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.status.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"status\\\">{{'tasks.create.fields.status' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <ng-select [items]=\\\"(getTaskStatus(task.status) | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"status\\\" labelForId=\\\"status\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder9' | translate }}\\\"></ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.status.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.status.errors.required\\\">{{'tasks.create.error_messages.message11' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && taskControl.priority.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"status\\\">{{'tasks.create.fields.priority' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                                            <ng-select [items]=\\\"('tasks.priorities' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"priority\\\" labelForId=\\\"priority\\\" placeholder=\\\"{{'tasks.create.placeholders.placeholder10' | translate }}\\\"></ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.priority.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.priority.errors.required\\\">{{'tasks.create.error_messages.message12' | translate }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"estimated_hours\\\">{{'tasks.create.fields.estimate_hours' | translate }}</label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': (isFormSubmitted && taskControl.estimated_hours.errors || isHoursValid) }\\\" class=\\\"form-control\\\" formControlName=\\\"estimated_hours\\\" placeholder=\\\"00:00\\\" type='text'>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && taskControl.estimated_hours.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"taskControl.estimated_hours.errors.pattern\\\">{{'tasks.create.error_messages.message13' | translate }}</div>\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"isHoursValid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"isHoursValid\\\">{{'tasks.create.error_messages.message14' | translate }} {{this.task.project1.estimated_hours}}.</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"customFields.length > 0\\\" class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\"><i class=\\\"ft-star\\\"></i> {{'tasks.headings.head6' | translate}}\\r\\n                                </h4>\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <app-show-custom-field-element [controls]=\\\"editTaskForm.get('custom_field')\\\" [customFields]=\\\"customFields\\\" [formArray]=\\\"'custom_field'\\\" [formName]=\\\"editTaskForm\\\" [isFormSubmitted]=\\\"isFormSubmitted\\\"></app-show-custom-field-element>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\">\\r\\n                                    <i class=\\\"ft-message-square\\\"></i> {{'tasks.headings.head7' | translate}}</h4>\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"description\\\">{{'tasks.create.fields.description' | translate }}</label>\\r\\n                                            <app-ngx-editor [placeholder]=\\\"''\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"description\\\" height=\\\"100px\\\" id=\\\"description\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12 text-right\\\">\\r\\n                                        <a [routerLink]=\\\"['/tasks']\\\" class=\\\"btn btn-cancel mb-0\\\">{{'common.cancel' | translate}}</a>\\r\\n                                        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.update' | translate}}</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"hide_empty_message\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card pl-2 pr-2 pb-2\\\">\\r\\n                <!-- Card header -->\\r\\n                <div class=\\\"card-header pl-0 pr-0 border-bottom\\\">\\r\\n                    <h4 class=\\\"main-title mt-2\\\"><span>{{'tasks.title' | translate}}</span></h4>\\r\\n                    <div class=\\\"card-buttons\\\">\\r\\n                        <a [routerLink]=\\\"['/taskboard']\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'common.switch_to_kanban' | translate}}\\\"><i class=\\\"fa fa-trello\\\"></i><span>{{'common.kanban' | translate}}</span></a>\\r\\n                        <a *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'tasks_create']\\\" class=\\\"btn btn-create mb-0\\\" download=\\\"import_tasks.csv\\\" href=\\\"{{ apiUrl }}/csv/import_tasks.csv\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.tooltip.task_csv_sample' | translate}}\\\"><i class=\\\"fa fa-files-o\\\"></i></a>\\r\\n                        <button (click)=\\\"openTaskImportModal()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'tasks_create']\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'common.import' | translate}}\\\">\\r\\n                            <i class=\\\"fa fa-upload\\\"></i></button>\\r\\n                        <a *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'tasks_create']\\\" [routerLink]=\\\"['/tasks/create']\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'common.create' | translate}}\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- Card content -->\\r\\n                <div class=\\\"card-content pt-3\\\">\\r\\n                    <!-- Card body -->\\r\\n                    <div class=\\\"card-body \\\">\\r\\n                        <!-- Filter buttons -->\\r\\n                        <div *ngIf=\\\"isPageLoaded\\\" class=\\\"d-flex flex-column flex-lg-row d-lg-inline-flex mb-3\\\">\\r\\n                            <div class=\\\"pr-0\\\">\\r\\n                                <div class=\\\"btn-group mr-2 mb-2\\\">\\r\\n                                    <label (click)=\\\"filterByStatus(statusfilterId, taskFilterKey)\\\" [(ngModel)]=\\\"taskFilterKey\\\" btnRadio=\\\"all\\\" class=\\\"btn btn-secondary btn-toggle m-0\\\" role=\\\"button\\\" tabindex=\\\"0\\\">{{'common.status.all' | translate}}</label>\\r\\n                                    <label (click)=\\\"filterByStatus(statusfilterId, taskFilterKey)\\\" [(ngModel)]=\\\"taskFilterKey\\\" btnRadio=\\\"selected\\\" class=\\\"btn btn-secondary btn-toggle m-0\\\" role=\\\"button\\\" tabindex=\\\"0\\\">{{'common.status.my' | translate}}</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\" pl-lg-0 btn-filters \\\">\\r\\n                                <button (click)=\\\"filterByStatus(1, taskFilterKey)\\\" [ngClass]=\\\"{'active': statusfilterId ==1}\\\" class=\\\"btn btn-raised open\\\" type=\\\"button\\\">\\r\\n                                    <p>{{'common.status.open' | translate}}</p><span class=\\\"badge badge-light\\\">\\r\\n                                        <ng-container *ngIf=\\\"countStatus.open; else elseCondition2;\\\">{{countStatus.open}}</ng-container>\\r\\n                                        <ng-template #elseCondition2>0</ng-template>\\r\\n                                    </span>\\r\\n                                </button>\\r\\n                                <button (click)=\\\"filterByStatus(2, taskFilterKey)\\\" [ngClass]=\\\"{'active': statusfilterId==2}\\\" class=\\\"btn btn-raised in_progress\\\" type=\\\"button\\\">\\r\\n                                    <p>{{'common.status.in_progress' | translate}}</p><span class=\\\"badge badge-light\\\">\\r\\n                                        <ng-container *ngIf=\\\"countStatus.in_progress; else elseCondition3;\\\">{{countStatus.in_progress}}</ng-container>\\r\\n                                        <ng-template #elseCondition3>0</ng-template>\\r\\n                                    </span>\\r\\n                                </button>\\r\\n                                <button (click)=\\\"filterByStatus(6, taskFilterKey)\\\" [ngClass]=\\\"{'active': statusfilterId==3}\\\" class=\\\"btn btn-raised completed\\\" type=\\\"button\\\">\\r\\n                                    <p>{{'common.status.completed' | translate}}</p><span class=\\\"badge badge-light\\\">\\r\\n                                        <ng-container *ngIf=\\\"countStatus.completed; else elseCondition4;\\\">{{countStatus.completed}}</ng-container>\\r\\n                                        <ng-template #elseCondition4>0</ng-template>\\r\\n                                    </span>\\r\\n                                </button>\\r\\n                                <button [ngClass]=\\\"{'active': statusfilterId ==0}\\\" [routerLink]=\\\"['/tasks', 0, taskFilterKey]\\\" class=\\\"btn btn-raised btn-secondary\\\" type=\\\"button\\\">\\r\\n                                    <p>{{'common.status.total' | translate}}</p>\\r\\n                                    <span class=\\\"badge badge-light\\\">\\r\\n                                        <ng-container *ngIf=\\\"countStatus.all; else elseCondition1;\\\">{{countStatus.all}}</ng-container>\\r\\n                                        <ng-template #elseCondition1>0</ng-template>\\r\\n                                    </span>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!-- Tasks lists -->\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl overflow-x-auto\\\">\\r\\n                                    <table [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"table table-bordered table-hover b4-datatable\\\" datatable id=\\\"tasks_table\\\" width=\\\"100%\\\">\\r\\n                                        <thead>\\r\\n                                        <tr>\\r\\n                                            <th>{{'tasks.columns.id' | translate}}</th>\\r\\n                                            <th>{{'tasks.columns.task_name' | translate}}</th>\\r\\n                                            <th>{{'tasks.columns.start_date' | translate}}</th>\\r\\n                                            <th>{{'tasks.columns.end_date' | translate}}</th>\\r\\n                                            <th>{{'tasks.columns.hours' | translate}}</th>\\r\\n                                            <th>{{'tasks.columns.assigned' | translate}}</th>\\r\\n                                            <th>{{'tasks.columns.priority' | translate}}</th>\\r\\n                                            <th>{{'tasks.columns.status' | translate}}</th>\\r\\n                                            <th>{{'tasks.columns.actions' | translate}}</th>\\r\\n                                        </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody *ngIf=\\\"tasks?.length != 0\\\">\\r\\n                                        <tr *ngFor=\\\"let task of tasks; index as i\\\">\\r\\n                                            <td>\\r\\n                                                <a [routerLink]=\\\"['/tasks/detail', task.id]\\\" tooltip=\\\"{{'common.view' | translate}}\\\">{{task.generated_id}}</a>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <ng-container *ngIf=\\\"getCheckPermission(task); else elseBlock1\\\">\\r\\n                                                    <inline-edit-input (updateValue)=\\\"saveTaskDetail(i, 'name', $event);\\\" [elementFor]=\\\"'tasks.inline_edit.task_name' | translate\\\" [fieldValue]=\\\"task.name\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'name'\\\" [type]=\\\"'text'\\\"></inline-edit-input>\\r\\n                                                </ng-container>\\r\\n                                                <ng-template #elseBlock1>{{task.name}}</ng-template>\\r\\n                                            </td>\\r\\n                                            <td>{{task.task_start_date | dateTimeFormatFilter: loginUser.settings.date_format}}</td>\\r\\n                                            <td>{{task.task_end_date | dateTimeFormatFilter: loginUser.settings.date_format}}</td>\\r\\n                                            <td>{{task.actual_hours}}</td>\\r\\n                                            <td class=\\\"people-lists\\\">\\r\\n                                                <ng-container *ngIf=\\\"task.assign_to == null; else elseBlock3\\\">\\r\\n                                                    <a class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" href=\\\"javascript:void(0);\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                                                        <img alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/unassign.jpg\\\"/>\\r\\n                                                    </a>\\r\\n                                                </ng-container>\\r\\n                                                <ng-template #elseBlock3>\\r\\n                                                    <a [routerLink]=\\\"['/users/profile', task.assign_to]\\\" class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" placement=\\\"top\\\" tooltip=\\\"{{task.assign_firstname}} {{task.assign_lastname}}\\\">\\r\\n                                                        <img *ngIf=\\\"task.assign_avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{task.assign_avatar}}\\\"/>\\r\\n                                                        <img *ngIf=\\\"!task.assign_avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                    </a>\\r\\n                                                </ng-template>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"budges-status\\\">\\r\\n                                                <ng-container *ngFor=\\\"let priority of ('tasks.priorities' | translate)\\\">\\r\\n                                                    <div class=\\\"budges-status\\\">\\r\\n                                                        <span *ngIf=\\\"priority.id == task.priority\\\" class=\\\"{{priority.class}}\\\">{{priority.label}}</span>\\r\\n                                                    </div>\\r\\n                                                </ng-container>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"status-dropdown\\\">\\r\\n                                                <div class=\\\"overdue-td\\\">\\r\\n                                                    <ng-container *ngIf=\\\"getCheckPermission(task); else elseBlock2\\\">\\r\\n                                                        <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                            <button aria-controls=\\\"dropdown-basic\\\" class=\\\"btn dropdown-toggle select-btn-lg\\\" dropdownToggle id=\\\"button-basic\\\" type=\\\"button\\\">{{getTranslateStatus(task.status) | translate}}&nbsp;<span class=\\\"caret\\\"></span>\\r\\n                                                            </button>\\r\\n                                                            <ul *dropdownMenu aria-labelledby=\\\"button-basic\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic\\\" role=\\\"menu\\\">\\r\\n                                                                <li *ngFor=\\\"let status of (getTaskStatus(task.status) | translate)\\\" role=\\\"menuitem\\\">\\r\\n                                                                    <a (click)=\\\"changeTaskStatus([task.id], status);task.status = status.id\\\" [ngClass]=\\\"{'active': task.status == status.id}\\\" class=\\\"dropdown-item btn btn-sm {{status.class}}\\\">{{status.label}}</a>\\r\\n                                                                </li>\\r\\n                                                            </ul>\\r\\n                                                        </div>\\r\\n                                                    </ng-container>\\r\\n                                                    <ng-template #elseBlock2>\\r\\n                                                        <ng-container *ngFor=\\\"let status of (getTaskStatus(task.status) | translate)\\\">\\r\\n                                                            <div class=\\\"budges-status\\\">\\r\\n                                                                <span *ngIf=\\\"status.id == task.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                                            </div>\\r\\n                                                        </ng-container>\\r\\n                                                    </ng-template>\\r\\n                                                    <ng-container *ngIf=\\\"task.is_overdue\\\">\\r\\n                                                        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-clock-o overdue-icon\\\" tooltip=\\\"{{'common.overdue' | translate}} : {{task.is_overdue}} {{'common.days' | translate}}\\\"></i>\\r\\n                                                    </ng-container>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"actions-dropdown\\\">\\r\\n                                                <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                    <button aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-1\\\" type=\\\"button\\\">\\r\\n                                                        <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                                                    <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                                        <li *ngIf=\\\"getCheckPermission(task)\\\" role=\\\"menuitem\\\">\\r\\n                                                            <a [routerLink]=\\\"['/tasks/edit', task.id]\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                        <li *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'tasks_create']\\\" role=\\\"menuitem\\\">\\r\\n                                                            <a [routerLink]=\\\"['/tasks/copy', task.id]\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\" tooltip=\\\"{{'common.copy' | translate}}\\\"><i class=\\\"fa fa-clone\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                        <li *ngIf=\\\"getCheckPermission(task)\\\" role=\\\"menuitem\\\">\\r\\n                                                            <a (click)=\\\"deleteTask(task.id)\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        </tbody>\\r\\n                                        <tfoot *ngIf=\\\"tasks?.length == 0\\\" class=\\\"tfoot_dt\\\">\\r\\n                                        <tr>\\r\\n                                            <td class=\\\"no-data-available text-center\\\" colspan=\\\"9\\\">{{'common.datatable.sEmptyTable' | translate}}</td>\\r\\n                                        </tr>\\r\\n                                        </tfoot>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {ImportTask} from '../../shared/models/import-task.model';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ImportTaskService {\r\n\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    create(importTask: ImportTask) {\r\n        return this.http.post(`${this.apiUrl}/api/tasks/import`, importTask);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {TaskAttachment} from '../../shared/models/task-attachment.model';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class TaskAttachmentService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAllAttachmentById(taskId: number) {\r\n        return this.http.get<TaskAttachment[]>(`${this.apiUrl}/api/task-attachment/${taskId}`);\r\n    }\r\n\r\n    create(taskAttachment: TaskAttachment) {\r\n        return this.http.post(`${this.apiUrl}/api/task-attachment`, taskAttachment);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${this.apiUrl}/api/task-attachment/${id}`);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {TaskComments} from '../../shared/models/task-comments.model';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class TaskCommentsService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    create(taskComment: TaskComments) {\r\n        return this.http.post(`${this.apiUrl}/api/task-comment`, taskComment);\r\n    }\r\n\r\n    update(taskComment: any) {\r\n        return this.http.put(`${this.apiUrl}/api/task-comment/${taskComment.id}`, taskComment);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${this.apiUrl}/api/task-comment/${id}`);\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vdGFza3MvY29tcG9uZW50cy9jcmVhdGUtYXR0YWNobWVudC1tb2RhbC9jcmVhdGUtYXR0YWNobWVudC1tb2RhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, ElementRef, EventEmitter, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {Task} from 'src/app/shared/models/task.model';\r\n\r\nimport {TaskAttachmentService} from './../../../../../core/services/task-attachment.service';\r\n\r\nimport * as Dropzone from 'dropzone';\r\n\r\n@Component({\r\n    selector: 'app-create-attachment-modal',\r\n    templateUrl: './create-attachment-modal.component.html',\r\n    styleUrls: ['./create-attachment-modal.component.scss']\r\n})\r\n\r\nexport class CreateAttachmentModalComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    createAttachmentForm: FormGroup;\r\n    taskId: Task;\r\n    fileName: any;\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n    isfileUploded = false;\r\n    isfileLoaded = true;\r\n\r\n    @ViewChild('logodropzone', {static: false}) logodropzone: ElementRef;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsCreateAttachmentModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private taskAttachmentService: TaskAttachmentService,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n    ) {\r\n    }\r\n\r\n    get attachment() {\r\n        return this.createAttachmentForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.loadForms();\r\n\r\n    }\r\n\r\n    loadForms() {\r\n        this.createAttachmentForm = this.formBuilder.group({\r\n            task_id: [this.taskId],\r\n            file_name: ['', [Validators.required, Validators.maxLength(255)]],\r\n            file: ['', Validators.required],\r\n            file_extension: [this.fileName],\r\n            file_description: ['']\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.loadDropzone();\r\n        });\r\n    }\r\n\r\n    loadDropzone() {\r\n        let that = this;\r\n        new Dropzone(this.logodropzone.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            maxFiles: 1,\r\n            clickable: true,\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>' + that.translate.instant('common.remove_file') + '</button>');\r\n                    const _this = this;\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file);\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        that.fileName = file.name;\r\n                        if (that.fileName) {\r\n                            that.fileName = that.fileName.split('.').pop();\r\n                        }\r\n                        reader.onload = (e) => {\r\n                            that.createAttachmentForm.patchValue({file: reader.result});\r\n                            that.createAttachmentForm.patchValue({file_extension: that.fileName});\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n\r\n                this.on('removedfile', function (file) {\r\n                    that.createAttachmentForm.patchValue({file: null});\r\n                });\r\n\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    removeDropzoneImage() {\r\n        this.isfileUploded = true;\r\n        this.isfileLoaded = false;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.createAttachmentForm.invalid) {\r\n            return;\r\n        }\r\n        this.taskAttachmentService.create(this.createAttachmentForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('attachments.messages.create'), this.translate.instant('attachments.title'));\r\n                    this.event.emit({data});\r\n                    this.onCancel();\r\n                });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsCreateAttachmentModalRef.hide();\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vdGFza3MvY29tcG9uZW50cy90YXNrLWFjdGl2aXRpZXMvdGFzay1hY3Rpdml0aWVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {PerfectScrollbarConfigInterface} from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n    selector: 'app-task-activities',\r\n    templateUrl: './task-activities.component.html',\r\n    styleUrls: ['./task-activities.component.scss']\r\n})\r\n\r\nexport class TaskActivitiesComponent implements OnInit {\r\n    public scrollConfig: PerfectScrollbarConfigInterface = {};\r\n    @Input() task;\r\n    @Input() loginUser: any;\r\n    @Input() apiUrl;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vdGFza3MvY29tcG9uZW50cy90YXNrLWF0dGFjaG1lbnRzL3Rhc2stYXR0YWNobWVudHMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {TaskAttachmentService} from '../../../../../core/services/task-attachment.service';\r\nimport {CreateAttachmentModalComponent} from '../../components/create-attachment-modal/create-attachment-modal.component';\r\n\r\n@Component({\r\n    selector: 'app-task-attachments',\r\n    templateUrl: './task-attachments.component.html',\r\n    styleUrls: ['./task-attachments.component.scss']\r\n})\r\n\r\nexport class TaskAttachmentsComponent implements OnInit {\r\n    public modalRef: BsModalRef;\r\n    @Input() task;\r\n    @Input() loginUser: any;\r\n    @Input() permission: boolean;\r\n    @Input() apiUrl;\r\n    attachments: any;\r\n    modalConfigs = {\r\n        animated: true,\r\n        keyboard: true,\r\n        backdrop: true,\r\n        ignoreBackdropClick: false,\r\n        class: 'inmodal modal-dialog-centered modal-md animated fadeIn',\r\n        initialState: {\r\n            taskId: this.route.snapshot.params.id,\r\n        }\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private toastr: ToastrService,\r\n        private route: ActivatedRoute,\r\n        private http: HttpClient,\r\n        private modalService: BsModalService,\r\n        private taskAttachmentService: TaskAttachmentService\r\n    ) {\r\n        this.getAllAttachment(this.route.snapshot.params.id);\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    getAllAttachment(taskId) {\r\n        this.taskAttachmentService.getAllAttachmentById(taskId).subscribe(data => {\r\n            this.attachments = data;\r\n            this.getFiles();\r\n        });\r\n    }\r\n\r\n    getFiles() {\r\n        for (let iRow in this.attachments) {\r\n            switch (this.attachments[iRow].file_extension) {\r\n                case 'txt':\r\n                    this.attachments[iRow].icon = 'fa fa-file-text';\r\n                    break;\r\n                case 'mp3':\r\n                case 'wav':\r\n                case 'raw':\r\n                case 'tta':\r\n                    this.attachments[iRow].icon = 'fa fa-music';\r\n                    break;\r\n                case 'webm':\r\n                case 'flv':\r\n                case 'ogg':\r\n                case 'mov':\r\n                case 'mp4':\r\n                case 'm4p':\r\n                case 'mpeg':\r\n                case 'f4v':\r\n                case '3gp':\r\n                    this.attachments[iRow].icon = 'fa fa-film';\r\n                    break;\r\n                case 'pdf':\r\n                    this.attachments[iRow].icon = 'fa fa-file-pdf-o';\r\n                    break;\r\n                case 'jpeg':\r\n                case 'jpg':\r\n                case 'png':\r\n                case 'gif':\r\n                case 'bmp':\r\n                case 'svg':\r\n                    this.attachments[iRow].isImageFile = true;\r\n                    break;\r\n                default:\r\n                    this.attachments[iRow].isImageFile = false;\r\n                    this.attachments[iRow].icon = 'fa fa-file';\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    openAttachmentCreateModal() {\r\n        this.modalRef = this.modalService.show(CreateAttachmentModalComponent, this.modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getAllAttachment(this.task.id);\r\n        });\r\n    }\r\n\r\n    attachmentDelete(attachmentId) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.taskAttachmentService.delete(attachmentId).subscribe(data => {\r\n                    this.toastr.success(this.translate.instant('attachments.messages.delete'), this.translate.instant('tasks.title'));\r\n                    this.getAllAttachment(this.task.id);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vdGFza3MvY29tcG9uZW50cy90YXNrLWNvbW1lbnRzL3Rhc2stY29tbWVudHMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {TaskService} from '../../../../../core/services/task.service';\r\nimport {TaskCommentsService} from '../../../../../core/services/task-comments.service';\r\n\r\nimport * as Dropzone from 'dropzone';\r\n\r\n@Component({\r\n    selector: 'app-task-comments',\r\n    templateUrl: './task-comments.component.html',\r\n    styleUrls: ['./task-comments.component.scss']\r\n})\r\n\r\nexport class TaskCommentsComponent implements OnInit {\r\n    @Input() permission: boolean;\r\n    @Input() apiUrl;\r\n    @Input() loginUser: any;\r\n    comments: any;\r\n    taskData: any;\r\n    replayComment: any;\r\n    dropzoneObj: any;\r\n    fileDetails: any;\r\n    isPageLoaded = false;\r\n    taskCommentsForm: FormGroup;\r\n    taskCommentsReplyForm: FormGroup;\r\n    isCommentFormSubmitted = false;\r\n    isReplayFormSubmitted = false;\r\n    parentChild = [];\r\n    selectedFiles = [];\r\n    taskId = this.route.snapshot.params.id;\r\n    customClass = 'comment-collapse';\r\n    oneAtATime: boolean = true;\r\n\r\n    @ViewChild('commentdropzone', {static: false}) commentdropzone: ElementRef;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private taskCommentsService: TaskCommentsService,\r\n        private taskService: TaskService\r\n    ) {\r\n    }\r\n\r\n    get commentControl() {\r\n        return this.taskCommentsForm.controls;\r\n    }\r\n\r\n    get replyCommentControl() {\r\n        return this.taskCommentsReplyForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadForms();\r\n        this.getComment(this.taskId);\r\n        this.loadReplyForm();\r\n\r\n        setTimeout(() => {\r\n            this.loadDropzone();\r\n        });\r\n    }\r\n\r\n    loadForms() {\r\n        let that = this;\r\n        this.taskCommentsForm = this.formBuilder.group({\r\n            task_id: [this.taskId],\r\n            comment: ['', Validators.required],\r\n            files: [null]\r\n        });\r\n    }\r\n\r\n    loadReplyForm() {\r\n        this.taskCommentsReplyForm = this.formBuilder.group({\r\n            task_id: [this.taskId],\r\n            replay_comment: [''],\r\n            parent_id: [null],\r\n        });\r\n    }\r\n\r\n    loadDropzone() {\r\n        let that = this;\r\n        this.dropzoneObj = new Dropzone(this.commentdropzone.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            maxFiles: 5,\r\n            clickable: true,\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>' + that.translate.instant('common.remove_file') + '</button>');\r\n                    const _this = this;\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file);\r\n\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        that.fileDetails = file;\r\n                        reader.onload = (e) => {\r\n                            let thisFile = {\r\n                                uuid: that.fileDetails.upload.uuid,\r\n                                name: file.name,\r\n                                extension: file.name.split('.').pop(),\r\n                                size: file.size,\r\n                                file: reader.result\r\n                            };\r\n                            that.selectedFiles.push(thisFile);\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n\r\n                this.on('removedfile', function (file) {\r\n                    that.fileDetails = file;\r\n                    that.selectedFiles.forEach((value, index) => {\r\n                        if (value.uuid == that.fileDetails.upload.uuid) {\r\n                            that.selectedFiles.splice(index, 1);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isCommentFormSubmitted = true;\r\n\r\n        if (this.taskCommentsForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.taskCommentsForm.patchValue({files: this.selectedFiles});\r\n\r\n        this.taskCommentsService.create(this.taskCommentsForm.value).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('comments.messages.create'), this.translate.instant('comments.title'));\r\n            this.dropzoneObj.removeAllFiles();\r\n            this.getComment(this.taskId);\r\n            this.commentFormReset();\r\n            this.loadForms();\r\n        });\r\n    }\r\n\r\n    replyFormReset() {\r\n        this.taskCommentsReplyForm.patchValue({replay_comment: ''});\r\n        this.taskCommentsReplyForm.patchValue({files: ''});\r\n        this.taskCommentsReplyForm.patchValue({attachments: ''});\r\n    }\r\n\r\n    commentFormReset() {\r\n        this.isCommentFormSubmitted = false;\r\n        this.commentControl.comment.reset();\r\n        this.taskCommentsForm.patchValue({attachments: null});\r\n    }\r\n\r\n    showReplayCommentBox(id) {\r\n        $('#comment_replay_' + id).removeClass('d-none');\r\n    }\r\n\r\n    getComment(taskID) {\r\n        this.taskService.getById(taskID).subscribe(\r\n            data => {\r\n                this.taskData = data;\r\n                this.taskData.comments = this.getNestedChildren(this.taskData.comments, 0);\r\n                this.comments = this.taskData.comments;\r\n            });\r\n    }\r\n\r\n    getNestedChildren(comment, parent) {\r\n        let parentChild = [];\r\n        for (let i in comment) {\r\n            if (comment[i].attachments && ($.type(comment[i].attachments) === 'string')) {\r\n                let jsonParse = JSON.parse(comment[i].attachments);\r\n                comment[i].attachments = jsonParse;\r\n            }\r\n            if (comment[i].parent_id == parent) {\r\n                let child = this.getNestedChildren(comment, comment[i].id);\r\n                if (child.length) {\r\n                    comment[i].child = child;\r\n                }\r\n                parentChild.push(comment[i]);\r\n            }\r\n        }\r\n        return parentChild;\r\n    }\r\n\r\n    postReplayComment(comment) {\r\n        if (this.taskCommentsReplyForm.value.replay_comment) {\r\n            this.isReplayFormSubmitted = true;\r\n            comment.parent_id = comment.id;\r\n            comment.files = '';\r\n            comment.comment = this.taskCommentsReplyForm.value.replay_comment;\r\n            this.taskCommentsReplyForm.patchValue({attachments: ''});\r\n            let replyCommentValues = {\r\n                comment: this.taskCommentsReplyForm.value.replay_comment,\r\n                parent_id: comment.parent_id,\r\n                task_id: comment.task_id,\r\n                user: comment.user,\r\n                user_id: comment.user_id,\r\n                files: '',\r\n                attachments: '',\r\n                replay_comment: this.taskCommentsReplyForm.value.replay_comment\r\n            };\r\n\r\n            if (this.taskCommentsReplyForm.invalid) {\r\n                return;\r\n            }\r\n            this.taskCommentsService.create(replyCommentValues)\r\n                .subscribe(\r\n                    resp => {\r\n                        this.toastr.success(this.translate.instant('comments.messages.create'), this.translate.instant('comments.title'));\r\n                        this.getComment(this.taskId);\r\n                        this.replyFormReset();\r\n                        this.loadForms();\r\n                    });\r\n        } else {\r\n            this.toastr.error(this.translate.instant('comments.create.error_messages.message4'), this.translate.instant('comments.title'));\r\n            return false;\r\n        }\r\n    }\r\n\r\n    commentDelete(commentId) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.taskCommentsService.delete(commentId)\r\n                    .subscribe(\r\n                        data => {\r\n                            this.toastr.success(this.translate.instant('comments.messages.delete'), this.translate.instant('tasks.title'));\r\n                            this.getComment(this.taskId);\r\n                        });\r\n            }\r\n        });\r\n    }\r\n\r\n    saveComments(comment, index, value) {\r\n        comment[index] = value;\r\n        this.taskCommentsService.update(comment).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('comments.messages.update'), this.translate.instant('tasks.title'));\r\n            this.getComment(this.taskId);\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vdGFza3MvY29tcG9uZW50cy90YXNrLWRldGFpbHMvdGFzay1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {NgxRolesService} from 'ngx-permissions';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {TaskService} from '../../../../../core/services/task.service';\r\n\r\nimport {task_priority_key_value, task_status_key_value} from './../../../../../core/helpers/pm-helper';\r\n\r\n@Component({\r\n    selector: 'app-task-details',\r\n    templateUrl: './task-details.component.html',\r\n    styleUrls: ['./task-details.component.scss']\r\n})\r\n\r\nexport class TaskDetailsComponent implements OnInit {\r\n    @Input() task: any;\r\n    @Input() loginUser: any;\r\n    @Input() permission: boolean;\r\n    @Input() apiUrl;\r\n    taskstatusKeyValue = task_status_key_value;\r\n    taskPriorityKeyValue = task_priority_key_value;\r\n    knOptions = {\r\n        readOnly: true,\r\n        size: 150,\r\n        unit: '%',\r\n        textColor: '#000000',\r\n        fontSize: '32',\r\n        valueformat: 'percent',\r\n        value: 0,\r\n        max: 100,\r\n        trackWidth: 19,\r\n        barWidth: 20,\r\n        trackColor: '#D8D8D8',\r\n        barColor: '#FF6F17'\r\n    };\r\n\r\n    constructor(\r\n        public ngxRolesService: NgxRolesService,\r\n        public translate: TranslateService,\r\n        private taskService: TaskService,\r\n        private toastr: ToastrService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    getTaskById(taskId) {\r\n        this.taskService.getById(taskId)\r\n            .subscribe(\r\n                data => {\r\n                    this.task = data;\r\n                });\r\n    }\r\n\r\n    getTaskStatus(status) {\r\n        return 'tasks.status' + status;\r\n    }\r\n\r\n    getTranslateStatus(statusKey) {\r\n        return this.taskstatusKeyValue[statusKey];\r\n    }\r\n\r\n    getTranslatePriorities(priorityKey) {\r\n        return this.taskPriorityKeyValue[priorityKey];\r\n    }\r\n\r\n    changeTaskPriority(taskId: any, priority: any) {\r\n        this.taskService.changePriority({id: taskId, priority: priority.id}).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('tasks.messages.priority'), this.translate.instant('tasks.title'));\r\n            this.getTaskById(this.task.id);\r\n        });\r\n    }\r\n\r\n    changeTaskStatus(taskID: any, status: any) {\r\n        let changeTask = {\r\n            id: taskID,\r\n            status: status.id\r\n        };\r\n        this.taskService.changeStatus(changeTask).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('tasks.messages.status'), this.translate.instant('tasks.title'));\r\n            this.getTaskById(this.task.id);\r\n        });\r\n    }\r\n\r\n    getParseArray(string) {\r\n        return JSON.parse(string);\r\n    }\r\n\r\n    saveTaskDetail(name, value) {\r\n        this.task[name] = value;\r\n        this.taskService.update(this.task)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('tasks.messages.update'), this.translate.instant('tasks.title'));\r\n                    this.getTaskById(this.task.id);\r\n                });\r\n    }\r\n\r\n    saveSubTaskDetail(subTask, name, value) {\r\n        subTask[name] = value;\r\n        this.taskService.update(subTask).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('tasks.messages.update'), this.translate.instant('tasks.title'));\r\n            this.getTaskById(this.task.id);\r\n        });\r\n    }\r\n\r\n    getCheckPermission(sub_task) {\r\n        let role = this.ngxRolesService.getRole('admin');\r\n        if ((role && role.name == 'admin') || this.loginUser.is_super_admin) {\r\n            return true;\r\n        } else if (sub_task.assign_to == this.loginUser.id || sub_task.created_by == this.loginUser.id) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    deleteSubTask(id) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.taskService.delete(id).subscribe(data => {\r\n                    this.toastr.success(this.translate.instant('tasks.messages.delete'), this.translate.instant('tasks.title'));\r\n                    this.getTaskById(this.task.id);\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vdGFza3MvY29tcG9uZW50cy90YXNrLWltcG9ydC1tb2RhbC90YXNrLWltcG9ydC1tb2RhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {ImportTaskService} from '../../../../../core/services/import-task.service';\r\n\r\n@Component({\r\n    selector: 'app-task-import-modal',\r\n    templateUrl: './task-import-modal.component.html',\r\n    styleUrls: ['./task-import-modal.component.scss']\r\n})\r\n\r\nexport class TaskImportModalComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    columnName: any;\r\n    csvData: any;\r\n    csvFileColumnName: any;\r\n    fileAttached: boolean = false;\r\n    isPageLoaded = false;\r\n    isFormSubmitted = false;\r\n    csvFileSelected = false;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsImportTaskModalRef: BsModalRef,\r\n        private toastr: ToastrService,\r\n        private importTaskService: ImportTaskService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n    }\r\n\r\n    fileUpload(files) {\r\n        if (files && files.length > 0) {\r\n            let file: File = files.item(0);\r\n            let reader = new FileReader();\r\n            reader.readAsText(file);\r\n            reader.onload = event => {\r\n                let csvdata: string = reader.result as string;\r\n                this.csvData = csvdata;\r\n\r\n                this.fileAttached = true;\r\n                if (this.csvData != undefined) {\r\n                    this.csvFileSelected = true;\r\n                } else {\r\n                    this.csvFileSelected = false;\r\n                }\r\n\r\n                let filename = files[0].name;\r\n                let ext = filename.substr(filename.lastIndexOf('.') + 1);\r\n                if (ext != 'csv') {\r\n                    this.toastr.error(this.translate.instant('teams.create.error_messages.message15'), this.translate.instant('teams.title'));\r\n                    this.csvFileSelected = false;\r\n                    return;\r\n                }\r\n\r\n                let newLinebrk = csvdata.split('\\n');\r\n                let columnNames = newLinebrk[0].split(',');\r\n                this.csvFileColumnName = columnNames;\r\n            };\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        this.importTaskService.create({csv_file: this.csvData})\r\n            .subscribe(\r\n                data => {\r\n                    this.event.emit({data: true});\r\n                    this.onCancel();\r\n                });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsImportTaskModalRef.hide();\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vdGFza3MvY29tcG9uZW50cy90YXNrLW5vdGVzL3Rhc2stbm90ZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {TaskService} from '../../../../../core/services/task.service';\r\n\r\n@Component({\r\n    selector: 'app-task-notes',\r\n    templateUrl: './task-notes.component.html',\r\n    styleUrls: ['./task-notes.component.scss']\r\n})\r\n\r\nexport class TaskNotesComponent implements OnInit {\r\n    @Input() task;\r\n    @Input() permission: boolean;\r\n    editNoteForm: FormGroup;\r\n    notes: any;\r\n    isFormSubmitted = false;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private taskService: TaskService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.editNoteForm = this.formBuilder.group({\r\n            id: [this.task.id],\r\n            notes: [this.task.notes]\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.editNoteForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.taskService.updateNotes(this.editNoteForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('notes.messages.update'), this.translate.instant('tasks.title'));\r\n                });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vdGFza3MvcGFnZXMvdGFzay1jb3B5L3Rhc2stY29weS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Options} from 'ng5-slider';\r\n\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\nimport {ProjectService} from '../../../../../core/services/project.service';\r\nimport {TaskService} from '../../../../../core/services/task.service';\r\nimport {CustomFieldsService} from '../../../../../core/services/custom-fields.service';\r\n\r\n@Component({\r\n    selector: 'app-task-copy',\r\n    templateUrl: './task-copy.component.html',\r\n    styleUrls: ['./task-copy.component.scss']\r\n})\r\n\r\nexport class TaskCopyComponent implements OnInit {\r\n    copyTaskForm: FormGroup;\r\n    loginUser: any;\r\n    projects: any;\r\n    task: any;\r\n    projectUser: any;\r\n    customFields: any = {length: 0};\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n    isHoursValid = false;\r\n    users = [];\r\n    userIds = [];\r\n    projectVersions = [];\r\n    progressOptions: Options = {\r\n        floor: 0,\r\n        ceil: 100\r\n    };\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public datepipe: DatePipe,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private projectService: ProjectService,\r\n        private taskService: TaskService,\r\n        private customFieldsService: CustomFieldsService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.route.paramMap.subscribe(params => {\r\n            this.getTaskById(params.get('id'));\r\n        });\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    get taskControl() {\r\n        return this.copyTaskForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getProjects();\r\n    }\r\n\r\n    getTaskById(taskId) {\r\n        this.taskService.getById(taskId).subscribe(data => {\r\n            this.task = data;\r\n            this.setDateFormat();\r\n            this.loadForms();\r\n        });\r\n\r\n    }\r\n\r\n    setDateFormat() {\r\n        if (this.task.planned_start_date) {\r\n            this.task.planned_start_date = new Date(this.task.planned_start_date);\r\n        }\r\n        if (this.task.planned_end_date) {\r\n            this.task.planned_end_date = new Date(this.task.planned_end_date);\r\n        }\r\n        if (this.task.task_start_date) {\r\n            this.task.task_start_date = new Date(this.task.task_start_date);\r\n        }\r\n        if (this.task.task_end_date) {\r\n            this.task.task_end_date = new Date(this.task.task_end_date);\r\n        }\r\n    }\r\n\r\n    loadForms() {\r\n        // Project users\r\n        this.users = this.task.project1.users;\r\n        for (let i = 0; i < this.users.length; i++) {\r\n            this.userIds.push(this.users[i].id);\r\n        }\r\n\r\n        // Project Version\r\n        this.projectVersions = this.task.project1.project_version.split(',');\r\n\r\n        this.copyTaskForm = this.formBuilder.group({\r\n            name: [this.task.name, Validators.required],\r\n            generated_id: ['T0...', [Validators.required]],\r\n            project_id: [this.task.project_id, Validators.required],\r\n            project_version: [this.task.project_version],\r\n            planned_start_date: [this.task.planned_start_date],\r\n            planned_end_date: [this.task.planned_end_date],\r\n            task_start_date: [this.task.task_start_date],\r\n            task_end_date: [this.task.task_end_date],\r\n            assign_to: [this.task.assign_to],\r\n            status: [this.task.status, Validators.required],\r\n            priority: [this.task.priority, Validators.required],\r\n            estimated_hours: [this.task.estimated_hours, Validators.pattern(/^[0-9]+\\:[0-5][0-9]$/)],\r\n            progress: [parseInt(this.task.progress)],\r\n            description: [this.task.description],\r\n            users: [this.userIds],\r\n            custom_field: this.formBuilder.array([]),\r\n            custom_fields: [null],\r\n        });\r\n\r\n        this.getGeneratedId();\r\n        this.getCustomFieldByForm();\r\n\r\n        this.isPageLoaded = true;\r\n    }\r\n\r\n    getGeneratedId() {\r\n        this.taskService.getGeneratedId().subscribe(data => {\r\n            this.copyTaskForm.patchValue({generated_id: data});\r\n        });\r\n    }\r\n\r\n    getCustomFieldByForm() {\r\n        this.customFieldsService.getCustomFieldByForm(2).subscribe(data => {\r\n            this.customFields = data;\r\n            if (this.customFields.length > 0) {\r\n                this.addDynamicField(this.customFields);\r\n            }\r\n        });\r\n    }\r\n\r\n    addDynamicField(fieldList) {\r\n        fieldList.forEach(element => {\r\n            let control = <FormArray>this.copyTaskForm.controls.custom_field;\r\n            let validators = null;\r\n            if (element.is_required == 1) {\r\n                validators = [Validators.required];\r\n            }\r\n            if (element.field_type == 'date' && this.task[element.field_column] != null) {\r\n                control.push(\r\n                    this.formBuilder.group({\r\n                        [element.field_column]: [new Date(this.task[element.field_column]), validators]\r\n                    })\r\n                );\r\n            } else {\r\n                control.push(\r\n                    this.formBuilder.group({\r\n                        [element.field_column]: [this.task[element.field_column], validators]\r\n                    })\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    getTaskStatus(status) {\r\n        return 'tasks.status' + status;\r\n    }\r\n\r\n    getProjects() {\r\n        this.projectService.getProject().subscribe(data => {\r\n            this.projects = data;\r\n        });\r\n    }\r\n\r\n    projectChange(event: any) {\r\n        this.userIds = [];\r\n        this.copyTaskForm.patchValue({project_version: null});\r\n        this.copyTaskForm.patchValue({assign_to: null});\r\n        this.copyTaskForm.patchValue({planned_start_date: null});\r\n        this.copyTaskForm.patchValue({planned_end_date: null});\r\n        this.copyTaskForm.patchValue({task_start_date: null});\r\n        this.copyTaskForm.patchValue({task_end_date: null});\r\n\r\n        if (this.copyTaskForm.value.project_id == undefined || this.copyTaskForm.value.project_id == null || this.copyTaskForm.value.project_id == '') {\r\n            this.projectVersions = null;\r\n            this.users = null;\r\n            return;\r\n        }\r\n\r\n        this.projectVersions = event.project_version.split(',');\r\n\r\n        // Project users\r\n        this.users = event.users;\r\n        for (let i = 0; i < this.users.length; i++) {\r\n            this.userIds.push(this.users[i].id);\r\n        }\r\n        this.copyTaskForm.patchValue({users: this.userIds});\r\n    }\r\n\r\n    clearVersionValues() {\r\n        this.copyTaskForm.patchValue({project_version: null});\r\n    }\r\n\r\n    planstartDateChange(event: any) {\r\n        this.copyTaskForm.patchValue({planned_end_date: this.copyTaskForm.value.planned_start_date});\r\n    }\r\n\r\n    taskstartDateChange(event: any) {\r\n        this.copyTaskForm.patchValue({task_end_date: this.copyTaskForm.value.task_start_date});\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        this.isHoursValid = false;\r\n        if (this.copyTaskForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        // Hours validation\r\n        if (this.copyTaskForm.value.estimated_hours && this.task.project1.estimated_hours) {\r\n            let projectHours = this.task.project1.estimated_hours.replace(/:/g, '.'),\r\n                taskHours = this.copyTaskForm.value.estimated_hours.replace(/:/g, '.');\r\n            if (parseInt(projectHours) < parseInt(taskHours)) {\r\n                this.isHoursValid = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.customFields.length > 0) {\r\n            this.setCustomFields();\r\n        }\r\n\r\n        this.copyTaskForm.value.planned_start_date = this.datepipe.transform(this.copyTaskForm.value.planned_start_date, 'yyyy-MM-dd');\r\n        this.copyTaskForm.value.planned_end_date = this.datepipe.transform(this.copyTaskForm.value.planned_end_date, 'yyyy-MM-dd');\r\n        this.copyTaskForm.value.task_start_date = this.datepipe.transform(this.copyTaskForm.value.task_start_date, 'yyyy-MM-dd');\r\n        this.copyTaskForm.value.task_end_date = this.datepipe.transform(this.copyTaskForm.value.task_end_date, 'yyyy-MM-dd');\r\n\r\n        this.taskService.create(this.copyTaskForm.value).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('tasks.messages.copy'), this.translate.instant('tasks.title'));\r\n            this.router.navigate(['tasks']);\r\n        });\r\n    }\r\n\r\n    setCustomFields() {\r\n        let arr = this.copyTaskForm.value.custom_field;\r\n        let obj = {};\r\n        let iRow = 0;\r\n        let that = this;\r\n        arr.forEach(function (item) {\r\n            let key = Object.keys(item)[0];\r\n            obj[key] = item[key];\r\n            if (that.customFields[iRow++].field_type == 'date') {\r\n                obj[key] = that.datepipe.transform(item[key], 'yyyy-MM-dd');\r\n            }\r\n        });\r\n        this.copyTaskForm.patchValue({custom_fields: obj});\r\n    }\r\n\r\n}\r\n","export default \"::ng-deep .odd {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wbS90YXNrcy9wYWdlcy90YXNrLWNyZWF0ZS9DOlxcVXNlcnNcXHRodWFuXFxPbmVEcml2ZVxcRGVza3RvcFxcZ2xhdmFsLXRodWFuZGluaC9zcmNcXGFwcFxcbW9kdWxlc1xccG1cXHRhc2tzXFxwYWdlc1xcdGFzay1jcmVhdGVcXHRhc2stY3JlYXRlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL3BtL3Rhc2tzL3BhZ2VzL3Rhc2stY3JlYXRlL3Rhc2stY3JlYXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wbS90YXNrcy9wYWdlcy90YXNrLWNyZWF0ZS90YXNrLWNyZWF0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCAub2RkIHtcclxuICAgIGRpc3BsYXk6IG5vbmVcclxufSIsIjo6bmctZGVlcCAub2RkIHtcbiAgZGlzcGxheTogbm9uZTtcbn0iXX0= */\"","import {Component, OnInit} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Options} from 'ng5-slider';\r\n\r\nimport {TaskService} from '../../../../../core/services/task.service';\r\nimport {CustomFieldsService} from '../../../../../core/services/custom-fields.service';\r\nimport {ProjectService} from '../../../../../core/services/project.service';\r\n\r\n@Component({\r\n    selector: 'app-task-create',\r\n    templateUrl: './task-create.component.html',\r\n    styleUrls: ['./task-create.component.scss'],\r\n    preserveWhitespaces: true\r\n})\r\n\r\nexport class TaskCreateComponent implements OnInit {\r\n    createTaskForm: FormGroup;\r\n    parentTask: any;\r\n    projects: any;\r\n    project: any;\r\n    customFields: any = {length: 0};\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n    isHoursValid = false;\r\n    projectVersions = [];\r\n    users = [];\r\n    userIds = [];\r\n    parent_task_id = this.route.snapshot.params.id;\r\n    progressOptions: Options = {\r\n        floor: 0,\r\n        ceil: 100\r\n    };\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private taskService: TaskService,\r\n        private projectService: ProjectService,\r\n        private customFieldsService: CustomFieldsService,\r\n        public datepipe: DatePipe\r\n    ) {\r\n    }\r\n\r\n    get taskControl() {\r\n        return this.createTaskForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.parent_task_id == '' || this.parent_task_id == null) {\r\n            this.parent_task_id = 0;\r\n        }\r\n\r\n        this.getProjects();\r\n    }\r\n\r\n    loadForms(parentTaskId) {\r\n        if (parentTaskId == 0) {\r\n            this.createTaskForm = this.formBuilder.group({\r\n                parent_task_id: [parentTaskId],\r\n                name: ['', [Validators.required, Validators.maxLength(255)]],\r\n                generated_id: ['T0001', Validators.required],\r\n                project_id: [null, Validators.required],\r\n                project_version: [null],\r\n                planned_start_date: [null],\r\n                planned_end_date: [null],\r\n                task_start_date: [null],\r\n                task_end_date: [null],\r\n                assign_to: [null],\r\n                status: [1, Validators.required],\r\n                priority: [4, Validators.required],\r\n                estimated_hours: ['', Validators.pattern(/^[0-9]+\\:[0-5][0-9]$/)],\r\n                progress: [0],\r\n                description: [''],\r\n                users: [],\r\n                custom_field: this.formBuilder.array([]),\r\n                custom_fields: [null],\r\n            });\r\n\r\n            this.getGeneratedId();\r\n            this.getCustomFieldByForm();\r\n            this.isPageLoaded = true;\r\n        } else {\r\n            this.getParentTask(this.parent_task_id);\r\n        }\r\n    }\r\n\r\n    loadSubtaskForm(parentTask) {\r\n        this.parentTask = parentTask;\r\n        this.project = this.parentTask.project1;\r\n\r\n        // --\r\n        // Project users\r\n        this.users = this.project.users;\r\n        for (let i = 0; i < this.users.length; i++) {\r\n            this.userIds.push(this.users[i].id);\r\n        }\r\n\r\n        this.createTaskForm = this.formBuilder.group({\r\n            parent_task_id: [parentTask.id],\r\n            name: ['', [Validators.required, Validators.maxLength(255)]],\r\n            generated_id: ['', Validators.required],\r\n            project_id: [this.project.id],\r\n            project_version: [this.project.project_version],\r\n            planned_start_date: [null],\r\n            planned_end_date: [null],\r\n            task_start_date: [null],\r\n            task_end_date: [null],\r\n            assign_to: [null],\r\n            status: [parentTask.status, Validators.required],\r\n            priority: [4, Validators.required],\r\n            estimated_hours: ['', Validators.pattern(/^[0-9]+\\:[0-5][0-9]$/)],\r\n            progress: [0],\r\n            description: [''],\r\n            users: [this.userIds],\r\n            custom_field: this.formBuilder.array([]),\r\n            custom_fields: [null],\r\n        });\r\n\r\n        this.getSubTaskGeneratedId(parentTask.id);\r\n        this.getCustomFieldByForm();\r\n        this.isPageLoaded = true;\r\n    }\r\n\r\n    getCustomFieldByForm() {\r\n        this.customFieldsService.getCustomFieldByForm(2)\r\n            .subscribe(\r\n                data => {\r\n                    this.customFields = data;\r\n                    if (this.customFields.length > 0) {\r\n                        this.addDynamicField(this.customFields);\r\n                    }\r\n                });\r\n    }\r\n\r\n    getTaskStatus() {\r\n        if (this.parent_task_id == 0) {\r\n            return 'tasks.status';\r\n        } else {\r\n            return 'tasks.parent_status' + this.parentTask.status;\r\n        }\r\n    }\r\n\r\n    getProjects() {\r\n        this.projectService.getProject()\r\n            .subscribe(\r\n                data => {\r\n                    this.projects = data;\r\n                    this.loadForms(this.parent_task_id);\r\n                });\r\n    }\r\n\r\n    getGeneratedId() {\r\n        this.taskService.getGeneratedId().subscribe(data => {\r\n            this.createTaskForm.patchValue({generated_id: data});\r\n        });\r\n    }\r\n\r\n    getSubTaskGeneratedId(parentTaskId) {\r\n        this.taskService.getsubTaskCountByParent(parentTaskId).subscribe(data => {\r\n            this.createTaskForm.patchValue({generated_id: this.parentTask.generated_id + '.' + data});\r\n        });\r\n    }\r\n\r\n    getParentTask(parentTaskId) {\r\n        this.taskService.getParentTask(parentTaskId)\r\n            .subscribe(\r\n                data => {\r\n                    this.loadSubtaskForm(data);\r\n                });\r\n    }\r\n\r\n    projectChange(event: any) {\r\n        this.userIds = [];\r\n        this.createTaskForm.patchValue({project_version: null});\r\n        this.createTaskForm.patchValue({assign_to: null});\r\n        this.createTaskForm.patchValue({planned_start_date: null});\r\n        this.createTaskForm.patchValue({planned_end_date: null});\r\n        this.createTaskForm.patchValue({task_start_date: null});\r\n        this.createTaskForm.patchValue({task_end_date: null});\r\n\r\n        if (this.createTaskForm.value.project_id == undefined || this.createTaskForm.value.project_id == null || this.createTaskForm.value.project_id == '') {\r\n            this.projectVersions = null;\r\n            this.users = null;\r\n            return;\r\n        }\r\n\r\n        // --\r\n        // Project version\r\n        this.projectVersions = event.project_version.split(',');\r\n\r\n        // --\r\n        // Project users\r\n        this.users = event.users;\r\n        for (let i = 0; i < this.users.length; i++) {\r\n            this.userIds.push(this.users[i].id);\r\n        }\r\n        this.createTaskForm.patchValue({users: this.userIds});\r\n\r\n        this.project = event;\r\n    }\r\n\r\n    addDynamicField(fieldList) {\r\n        fieldList.forEach(element => {\r\n            let control = <FormArray>this.createTaskForm.controls.custom_field;\r\n            let validators = null;\r\n            if (element.is_required == 1) {\r\n                validators = [Validators.required];\r\n            }\r\n\r\n            control.push(\r\n                this.formBuilder.group({\r\n                    [element.field_column]: [null, validators]\r\n                })\r\n            );\r\n        });\r\n    }\r\n\r\n    setCustomFields() {\r\n        let arr = this.createTaskForm.value.custom_field,\r\n            obj = {},\r\n            iRow = 0,\r\n            that = this;\r\n\r\n        arr.forEach(function (item) {\r\n            let key = Object.keys(item)[0];\r\n            obj[key] = item[key];\r\n            if (that.customFields[iRow++].field_type == 'date') {\r\n                obj[key] = that.datepipe.transform(item[key], 'yyyy-MM-dd');\r\n            }\r\n        });\r\n        this.createTaskForm.patchValue({custom_fields: obj});\r\n    }\r\n\r\n    planstartDateChange(event: any) {\r\n        this.createTaskForm.patchValue({planned_end_date: event});\r\n    }\r\n\r\n    taskstartDateChange(event: any) {\r\n        this.createTaskForm.patchValue({task_end_date: event});\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        this.isHoursValid = false;\r\n        if (this.createTaskForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        // --\r\n        // Hours validation\r\n        if (this.createTaskForm.value.estimated_hours && this.project.estimated_hours) {\r\n            let projectHours = this.project.estimated_hours.replace(/:/g, '.'),\r\n                taskHours = this.createTaskForm.value.estimated_hours.replace(/:/g, '.');\r\n            if (parseInt(projectHours) < parseInt(taskHours)) {\r\n                this.isHoursValid = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.customFields.length > 0) {\r\n            this.setCustomFields();\r\n        }\r\n\r\n        this.createTaskForm.value.planned_start_date = this.datepipe.transform(this.createTaskForm.value.planned_start_date, 'yyyy-MM-dd');\r\n        this.createTaskForm.value.planned_end_date = this.datepipe.transform(this.createTaskForm.value.planned_end_date, 'yyyy-MM-dd');\r\n        this.createTaskForm.value.task_start_date = this.datepipe.transform(this.createTaskForm.value.task_start_date, 'yyyy-MM-dd');\r\n        this.createTaskForm.value.task_end_date = this.datepipe.transform(this.createTaskForm.value.task_end_date, 'yyyy-MM-dd');\r\n\r\n        this.taskService.create(this.createTaskForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('tasks.messages.create'), this.translate.instant('tasks.title'));\r\n                    this.router.navigate(['tasks']);\r\n                });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vdGFza3MvcGFnZXMvdGFzay1kZXRhaWwvdGFzay1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {NgxRolesService} from 'ngx-permissions';\r\n\r\nimport {TaskService} from '../../../../../core/services/task.service';\r\nimport {AuthenticationService} from 'src/app/core/services/authentication.service';\r\n\r\nimport {environment} from '../../../../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-task-detail',\r\n    templateUrl: './task-detail.component.html',\r\n    styleUrls: ['./task-detail.component.scss']\r\n})\r\n\r\nexport class TaskDetailComponent implements OnInit {\r\n    task: any;\r\n    loginUser: any;\r\n    isPageLoaded = false;\r\n    permission = false;\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        public ngxRolesService: NgxRolesService,\r\n        private taskService: TaskService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.route.paramMap.subscribe(params => {\r\n            this.getById(params.get('id'));\r\n        });\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    getCheckPermission(task) {\r\n        let role = this.ngxRolesService.getRole('admin');\r\n        if ((role && role.name == 'admin') || this.loginUser.is_super_admin) {\r\n            this.permission = true;\r\n        } else if (task.assign_to == this.loginUser.id || task.created_by == this.loginUser.id) {\r\n            this.permission = true;\r\n        }\r\n    }\r\n\r\n    getById(taskId) {\r\n        this.taskService.getById(taskId).subscribe(data => {\r\n            this.task = data;\r\n            this.getCheckPermission(this.task);\r\n            this.isPageLoaded = true;\r\n        });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vdGFza3MvcGFnZXMvdGFzay1lZGl0L3Rhc2stZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {NgxRolesService} from 'ngx-permissions';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Options} from 'ng5-slider';\r\n\r\nimport {CustomFieldsService} from '../../../../../core/services/custom-fields.service';\r\nimport {TaskService} from '../../../../../core/services/task.service';\r\nimport {ProjectService} from '../../../../../core/services/project.service';\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\n\r\n@Component({\r\n    selector: 'app-task-edit',\r\n    templateUrl: './task-edit.component.html',\r\n    styleUrls: ['./task-edit.component.scss'],\r\n    preserveWhitespaces: true\r\n})\r\n\r\nexport class TaskEditComponent implements OnInit {\r\n    editTaskForm: FormGroup;\r\n    loginUser: any;\r\n    parentTask: any;\r\n    task: any;\r\n    projects: any;\r\n    projectUser: any;\r\n    customFields: any = {length: 0};\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n    isHoursValid = false;\r\n    users = [];\r\n    userIds = [];\r\n    projectVersions = [];\r\n    progressOptions: Options = {\r\n        floor: 0,\r\n        ceil: 100\r\n    };\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public datepipe: DatePipe,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        public ngxRolesService: NgxRolesService,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private taskService: TaskService,\r\n        private projectService: ProjectService,\r\n        private customFieldsService: CustomFieldsService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.route.paramMap.subscribe(params => {\r\n            this.getTaskById(params.get('id'));\r\n        });\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    get taskControl() {\r\n        return this.editTaskForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getProjects();\r\n    }\r\n\r\n    loadForms() {\r\n        this.editTaskForm = this.formBuilder.group({\r\n            id: [this.task.id],\r\n            parent_task_id: [this.task.parent_task_id],\r\n            name: [this.task.name, Validators.required],\r\n            generated_id: [this.task.generated_id, [Validators.required]],\r\n            project_id: [this.task.project_id, Validators.required],\r\n            project_version: [this.task.project_version],\r\n            planned_start_date: [this.task.planned_start_date],\r\n            planned_end_date: [this.task.planned_end_date],\r\n            task_start_date: [this.task.task_start_date],\r\n            task_end_date: [this.task.task_end_date],\r\n            assign_to: [this.task.assign_to],\r\n            status: [this.task.status, Validators.required],\r\n            priority: [this.task.priority, Validators.required],\r\n            estimated_hours: [this.task.estimated_hours, Validators.pattern(/^[0-9]+\\:[0-5][0-9]$/)],\r\n            progress: [parseInt(this.task.progress)],\r\n            description: [this.task.description],\r\n            users: [],\r\n            custom_field: this.formBuilder.array([]),\r\n            custom_fields: [null],\r\n        });\r\n\r\n        // --\r\n        // Project Version\r\n        this.projectVersions = this.task.project1.project_version.split(',');\r\n        // --\r\n        // Project users\r\n        this.users = this.task.project1.users;\r\n        for (let i = 0; i < this.users.length; i++) {\r\n            this.userIds.push({'id': this.users[i].id});\r\n        }\r\n        this.editTaskForm.patchValue({users: this.userIds});\r\n\r\n        // --\r\n        // Custom fields\r\n        this.getCustomFieldByForm();\r\n\r\n        // --\r\n        // Parent task dates\r\n        if (this.task.parent_task_id != 0) {\r\n            this.getParentTask(this.task.parent_task_id);\r\n        } else {\r\n            this.isPageLoaded = true;\r\n        }\r\n    }\r\n\r\n    loadSubtaskForm(parentTask) {\r\n        this.parentTask = parentTask;\r\n        this.isPageLoaded = true;\r\n    }\r\n\r\n    getTaskStatus(status) {\r\n        return 'tasks.status' + status;\r\n    }\r\n\r\n    getCustomFieldByForm() {\r\n        this.customFieldsService.getCustomFieldByForm(2)\r\n            .subscribe(\r\n                data => {\r\n                    this.customFields = data;\r\n                    if (this.customFields.length > 0) {\r\n                        this.addDynamicField(this.customFields);\r\n                    }\r\n                });\r\n    }\r\n\r\n    addDynamicField(fieldList) {\r\n        fieldList.forEach(element => {\r\n            let control = <FormArray>this.editTaskForm.controls.custom_field;\r\n            let validators = null;\r\n            if (element.is_required == 1) {\r\n                validators = [Validators.required];\r\n            }\r\n            if (element.field_type == 'date' && this.task[element.field_column] != null) {\r\n                control.push(\r\n                    this.formBuilder.group({\r\n                        [element.field_column]: [new Date(this.task[element.field_column]), validators]\r\n                    })\r\n                );\r\n            } else {\r\n                control.push(\r\n                    this.formBuilder.group({\r\n                        [element.field_column]: [this.task[element.field_column], validators]\r\n                    })\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    getCheckPermission(task) {\r\n        let role = this.ngxRolesService.getRole('admin');\r\n        if ((role && role.name == 'admin') || this.loginUser.is_super_admin) {\r\n        } else if (task.assign_to == this.loginUser.id || task.created_by == this.loginUser.id) {\r\n        } else {\r\n            this.router.navigate(['tasks']);\r\n        }\r\n    }\r\n\r\n    getProjects() {\r\n        this.projectService.getProject().subscribe(data => {\r\n            this.projects = data;\r\n        });\r\n    }\r\n\r\n    getTaskById(taskId) {\r\n        this.taskService.getById(taskId)\r\n            .subscribe(\r\n                data => {\r\n                    this.task = data;\r\n                    this.getCheckPermission(this.task);\r\n                    this.setDateFormat();\r\n                    this.loadForms();\r\n                });\r\n\r\n    }\r\n\r\n    setDateFormat() {\r\n        if (this.task.planned_start_date) {\r\n            this.task.planned_start_date = new Date(this.task.planned_start_date);\r\n        }\r\n        if (this.task.planned_end_date) {\r\n            this.task.planned_end_date = new Date(this.task.planned_end_date);\r\n        }\r\n        if (this.task.task_start_date) {\r\n            this.task.task_start_date = new Date(this.task.task_start_date);\r\n        }\r\n        if (this.task.task_end_date) {\r\n            this.task.task_end_date = new Date(this.task.task_end_date);\r\n        }\r\n    }\r\n\r\n    getParentTask(parentTaskId) {\r\n        this.taskService.getParentTask(parentTaskId)\r\n            .subscribe(\r\n                data => {\r\n                    this.loadSubtaskForm(data);\r\n                });\r\n    }\r\n\r\n    setCustomFields() {\r\n        let arr = this.editTaskForm.value.custom_field;\r\n        let obj = {};\r\n        let iRow = 0;\r\n        let that = this;\r\n        arr.forEach(function (item) {\r\n            let key = Object.keys(item)[0];\r\n            obj[key] = item[key];\r\n            if (that.customFields[iRow++].field_type == 'date') {\r\n                obj[key] = that.datepipe.transform(item[key], 'yyyy-MM-dd');\r\n            }\r\n        });\r\n        this.editTaskForm.patchValue({custom_fields: obj});\r\n    }\r\n\r\n    projectChange(event: any) {\r\n        this.userIds = [];\r\n        this.editTaskForm.patchValue({project_version: null});\r\n        this.editTaskForm.patchValue({assign_to: null});\r\n        this.editTaskForm.patchValue({planned_start_date: null});\r\n        this.editTaskForm.patchValue({planned_end_date: null});\r\n        this.editTaskForm.patchValue({task_start_date: null});\r\n        this.editTaskForm.patchValue({task_end_date: null});\r\n\r\n        if (this.editTaskForm.value.project_id == undefined || this.editTaskForm.value.project_id == null || this.editTaskForm.value.project_id == '') {\r\n            this.projectVersions = null;\r\n            this.users = null;\r\n            return;\r\n        }\r\n\r\n        this.projectVersions = event.project_version.split(',');\r\n\r\n        // --\r\n        // Project users\r\n        this.users = event.users;\r\n        for (let i = 0; i < this.users.length; i++) {\r\n            this.userIds.push({'id': this.users[i].id});\r\n        }\r\n        this.editTaskForm.patchValue({users: this.userIds});\r\n    }\r\n\r\n    clearVersionValues() {\r\n        this.editTaskForm.patchValue({project_version: null});\r\n    }\r\n\r\n    planstartDateChange(event: any) {\r\n        this.editTaskForm.patchValue({planned_end_date: this.editTaskForm.value.planned_start_date});\r\n    }\r\n\r\n    taskstartDateChange(event: any) {\r\n        this.editTaskForm.patchValue({task_end_date: this.editTaskForm.value.task_start_date});\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        this.isHoursValid = false;\r\n        if (this.editTaskForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        // --\r\n        // Hours validation\r\n        if (this.editTaskForm.value.estimated_hours && this.task.project1.estimated_hours) {\r\n            let projectHours = this.task.project1.estimated_hours.replace(/:/g, '.'),\r\n                taskHours = this.editTaskForm.value.estimated_hours.replace(/:/g, '.');\r\n            if (parseInt(projectHours) < parseInt(taskHours)) {\r\n                this.isHoursValid = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.customFields.length > 0) {\r\n            this.setCustomFields();\r\n        }\r\n\r\n        this.editTaskForm.value.planned_start_date = this.datepipe.transform(this.editTaskForm.value.planned_start_date, 'yyyy-MM-dd');\r\n        this.editTaskForm.value.planned_end_date = this.datepipe.transform(this.editTaskForm.value.planned_end_date, 'yyyy-MM-dd');\r\n        this.editTaskForm.value.task_start_date = this.datepipe.transform(this.editTaskForm.value.task_start_date, 'yyyy-MM-dd');\r\n        this.editTaskForm.value.task_end_date = this.datepipe.transform(this.editTaskForm.value.task_end_date, 'yyyy-MM-dd');\r\n\r\n        this.taskService.update(this.editTaskForm.value).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('tasks.messages.update'), this.translate.instant('tasks.title'));\r\n            this.router.navigate(['tasks']);\r\n        });\r\n    }\r\n\r\n}\r\n","export default \".hide_empty_message ::ng-deep .odd {\\n  display: none;\\n}\\n\\n.btn-filters .status-dropdown .btn.assigned,\\n.btn-filters .status-dropdown .btn.open {\\n  background: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wbS90YXNrcy9wYWdlcy90YXNrLWxpc3QvQzpcXFVzZXJzXFx0aHVhblxcT25lRHJpdmVcXERlc2t0b3BcXGdsYXZhbC10aHVhbmRpbmgvc3JjXFxhcHBcXG1vZHVsZXNcXHBtXFx0YXNrc1xccGFnZXNcXHRhc2stbGlzdFxcdGFzay1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL3BtL3Rhc2tzL3BhZ2VzL3Rhc2stbGlzdC90YXNrLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FDQ0o7O0FERUE7O0VBRUksZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vdGFza3MvcGFnZXMvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oaWRlX2VtcHR5X21lc3NhZ2UgOjpuZy1kZWVwIC5vZGQge1xyXG4gICAgZGlzcGxheTogbm9uZVxyXG59XHJcblxyXG4uYnRuLWZpbHRlcnMgLnN0YXR1cy1kcm9wZG93biAuYnRuLmFzc2lnbmVkLFxyXG4uYnRuLWZpbHRlcnMgLnN0YXR1cy1kcm9wZG93biAuYnRuLm9wZW4ge1xyXG4gICAgYmFja2dyb3VuZDogbm9uZTtcclxufVxyXG4iLCIuaGlkZV9lbXB0eV9tZXNzYWdlIDo6bmctZGVlcCAub2RkIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmJ0bi1maWx0ZXJzIC5zdGF0dXMtZHJvcGRvd24gLmJ0bi5hc3NpZ25lZCxcbi5idG4tZmlsdGVycyAuc3RhdHVzLWRyb3Bkb3duIC5idG4ub3BlbiB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59Il19 */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {ExportAsConfig, ExportAsService} from 'ngx-export-as';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {NgxRolesService} from 'ngx-permissions';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {DataTableDirective} from 'angular-datatables';\r\nimport {Subject} from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {TaskService} from '../../../../../core/services/task.service';\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\n\r\nimport {TaskImportModalComponent} from './../../components/task-import-modal/task-import-modal.component';\r\n\r\nimport {task_status_key_value} from './../../../../../core/helpers/pm-helper';\r\nimport {DatatablesResponse} from '../../../../../core/helpers/datatables-response.helper';\r\nimport {environment} from '../../../../../../environments/environment';\r\n\r\nimport 'datatables.net';\r\nimport 'datatables.net-bs4';\r\n\r\n@Component({\r\n    selector: 'app-task-list',\r\n    templateUrl: './task-list.component.html',\r\n    styleUrls: ['./task-list.component.scss'],\r\n    preserveWhitespaces: true\r\n})\r\n\r\nexport class TaskListComponent implements OnInit {\r\n    public modalRef: BsModalRef;\r\n    @ViewChild(DataTableDirective, {static: true})\r\n    dtElement: DataTableDirective;\r\n    dtTrigger: Subject<any> = new Subject();\r\n    dtOptions: any = {};\r\n    loginUser: any;\r\n    countStatus: any;\r\n    statusfilterId = 0;\r\n    projectCount: any;\r\n    tasks = [];\r\n    taskstatusKeyValue = task_status_key_value;\r\n    taskFilterKey = 'selected';\r\n    isPageLoaded = false;\r\n    exportAsConfig: ExportAsConfig = {\r\n        type: 'pdf',\r\n        elementIdOrContent: 'tasks_table',\r\n    };\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n    modalConfigs = {\r\n        animated: true,\r\n        keyboard: true,\r\n        backdrop: true,\r\n        ignoreBackdropClick: false,\r\n        class: 'inmodal modal-dialog-centered animated fadeIn'\r\n    };\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public ngxRolesService: NgxRolesService,\r\n        private modalService: BsModalService,\r\n        private http: HttpClient,\r\n        private exportAsService: ExportAsService,\r\n        private taskService: TaskService,\r\n        private router: Router,\r\n        private toastr: ToastrService,\r\n        private route: ActivatedRoute,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadTaskDatatable();\r\n    }\r\n\r\n    loadTaskDatatable() {\r\n        this.statusfilterId = 0;\r\n        if (this.route.snapshot.params['statusId']) {\r\n            this.statusfilterId = this.route.snapshot.params['statusId'];\r\n        }\r\n        if (this.route.snapshot.params['taskFilterKey']) {\r\n            this.taskFilterKey = this.route.snapshot.params['taskFilterKey'];\r\n        }\r\n\r\n        let that = this;\r\n        this.dtOptions = {\r\n            pagingType: 'full_numbers',\r\n            pageLength: that.loginUser.settings.tables_pagination_limit,\r\n            serverSide: true,\r\n            processing: true,\r\n            dom: '<\"html5buttons\"B>ltfrtip',\r\n            order: [0],\r\n            columns: [\r\n                {\r\n                    'sortable': true,\r\n                    'width': '7%',\r\n                    'target': [0]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'target': [1]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '8%',\r\n                    'target': [2]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '8%',\r\n                    'target': [3]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '8%',\r\n                    'target': [4]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '10%',\r\n                    'target': [5]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '10%',\r\n                    'target': [6]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '10%',\r\n                    'target': [7]\r\n                },\r\n                {\r\n                    'sortable': false,\r\n                    'width': '5%',\r\n                    'target': [8]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    extend: 'csv',\r\n                    title: this.translate.instant('tasks.title'),\r\n                    className: 'btn btn-datatable-gredient',\r\n                    action: function (e, dt, node, config) {\r\n                        that.exportFiles('csv');\r\n                    }\r\n                }, {\r\n                    extend: 'excel',\r\n                    title: this.translate.instant('tasks.title'),\r\n                    className: 'btn btn-datatable-gredient',\r\n                    action: function (e, dt, node, config) {\r\n                        that.exportFiles('xlsx');\r\n                    }\r\n                }, {\r\n                    extend: 'pdf',\r\n                    title: this.translate.instant('tasks.title'),\r\n                    className: 'btn btn-datatable-gredient',\r\n                    action: function (e, dt, node, config) {\r\n                        that.exportFiles('pdf');\r\n                    }\r\n                }\r\n            ],\r\n            language: {\r\n                'sEmptyTable': this.translate.instant('common.datatable.sEmptyTable'),\r\n                'sInfo': this.translate.instant('common.datatable.sInfo'),\r\n                'sInfoEmpty': this.translate.instant('common.datatable.sInfoEmpty'),\r\n                'sSearch': '',\r\n                'sInfoPostFix': this.translate.instant('common.datatable.sInfoPostFix'),\r\n                'sInfoThousands': this.translate.instant('common.datatable.sInfoThousands'),\r\n                'sLengthMenu': this.translate.instant('common.datatable.sLengthMenu'),\r\n                'sLoadingRecords': this.translate.instant('common.datatable.sLoadingRecords'),\r\n                'sProcessing': this.translate.instant('common.datatable.sProcessing'),\r\n                'sZeroRecords': this.translate.instant('common.datatable.sZeroRecords'),\r\n                'sSearchPlaceholder': this.translate.instant('common.datatable.sSearchPlaceholder'),\r\n                'oPaginate': {\r\n                    'sFirst': this.translate.instant('common.datatable.oPaginate.sFirst'),\r\n                    'sLast': this.translate.instant('common.datatable.oPaginate.sLast'),\r\n                    'sNext': this.translate.instant('common.datatable.oPaginate.sNext'),\r\n                    'sPrevious': this.translate.instant('common.datatable.oPaginate.sPrevious')\r\n                },\r\n                'oAria': {\r\n                    'sSortAscending': this.translate.instant('common.datatable.oAria.sSortAscending'),\r\n                    'sSortDescending': this.translate.instant('common.datatable.oAria.sSortDescending')\r\n                }\r\n            },\r\n            ajax: (dataTablesParameters: any, callback) => {\r\n                dataTablesParameters = {\r\n                    columns: dataTablesParameters.columns,\r\n                    draw: dataTablesParameters.draw,\r\n                    length: dataTablesParameters.length,\r\n                    order: dataTablesParameters.order,\r\n                    search: dataTablesParameters.search,\r\n                    start: dataTablesParameters.start,\r\n                    status: this.statusfilterId,\r\n                    filter: this.taskFilterKey\r\n                };\r\n                this.http\r\n                    .post<DatatablesResponse>(this.apiUrl + '/api/all-tasks', dataTablesParameters, {})\r\n                    .subscribe(resp => {\r\n                        this.isPageLoaded = true;\r\n                        this.tasks = resp.data;\r\n                        this.countStatus = resp;\r\n                        this.countStatus = this.countStatus.statusCount;\r\n                        if (this.countStatus.all == 0) {\r\n                            this.countStatus.all = 0;\r\n                            this.countStatus.open = 0;\r\n                            this.countStatus.in_progress = 0;\r\n                            this.countStatus.completed = 0;\r\n                        }\r\n\r\n                        callback({\r\n                            recordsTotal: resp.recordsTotal,\r\n                            recordsFiltered: resp.recordsFiltered,\r\n                            data: [],\r\n                        });\r\n                    });\r\n            }\r\n        };\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dtTrigger.next();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n    rerender(): void {\r\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n            dtInstance.destroy();\r\n            setTimeout(() => {\r\n                this.dtTrigger.next();\r\n\r\n                if (this.tasks.length > 0) {\r\n                    $('.tfoot_dt').addClass('d-none');\r\n                } else {\r\n                    $('.tfoot_dt').removeClass('d-none');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    exportFiles(type) {\r\n        this.exportAsConfig.type = type;\r\n        this.exportAsService.save(this.exportAsConfig, this.translate.instant('tasks.title')).subscribe(() => {\r\n        });\r\n    }\r\n\r\n    getCheckPermission(task) {\r\n        let role = this.ngxRolesService.getRole('admin');\r\n        if ((role && role.name == 'admin') || this.loginUser.is_super_admin) {\r\n            return true;\r\n        } else if (task.assign_to == this.loginUser.id || task.created_by == this.loginUser.id) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    changeTaskStatus(taskID: any, status: any) {\r\n        let changeTask = {\r\n            id: taskID,\r\n            status: status.id\r\n        };\r\n        this.taskService.changeStatus(changeTask)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('tasks.messages.status'), this.translate.instant('tasks.title'));\r\n                    this.rerender();\r\n                });\r\n    }\r\n\r\n    filterByStatus(statusID, taskFilterKey) {\r\n        this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n        this.router.navigate(['tasks', statusID, taskFilterKey]);\r\n    }\r\n\r\n    getTaskStatus(status) {\r\n        return 'tasks.status' + status;\r\n    }\r\n\r\n    getTranslateStatus(statusKey) {\r\n        return this.taskstatusKeyValue[statusKey];\r\n    }\r\n\r\n    saveTaskDetail(index, name, value) {\r\n        this.tasks[index][name] = value;\r\n        this.taskService.update(this.tasks[index])\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('tasks.messages.update'), this.translate.instant('tasks.title'));\r\n                    this.rerender();\r\n                });\r\n    }\r\n\r\n    deleteTask(id) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.taskService.delete(id)\r\n                    .subscribe(\r\n                        data => {\r\n                            this.toastr.success(this.translate.instant('tasks.messages.delete'), this.translate.instant('tasks.title'));\r\n                            this.rerender();\r\n                        });\r\n            }\r\n        });\r\n    }\r\n\r\n    openTaskImportModal() {\r\n        this.modalRef = this.modalService.show(TaskImportModalComponent, this.modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.toastr.success(this.translate.instant('tasks.messages.import'), this.translate.instant('tasks.title'));\r\n            this.rerender();\r\n        });\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NgxPermissionsGuard} from 'ngx-permissions';\r\n\r\nimport {TaskCreateComponent} from './pages/task-create/task-create.component';\r\nimport {TaskEditComponent} from './pages/task-edit/task-edit.component';\r\nimport {TaskListComponent} from './pages/task-list/task-list.component';\r\nimport {TaskDetailComponent} from './pages/task-detail/task-detail.component';\r\nimport {TaskCopyComponent} from './pages/task-copy/task-copy.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: '',\r\n                canActivate: [NgxPermissionsGuard],\r\n                component: TaskListComponent,\r\n                data: {\r\n                    permissions: {\r\n                        only: ['admin', 'super_admin', 'tasks_view']\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                path: 'create',\r\n                canActivate: [NgxPermissionsGuard],\r\n                component: TaskCreateComponent,\r\n                data: {\r\n                    breadcrumbs: {\r\n                        text: 'common.create',\r\n                        icon: 'fa fa-tasks',\r\n                        show: true,\r\n                        isHome: true\r\n                    },\r\n                    permissions: {\r\n                        only: ['admin', 'super_admin', 'tasks_create']\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                path: 'copy/:id',\r\n                canActivate: [NgxPermissionsGuard],\r\n                component: TaskCopyComponent,\r\n                data: {\r\n                    breadcrumbs: {\r\n                        text: 'common.copy',\r\n                        icon: 'fa fa-tasks',\r\n                        show: true,\r\n                        isHome: true\r\n                    },\r\n                    permissions: {\r\n                        only: ['admin', 'super_admin', 'tasks_create']\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                path: 'edit/:id',\r\n                canActivate: [NgxPermissionsGuard],\r\n                component: TaskEditComponent,\r\n                data: {\r\n                    breadcrumbs: {\r\n                        text: 'common.edit',\r\n                        icon: 'fa fa-tasks',\r\n                        hasParams: true,\r\n                        show: true,\r\n                        isHome: true\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                path: 'create/:id',\r\n                component: TaskCreateComponent,\r\n                canActivate: [NgxPermissionsGuard],\r\n                data: {\r\n                    breadcrumbs: {\r\n                        text: 'common.create',\r\n                        icon: 'fa fa-tasks',\r\n                        hasParams: true,\r\n                        show: true,\r\n                        isHome: true\r\n                    },\r\n                    permissions: {\r\n                        only: ['admin', 'super_admin', 'tasks_create']\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                path: 'detail/:id',\r\n                component: TaskDetailComponent,\r\n                canActivate: [NgxPermissionsGuard],\r\n                data: {\r\n                    breadcrumbs: {\r\n                        text: 'common.detail',\r\n                        icon: 'fa fa-tasks',\r\n                        hasParams: true,\r\n                        show: true,\r\n                        isHome: true\r\n                    },\r\n                    permissions: {\r\n                        only: ['admin', 'super_admin', 'tasks_view']\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                path: ':statusId/:taskFilterKey',\r\n                component: TaskListComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class TasksRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {\r\n    AccordionModule,\r\n    BsDatepickerModule,\r\n    BsDropdownModule,\r\n    ButtonsModule,\r\n    DatepickerModule,\r\n    ModalModule,\r\n    TabsModule,\r\n    TooltipModule\r\n} from 'ngx-bootstrap';\r\nimport {PerfectScrollbarModule} from 'ngx-perfect-scrollbar';\r\nimport {ExportAsModule} from 'ngx-export-as';\r\nimport {NgxEditorModule} from 'ngx-editor';\r\nimport {ProgressbarModule} from 'ngx-bootstrap/progressbar';\r\nimport {NgxPermissionsModule} from 'ngx-permissions';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport {DragAndDropModule} from 'angular-draggable-droppable';\r\nimport {ResizableModule} from 'angular-resizable-element';\r\nimport {Ng5SliderModule} from 'ng5-slider';\r\n\r\nimport {TasksRoutingModule} from './task-routing.module';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport {TodoModule} from '../../admin/todo/todo.module';\r\n\r\nimport {TaskCreateComponent} from './pages/task-create/task-create.component';\r\nimport {TaskEditComponent} from './pages/task-edit/task-edit.component';\r\nimport {TaskListComponent} from './pages/task-list/task-list.component';\r\nimport {TaskDetailComponent} from './pages/task-detail/task-detail.component';\r\nimport {TaskDetailsComponent} from './components/task-details/task-details.component';\r\nimport {TaskActivitiesComponent} from './components/task-activities/task-activities.component';\r\nimport {TaskAttachmentsComponent} from './components/task-attachments/task-attachments.component';\r\nimport {TaskCommentsComponent} from './components/task-comments/task-comments.component';\r\nimport {TaskImportModalComponent} from './components/task-import-modal/task-import-modal.component';\r\nimport {TaskNotesComponent} from './components/task-notes/task-notes.component';\r\nimport {CreateAttachmentModalComponent} from './components/create-attachment-modal/create-attachment-modal.component';\r\nimport {TimesheetModule} from '../../timesheet/timesheet.module';\r\nimport {TaskCopyComponent} from './pages/task-copy/task-copy.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TaskCreateComponent,\r\n        TaskEditComponent,\r\n        TaskListComponent,\r\n        TaskDetailComponent,\r\n        TaskDetailsComponent,\r\n        TaskActivitiesComponent,\r\n        TaskAttachmentsComponent,\r\n        TaskCommentsComponent,\r\n        TaskImportModalComponent,\r\n        TaskNotesComponent,\r\n        CreateAttachmentModalComponent,\r\n        TaskCopyComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        TasksRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgSelectModule,\r\n        DataTablesModule,\r\n        ExportAsModule,\r\n        BsDropdownModule,\r\n        NgxEditorModule,\r\n        DragAndDropModule,\r\n        ResizableModule,\r\n        Ng5SliderModule,\r\n        PerfectScrollbarModule,\r\n        ProgressbarModule.forRoot(),\r\n        NgxPermissionsModule,\r\n        TooltipModule.forRoot(),\r\n        DatepickerModule.forRoot(),\r\n        BsDatepickerModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n        TabsModule.forRoot(),\r\n        ButtonsModule.forRoot(),\r\n        AccordionModule.forRoot(),\r\n        TranslateModule.forChild({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (HttpLoaderFactory),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        TodoModule,\r\n        TimesheetModule,\r\n        SharedModule\r\n    ],\r\n    entryComponents: [CreateAttachmentModalComponent, TaskImportModalComponent]\r\n})\r\n\r\nexport class TasksModule {\r\n}\r\n\r\n// Required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n"],"sourceRoot":"webpack:///"}