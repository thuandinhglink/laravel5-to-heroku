{"version":3,"sources":["./src/app/modules/mailbox/pages/mailbox/mailbox.component.html","./src/app/core/services/mail.service.ts","./src/app/modules/mailbox/mailbox-routing.module.ts","./src/app/modules/mailbox/mailbox.module.ts","./src/app/modules/mailbox/pages/mailbox/mailbox.component.scss","./src/app/modules/mailbox/pages/mailbox/mailbox.component.ts"],"names":[],"mappings":"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","file":"modules-mailbox-mailbox-module.js","sourcesContent":["export default \"<section class=\\\"mailbox-page\\\">\\r\\n    <div class=\\\"card pl-2 pr-2\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <!-- Sidebar -->\\r\\n            <div class=\\\"col-lg-3\\\">\\r\\n                <div class=\\\"sidebar-content\\\">\\r\\n                    <div class=\\\"card-header pl-0\\\">\\r\\n                        <h4 class=\\\"card-title\\\">{{'mailbox.title' | translate}} {{tableData.length}}</h4>\\r\\n                    </div>\\r\\n                    <button (click)=\\\"composeMail()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'mailbox_create']\\\" class=\\\"btn btn-create\\\">\\r\\n                        <i class=\\\"fa fa-plus\\\"></i><span>{{'mailbox.title2' | translate}}</span></button>\\r\\n                    <div [perfectScrollbar]=\\\"scrollConfig\\\" class=\\\"list-group-mail\\\">\\r\\n                        <h5>{{'mailbox.title19' | translate}}</h5>\\r\\n                        <div class=\\\"list-group list-group-messages no-border\\\">\\r\\n                            <a (click)=\\\"getMail('inbox', 'inbox')\\\" [ngClass]=\\\"{'active': tableParams.trashType == 'inbox'}\\\" class=\\\"list-group-item no-border\\\"><i class=\\\"ft-inbox mr-1\\\"></i> {{'mailbox.title4' | translate}}\\r\\n                                <span class=\\\"badge badge-dark badge-pill float-right\\\">{{tableData.countUnRead}}</span></a>\\r\\n                            <a (click)=\\\"getMail('sent', 'sent')\\\" [ngClass]=\\\"{'active': tableParams.trashType == 'sent'}\\\" class=\\\"list-group-item list-group-item-action no-border\\\"><i class=\\\"fa fa-paper-plane-o mr-1\\\"></i> {{'mailbox.title5' | translate}}\\r\\n                            </a>\\r\\n                            <a (click)=\\\"getMail('draft', 'draft')\\\" [ngClass]=\\\"{'active': tableParams.trashType == 'draft'}\\\" class=\\\"list-group-item list-group-item-action no-border\\\"><i class=\\\"ft-file mr-1\\\"></i> {{'mailbox.title6' | translate}}\\r\\n                            </a>\\r\\n                            <a (click)=\\\"getMail('favourite', 'favourite')\\\" [ngClass]=\\\"{'active': tableParams.trashType == 'favourite'}\\\" class=\\\"list-group-item list-group-item-action no-border\\\"><i class=\\\"ft-star mr-1\\\"></i> {{'mailbox.title7' | translate}}\\r\\n                                <span class=\\\"badge badge-danger badge-pill float-right\\\">{{tableData.countDraft}}</span></a>\\r\\n                            <a (click)=\\\"getMail('trash', 'inbox')\\\" [ngClass]=\\\"{'active': tableParams.trashType == 'trash'}\\\" class=\\\"list-group-item list-group-item-action no-border\\\"><i class=\\\"ft-trash-2 mr-1\\\"></i> {{'mailbox.title8' | translate}}\\r\\n                            </a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Inbox -->\\r\\n            <div *ngIf=\\\"mailboxViewable\\\" class=\\\"col-lg-9 pr-4 pl-sm-3 pl-3 border-left\\\">\\r\\n                <div class=\\\"card-header pl-0 pr-0 border-bottom\\\">\\r\\n                    <h4 *ngIf=\\\"tableParams.emailType == 'inbox'\\\" class=\\\"card-title mt-3\\\">{{tableParams.emailType | titlecase }} ({{tableData.countUnRead}})</h4>\\r\\n                    <h4 *ngIf=\\\"tableParams.emailType != 'inbox'\\\" class=\\\"card-title mt-3\\\">{{tableParams.emailType | titlecase }} ({{tableData.totalData}})</h4>\\r\\n                    <!-- Search -->\\r\\n                    <div *ngIf=\\\"tableData.totalData != 0\\\" class=\\\"card-buttons d-flex\\\">\\r\\n                        <div class=\\\"btn-round-search mr-1\\\">\\r\\n                            <form>\\r\\n                                <div class=\\\"input-group mb-0\\\">\\r\\n                                    <input [(ngModel)]='txtSearch' aria-describedby=\\\"button-addon2\\\" class=\\\"form-control\\\" name=\\\"txtSearch\\\" placeholder=\\\"{{'mailbox.title1' | translate}}\\\" type=\\\"text\\\">\\r\\n                                    <button (click)=\\\"search()\\\" class=\\\"btn btn-raised btn-round\\\" type=\\\"submit\\\" type=\\\"button\\\">\\r\\n                                        <i class=\\\"fa fa-search\\\"></i></button>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"tableData.totalData != 0\\\" class=\\\"mail-box-header\\\">\\r\\n                    <div class=\\\"mail-tools d-flex justify-content-between\\\">\\r\\n                        <div class=\\\"btn-group\\\">\\r\\n                            <button (click)=\\\"referesh()\\\" class=\\\"btn\\\" tooltip=\\\"{{'mailbox.title12' | translate}}\\\">\\r\\n                                <i class=\\\"fa fa-refresh\\\"></i></button>\\r\\n                            <!-- Trash -->\\r\\n                            <ng-container *ngIf=\\\"tableParams.emailType == 'trash'\\\">\\r\\n                                <button (click)=\\\"getMail('trash', 'inbox')\\\" [ngClass]=\\\"{'active': tableParams.trashType == 'inbox'}\\\" class=\\\"btn\\\" tooltip=\\\"{{'mailbox.title4' | translate}}\\\">\\r\\n                                    <i class=\\\"ft-inbox\\\"></i></button>\\r\\n                                <button (click)=\\\"getMail('trash', 'sent')\\\" [ngClass]=\\\"{'active': tableParams.trashType == 'sent'}\\\" class=\\\"btn\\\" tooltip=\\\"{{'mailbox.title5' | translate}}\\\">\\r\\n                                    <i class=\\\"fa fa-paper-plane-o\\\"></i></button>\\r\\n                                <button (click)=\\\"getMail('trash', 'draft')\\\" [ngClass]=\\\"{'active': tableParams.trashType == 'draft'}\\\" class=\\\"btn\\\" tooltip=\\\"{{'mailbox.title6' | translate}}\\\">\\r\\n                                    <i class=\\\"ft-star\\\"></i></button>\\r\\n                            </ng-container>\\r\\n                            <!-- Inbox -->\\r\\n                            <ng-container *ngIf=\\\"tableParams.emailType == 'inbox'\\\">\\r\\n                                <button (click)=\\\"markAsRead()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'mailbox_edit']\\\" class=\\\"btn\\\" tooltip=\\\"{{'mailbox.title13' | translate}}\\\">\\r\\n                                    <i class=\\\"fa fa-eye\\\"></i></button>\\r\\n                                <button (click)=\\\"markAsFavourite()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'mailbox_edit']\\\" class=\\\"btn\\\" tooltip=\\\"{{'mailbox.title14' | translate}}\\\">\\r\\n                                    <i class=\\\"fa fa-exclamation\\\"></i></button>\\r\\n                                <button (click)=\\\"moveToTrash()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'mailbox_delete']\\\" class=\\\"btn\\\" tooltip=\\\"{{'mailbox.title15' | translate}}\\\">\\r\\n                                    <i class=\\\"fa fa-trash-o\\\"></i></button>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                        <!-- Pagination -->\\r\\n                        <div class=\\\"btn-group\\\">\\r\\n                            <button (click)=\\\"setPage(tableParams.currentPage - 1)\\\" [ngClass]=\\\"{disabled:tableParams.currentPage === 1 || tableData.totalPage === 0}\\\" class=\\\"btn\\\">\\r\\n                                <i class=\\\"fa fa-arrow-left\\\"></i></button>\\r\\n                            <button (click)=\\\"setPage(tableParams.currentPage + 1)\\\" [ngClass]=\\\"{disabled:tableParams.currentPage === tableData.totalPage ||  tableData.totalPage === 0}\\\" class=\\\"btn\\\">\\r\\n                                <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <!-- Email list -->\\r\\n                <div class=\\\"mail-box\\\">\\r\\n                    <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                        <table class=\\\"table table-hover table-mail\\\">\\r\\n                            <tbody *ngIf=\\\"tableData.totalData != 0\\\">\\r\\n                            <tr *ngFor=\\\"let mail of tableData.listData; index as i\\\" class=\\\"{{ ( mail.view_status == 1 ) ? 'read' : 'unread' }}\\\" class=\\\"unread\\\">\\r\\n                                <td *ngIf=\\\"tableParams.emailType == 'inbox'\\\" class=\\\"check-mail\\\">\\r\\n                                    <label class=\\\"checkbox-container\\\">\\r\\n                                        <input [(checklist)]=\\\"mail_checked\\\" [checklistValue]=\\\"mail.id\\\" class=\\\"form-control\\\" name=\\\"mail_check_{{i}}\\\" type=\\\"checkbox\\\"/>\\r\\n                                        <span class=\\\"checkbox-checkmark\\\"></span>\\r\\n                                    </label>\\r\\n                                </td>\\r\\n                                <td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"mail.favourites == 1 && tableParams.emailType != 'trash'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"setUnFavouriteMail(mail.id)\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'mailbox_edit']\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-star fa-lg text-warning\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n                                </td>\\r\\n                                <td class=\\\"mail-contact\\\">\\r\\n                                    <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'mailbox_view']; else elseBlock1; then thenBlock1\\\"></div>\\r\\n                                    <ng-template #elseBlock1></ng-template>\\r\\n                                    <ng-template #thenBlock1>\\r\\n                                        <ng-container *ngIf=\\\"tableParams.emailType == 'inbox' || tableParams.emailType == 'favourite'\\\">\\r\\n                                            <a (click)=\\\"mailView(mail.id, 'inbox')\\\" [tooltipAnimation]=\\\"true\\\" placement=\\\"bottom\\\" tooltip=\\\"{{ getSentUser(mail.from) | titlecase }}\\\">{{ getSentUser(mail.from) | titlecase }}</a>\\r\\n                                        </ng-container>\\r\\n                                        <ng-container *ngIf=\\\"tableParams.emailType == 'sent'\\\">\\r\\n                                            <a (click)=\\\"mailView(mail.id, 'sent')\\\" [tooltipAnimation]=\\\"true\\\" placement=\\\"bottom\\\" tooltip=\\\"{{ getSentUser(mail.to) | titlecase }}\\\">{{ getSentUser(mail.to) | titlecase }}</a>\\r\\n                                        </ng-container>\\r\\n                                        <ng-template *ngIf=\\\"tableParams.emailType == 'draft' || tableParams.emailType == 'trash'\\\">\\r\\n                                            <a (click)=\\\"mailView(mail.id, 'draft')\\\" [tooltipAnimation]=\\\"true\\\" placement=\\\"bottom\\\" tooltip=\\\"{{ getSentUser(mail.user.email) | titlecase }}\\\">{{ getSentUser(mail.user.email) | titlecase }}</a>\\r\\n                                        </ng-template>\\r\\n                                    </ng-template>\\r\\n                                </td>\\r\\n                                <td class=\\\"mail-subject\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"tableParams.emailType == 'trash'\\\" [tooltipAnimation]=\\\"true\\\" placement=\\\"bottom\\\" tooltip=\\\"{{ mail.subject }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{mail.subject}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n                                    <span *ngIf=\\\"tableParams.emailType != 'trash'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"mailView(mail.id)\\\" [tooltipAnimation]=\\\"true\\\" placement=\\\"bottom\\\" tooltip=\\\"{{ mail.subject }}\\\">{{mail.subject}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n                                </td>\\r\\n                                <td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"tableParams.emailType != 'trash'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i (click)=\\\"mailView(mail.id)\\\" *ngIf=\\\"mail.attachments?.length\\\" class=\\\"fa fa-paperclip\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n                                </td>\\r\\n                                <td class=\\\"text-right mail-date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"tableParams.emailType == 'trash'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ mail.created_at | dateTimeFormatFilter: loginUser.settings.date_time_format }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n                                    <span *ngIf=\\\"tableParams.emailType != 'trash'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"mailView(mail.id)\\\">{{ mail.created_at | dateTimeFormatFilter: loginUser.settings.date_time_format }}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                            <tbody *ngIf=\\\"tableData.totalData == 0\\\" class=\\\"tfoot_dt\\\">\\r\\n                            <tr>\\r\\n                                <td class=\\\"text-center\\\" colspan=\\\"6\\\">\\r\\n                                    <img src=\\\"assets/img/norecord-img.png\\\" width=\\\"50\\\">\\r\\n                                    <p class=\\\"mt-1\\\">{{'common.empty_message.mails' | translate}}</p>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Compose mail -->\\r\\n            <div *ngIf=\\\"composeViewable\\\" class=\\\"col-lg-9 pr-4 pl-sm-3 pl-3 border-left\\\">\\r\\n                <div class=\\\"card-header pl-0 pr-0 border-bottom\\\">\\r\\n                    <h4 class=\\\"card-title mt-2\\\">{{'mailbox.title3' | translate}}</h4>\\r\\n                    <div class=\\\"card-buttons\\\">\\r\\n                        <button (click)=\\\"onSubmit('draft')\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'mailbox_create']\\\" class=\\\"btn btn-cancel btn-sm mb-0\\\" tooltip=\\\"{{'mailbox.title16' | translate}}\\\">\\r\\n                            <i class=\\\"fa fa-pencil\\\"></i> {{'mailbox.title6' | translate}}</button>\\r\\n                        <button (click)=\\\"getMail('inbox')\\\" class=\\\"btn btn-submit btn-sm mb-0\\\" tooltip=\\\"{{'mailbox.title17' | translate}}\\\">\\r\\n                            <i class=\\\"fa fa-times\\\"></i> {{'mailbox.title9' | translate}}</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"compose-box pt-3\\\">\\r\\n                    <form (ngSubmit)=\\\"onSubmit('inbox')\\\" [formGroup]=\\\"composeMailForm\\\">\\r\\n                        <div class=\\\"mail-body\\\">\\r\\n                            <div [ngClass]=\\\"{ 'is-invalid': submitted && mailForm.to.errors }\\\" class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-2\\\">{{'mailbox.compose.fields.to' | translate}}:</label>\\r\\n                                <div class=\\\"col-sm-10\\\">\\r\\n                                    <ng-select [closeOnSelect]=\\\"true\\\" [items]=\\\"mailboxUsers\\\" [multiple]=\\\"true\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindValue=\\\"value\\\" formControlName=\\\"to\\\" labelForId=\\\"to\\\" placeholder=\\\"{{'mailbox.compose.placeholders.placeholder1' | translate}}\\\"></ng-select>\\r\\n                                    <div *ngIf=\\\"submitted && mailForm.to.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        <div *ngIf=\\\"mailForm.to.errors.required\\\">{{'mailbox.compose.error_messages.message1' | translate}}</div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-2\\\">{{'mailbox.compose.fields.subject' | translate}}:</label>\\r\\n                                <div class=\\\"col-sm-10\\\">\\r\\n                                    <input [ngClass]=\\\"{ 'is-invalid': submitted && mailForm.subject.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"subject\\\" id=\\\"subject\\\" placeholder=\\\"{{'mailbox.compose.placeholders.placeholder2' | translate}}\\\" type=\\\"text\\\">\\r\\n                                    <div *ngIf=\\\"submitted && mailForm.subject.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        <div *ngIf=\\\"mailForm.subject.errors.required\\\">{{'mailbox.compose.error_messages.message2' | translate}}</div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <app-ngx-editor [placeholder]=\\\"''\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"message_body\\\" height=\\\"100px\\\" id=\\\"message_body\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <!-- Attachements -->\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <label class=\\\"btn btn-raised btn-info round btn-file\\\">\\r\\n                                        <input [uploader]=\\\"uploader\\\" class=\\\"d-none\\\" multiple ng2FileSelect type=\\\"file\\\"/>\\r\\n                                        <span class=\\\"fa fa-paperclip\\\">&nbsp;{{'mailbox.title11' | translate}}</span>\\r\\n                                    </label>\\r\\n                                    <div *ngIf=\\\"uploader.queue.length != 0\\\" class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                                        <table class=\\\"table table-hover b4-datatable\\\">\\r\\n                                            <thead>\\r\\n                                            <tr>\\r\\n                                                <th width=\\\"50%\\\">{{'mailbox.compose.columns.name' | translate}}</th>\\r\\n                                                <th>{{'mailbox.compose.columns.size' | translate}}</th>\\r\\n                                                <th>{{'mailbox.compose.columns.progress' | translate}}</th>\\r\\n                                                <th>{{'mailbox.compose.columns.status' | translate}}</th>\\r\\n                                                <th>{{'mailbox.compose.columns.actions' | translate}}</th>\\r\\n                                            </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                            <tr *ngFor=\\\"let item of uploader.queue; index as i\\\">\\r\\n                                                <td><strong>{{ item?.file?.name }}</strong></td>\\r\\n                                                <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size / 1024 / 1024 | number:'.2' }} MB</td>\\r\\n                                                <td *ngIf=\\\"uploader.options.isHTML5\\\">\\r\\n                                                    <progressbar [animate]=\\\"true\\\" [striped]=\\\"true\\\" [value]=\\\"item.progress\\\" max=\\\"100\\\"></progressbar>\\r\\n                                                </td>\\r\\n                                                <td class=\\\"budges-status\\\">\\r\\n                                                    <span *ngIf=\\\"item.isSuccess\\\" class=\\\"completed\\\">{{'common.status.success' | translate}}</span>\\r\\n                                                    <span *ngIf=\\\"item.isCancel\\\" class=\\\"cancel\\\">{{'common.status.cancel' | translate}}</span>\\r\\n                                                    <span *ngIf=\\\"item.isError\\\" class=\\\"closed\\\">{{'common.status.error' | translate}}</span>\\r\\n                                                </td>\\r\\n                                                <td nowrap>\\r\\n                                                    <button (click)=\\\"item.remove();uploaderRemove(attachmentsArr[i])\\\" class=\\\"btn btn-raised btn-danger white btn-xs mb-0\\\" type=\\\"button\\\">\\r\\n                                                        <span class=\\\"fa fa-close\\\"></span></button>\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                            </tbody>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"mail-foote text-right\\\">\\r\\n                            <button class=\\\"btn btn-submit btn-sm\\\" tooltip=\\\"{{'mailbox.title10' | translate}}\\\">\\r\\n                                <i class=\\\"fa fa-reply\\\"></i> {{'mailbox.title10' | translate}}</button>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Mail view -->\\r\\n            <div *ngIf=\\\"mailviewViewable && isMailLoaded\\\" class=\\\"col-lg-9 pr-4 pl-sm-3 pl-3 border-left\\\">\\r\\n                <div class=\\\"card-header pl-0 pr-0 border-bottom\\\">\\r\\n                    <h4 class=\\\"card-title mt-2\\\">{{'mailbox.title18' | translate}}</h4>\\r\\n                    <div class=\\\"card-buttons\\\">\\r\\n                        <button (click)='deleteMail(mailDetails.id)' *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'mailbox_delete']\\\" class=\\\"btn btn-submit btn-action-icon mb-0 btn-round\\\" tooltip=\\\"{{'mailbox.title17' | translate}}\\\">\\r\\n                            <i class=\\\"fa fa-trash-o\\\"></i></button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"mail-tools-head d-flex justify-content-between pt-3\\\">\\r\\n                        <div class=\\\"mail-head-sub\\\">\\r\\n                            <h2><span>{{'mailbox.compose.fields.subject' | translate}}: </span>{{ mailDetails.subject }}\\r\\n                            </h2>\\r\\n                            <ng-container *ngIf=\\\"mailboxType == 'inbox'\\\">\\r\\n                                <h6>\\r\\n                                    <span>{{'mailbox.compose.fields.from' | translate}}: </span>{{ getSentUser(mailDetails.from) }}\\r\\n                                </h6>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngIf=\\\"mailboxType == 'sent'\\\">\\r\\n                                <h6>\\r\\n                                    <span>{{'mailbox.compose.fields.from' | translate}}: </span>{{ getSentUser(mailDetails.to) }}\\r\\n                                </h6>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngIf=\\\"mailboxType == 'draft'\\\">\\r\\n                                <h6>\\r\\n                                    <span>{{'mailbox.compose.fields.from' | translate}}: </span>{{ getSentUser(mailDetails.user.email) }}\\r\\n                                </h6>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                        <div class=\\\"mail-head-time\\\">\\r\\n                            <span>{{ mailDetails.created_at | dateTimeFormatFilter: loginUser.settings.date_time_format }}</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"mail-message\\\">\\r\\n                        <div [innerHTML]=\\\"mailDetails.message_body\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"mail-attachment\\\">\\r\\n                        <p class=\\\"mail-attachment-child\\\">\\r\\n                            <span><i class=\\\"fa fa-paperclip\\\"></i> {{ mailDetails.attachments?.length || '0' }} {{'mailbox.title11' | translate}}</span>\\r\\n                        </p>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div *ngFor=\\\"let mail of mailDetails.attachments; index as i\\\" class=\\\"col-xl-4 col-md-6\\\">\\r\\n                                <div class=\\\"file-browser\\\">\\r\\n                                    <div class=\\\"file-box\\\">\\r\\n                                        <div class=\\\"files\\\">\\r\\n                                            <a download=\\\"{{mail.file_name}}\\\" href=\\\"{{ apiUrl }}/uploads/mailbox/{{mail.file_hash}}\\\" target=\\\"_blank\\\">\\r\\n                                                <div *ngIf=\\\"mail.file_extension == 'jpg' || mail.file_extension == 'png'; else elseBlock\\\" class=\\\"image\\\">\\r\\n                                                    <img alt=\\\"image\\\" class=\\\"img-fluid height-100\\\" src=\\\"{{ apiUrl }}/uploads/mailbox/{{mail.file_hash}}\\\"/>\\r\\n                                                </div>\\r\\n                                                <ng-template #elseBlock>\\r\\n                                                    <div class=\\\"icon docx\\\">\\r\\n                                                        <i class=\\\"fa fa-file\\\"></i>\\r\\n                                                    </div>\\r\\n                                                </ng-template>\\r\\n                                                <div class=\\\"file-name\\\">\\r\\n                                                    <h4>{{ mail.file_name }}</h4>\\r\\n                                                    <p>Added: {{ mail.created_at | dateTimeFormatFilter: loginUser.settings.date_time_format }}</p>\\r\\n                                                </div>\\r\\n                                                <span class=\\\"corner\\\"></span>\\r\\n                                            </a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class MailService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    create(emailCompose: any) {\r\n        return this.http.post(`${this.apiUrl}/api/mailbox`, emailCompose);\r\n    }\r\n\r\n    getAll(reqObj: any) {\r\n        return this.http.post(`${this.apiUrl}/api/all-mailbox`, reqObj);\r\n    }\r\n\r\n    findById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/mailbox/${id}`);\r\n    }\r\n\r\n    destroy(id: number) {\r\n        return this.http.delete(`${this.apiUrl}/api/mailbox/${id}`);\r\n    }\r\n\r\n    markAsRead(mailObj: any) {\r\n        return this.http.post(`${this.apiUrl}/api/mailbox/reads`, mailObj);\r\n    }\r\n\r\n    markAsFavourite(mailObj: any) {\r\n        return this.http.post(`${this.apiUrl}/api/mailbox/favourite`, mailObj);\r\n    }\r\n\r\n    removeMarkMails(mailObj: any) {\r\n        return this.http.post(`${this.apiUrl}/api/mailbox/remove`, mailObj);\r\n    }\r\n\r\n    removeAttachments(dataObj: any) {\r\n        return this.http.post(`${this.apiUrl}/api/mailbox/attachment/remove`, dataObj);\r\n    }\r\n\r\n    setUnFavouriteMail(dataObj: any) {\r\n        return this.http.post(`${this.apiUrl}/api/mailbox/unfavourite`, dataObj);\r\n    }\r\n\r\n    getUnReadMails(length: number) {\r\n        return this.http.post(`${this.apiUrl}/api/mailbox/unread-emails`, {length: length});\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport {MailboxComponent} from './pages/mailbox/mailbox.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {path: '', component: MailboxComponent},\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class MailboxRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\nimport {NgxEditorModule} from 'ngx-editor';\r\nimport {TooltipModule} from 'ngx-bootstrap';\r\nimport {ProgressbarModule} from 'ngx-bootstrap/progressbar';\r\nimport {NgxPermissionsModule} from 'ngx-permissions';\r\nimport {PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule} from 'ngx-perfect-scrollbar';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {FileUploadModule} from 'ng2-file-upload';\r\nimport {ChecklistModule} from 'angular-checklist';\r\n\r\nimport {SharedModule} from '../../shared/shared.module';\r\n\r\nimport {MailboxRoutingModule} from './mailbox-routing.module';\r\nimport {MailboxComponent} from './pages/mailbox/mailbox.component';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n    suppressScrollX: true\r\n};\r\n\r\n@NgModule({\r\n    declarations: [MailboxComponent],\r\n    imports: [\r\n        CommonModule,\r\n        MailboxRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgxEditorModule,\r\n        ChecklistModule,\r\n        HttpClientModule,\r\n        FileUploadModule,\r\n        NgSelectModule,\r\n        PerfectScrollbarModule,\r\n        NgxPermissionsModule,\r\n        TooltipModule.forRoot(),\r\n        ProgressbarModule.forRoot(),\r\n        TranslateModule.forChild({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (HttpLoaderFactory),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        SharedModule\r\n    ],\r\n    providers: [{\r\n        provide: PERFECT_SCROLLBAR_CONFIG,\r\n        useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n    }]\r\n})\r\n\r\nexport class MailboxModule {\r\n}\r\n\r\n// Required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFpbGJveC9wYWdlcy9tYWlsYm94L21haWxib3guY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {PerfectScrollbarConfigInterface} from 'ngx-perfect-scrollbar';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {FileUploader} from 'ng2-file-upload';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {AuthenticationService} from '../../../../core/services/authentication.service';\r\nimport {MailService} from '../../../../core/services/mail.service';\r\nimport {UserService} from '../../../../core/services/user.service';\r\n\r\nimport {environment} from '../../../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-mailbox',\r\n    templateUrl: './mailbox.component.html',\r\n    styleUrls: ['./mailbox.component.scss']\r\n})\r\n\r\nexport class MailboxComponent implements OnInit {\r\n    public uploader: FileUploader;\r\n    public mailboxViewable: boolean;\r\n    public composeViewable: boolean;\r\n    public mailviewViewable: boolean;\r\n    public scrollConfig: PerfectScrollbarConfigInterface = {};\r\n    composeMailForm: FormGroup;\r\n    hasBaseDropZoneOver: boolean;\r\n    resData: any = {};\r\n    mailDetails: any = {};\r\n    loginToken: any;\r\n    loginUser: any;\r\n    txtSearch: string;\r\n    mailboxData = {} as any;\r\n    tableData = {} as any;\r\n    tableParams = {} as any;\r\n    mail_checked = [];\r\n    submitted = false;\r\n    isMailLoaded = false;\r\n    attachmentsArr = [];\r\n    mailboxUsers = [];\r\n    mailboxEmailsUsers = [];\r\n    mailboxType: string;\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private authenticationService: AuthenticationService,\r\n        private mailService: MailService,\r\n        private userService: UserService,\r\n        private toastr: ToastrService,\r\n        private formBuilder: FormBuilder,\r\n    ) {\r\n        this.loginToken = this.authenticationService.currentTokenValue;\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n        this.toggle(true, false, false);\r\n        this.loadFileUploader();\r\n    }\r\n\r\n    get mailForm() {\r\n        return this.composeMailForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.setTableParams();\r\n        this.tableParams.length = 5;\r\n        this.tableParams.emailType = 'inbox';\r\n        this.tableParams.trashType = 'inbox';\r\n        this.getMail(this.tableParams.emailType);\r\n        this.uploader.onBeforeUploadItem = (item) => {\r\n            item.withCredentials = false;\r\n        };\r\n        this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\r\n            if (!isNaN(response)) {\r\n                this.attachmentsArr.push(response);\r\n                this.toastr.success(this.translate.instant('mailbox.messages.message'), this.translate.instant('mailbox.title'));\r\n            }\r\n        };\r\n        this.userService.getMailUsers().subscribe(resp => {\r\n            this.mailboxEmailsUsers = resp;\r\n            resp.forEach(user => {\r\n                this.mailboxUsers.push({value: user.id, label: user.firstname + ' ' + user.lastname});\r\n            });\r\n        });\r\n    }\r\n\r\n    loadFileUploader() {\r\n        this.uploader = new FileUploader({\r\n            url: this.apiUrl + '/api/mailbox/files/upload',\r\n            method: 'post',\r\n            authToken: this.loginToken.token_type + ' ' + this.loginToken.token,\r\n            removeAfterUpload: false,\r\n            autoUpload: true,\r\n            isHTML5: true,\r\n        });\r\n        this.hasBaseDropZoneOver = false;\r\n    }\r\n\r\n    getMail(emailType, trashType = this.tableParams.trashType) {\r\n        this.toggle(true, false, false);\r\n        if (emailType != this.tableParams.emailType) {\r\n            this.tableParams.emailType = emailType;\r\n            this.setTableParams();\r\n        }\r\n        if (trashType != this.tableParams.trashType && trashType != '') {\r\n            this.tableParams.trashType = trashType;\r\n            this.setTableParams();\r\n        }\r\n\r\n        let reqObj = {\r\n            type: this.tableParams.emailType,\r\n            trashType: this.tableParams.trashType,\r\n            search: this.txtSearch,\r\n            currentPage: this.tableParams.currentPage,\r\n            length: this.tableParams.length,\r\n            start: (this.tableParams.currentPage - 1) * this.tableParams.length,\r\n        };\r\n        this.mailService.getAll(reqObj).subscribe(resp => {\r\n            this.mailboxData = resp;\r\n            this.tableData = {\r\n                listData: this.mailboxData.mailbox,\r\n                countUnRead: this.mailboxData.countUnRead,\r\n                countDraft: this.mailboxData.countDraft,\r\n                totalPage: this.mailboxData.totalPage,\r\n                totalData: this.mailboxData.totalData,\r\n            };\r\n        });\r\n    }\r\n\r\n    search() {\r\n        this.setTableParams();\r\n        this.getMail(this.tableParams.emailType);\r\n    }\r\n\r\n    setPage(currentPage) {\r\n        let isPageSet: boolean = true;\r\n        if (currentPage < 1) {\r\n            currentPage = 1;\r\n            isPageSet = false;\r\n        } else if (currentPage > this.tableData.totalPage) {\r\n            currentPage = this.tableData.totalPage;\r\n            isPageSet = false;\r\n        }\r\n        this.tableParams.currentPage = currentPage;\r\n        if (isPageSet) {\r\n            this.getMail(this.tableParams.emailType);\r\n        }\r\n    }\r\n\r\n    setTableParams() {\r\n        this.tableParams.start = 0;\r\n        this.tableParams.currentPage = 1;\r\n    }\r\n\r\n    markAsRead() {\r\n        let mailObj = {\r\n            ids: this.mail_checked\r\n        };\r\n\r\n        if (this.mail_checked.length <= 0) {\r\n            this.toastr.error(this.translate.instant('mailbox.messages.message2'), this.translate.instant('mailbox.title'));\r\n            return false;\r\n        }\r\n\r\n        this.mailService.markAsRead(mailObj).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('mailbox.messages.message8'), this.translate.instant('mailbox.title'));\r\n            this.referesh();\r\n        });\r\n    }\r\n\r\n    markAsFavourite() {\r\n        let mailObj = {\r\n            ids: this.mail_checked\r\n        };\r\n\r\n        if (this.mail_checked.length <= 0) {\r\n            this.toastr.error(this.translate.instant('mailbox.messages.message2'), this.translate.instant('mailbox.title'));\r\n            return false;\r\n        }\r\n\r\n        this.mailService.markAsFavourite(mailObj).subscribe(data => {\r\n            this.toastr.success(this.mail_checked.length + this.translate.instant('mailbox.messages.message7'), this.translate.instant('mailbox.title'));\r\n            this.referesh();\r\n        });\r\n    }\r\n\r\n    setUnFavouriteMail(id) {\r\n        let mailObj = {\r\n            id: id\r\n        };\r\n\r\n        this.mailService.setUnFavouriteMail(mailObj).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('mailbox.messages.message6'), this.translate.instant('mailbox.title'));\r\n            this.referesh();\r\n        });\r\n    }\r\n\r\n    moveToTrash() {\r\n        let mailObj = {\r\n            ids: this.mail_checked\r\n        };\r\n\r\n        if (this.mail_checked.length <= 0) {\r\n            this.toastr.error(this.translate.instant('mailbox.messages.message2'), this.translate.instant('mailbox.title'));\r\n            return false;\r\n        }\r\n\r\n        this.mailService.removeMarkMails(mailObj).subscribe(data => {\r\n            this.toastr.success(this.mail_checked.length + this.translate.instant('mailbox.messages.message5'), this.translate.instant('mailbox.title'));\r\n            this.referesh();\r\n        });\r\n    }\r\n\r\n    composeMail() {\r\n        this.toggle(false, true, false);\r\n        this.attachmentsArr = [];\r\n        this.composeMailForm = this.formBuilder.group({\r\n            to: ['', Validators.required],\r\n            subject: ['', Validators.required],\r\n            message_body: [''],\r\n        });\r\n    }\r\n\r\n    onSubmit(type) {\r\n        this.submitted = true;\r\n        if (this.composeMailForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        let mailComObj = {\r\n            type: type,\r\n            to: this.composeMailForm.value.to,\r\n            subject: this.composeMailForm.value.subject,\r\n            message_body: this.composeMailForm.value.message_body,\r\n            attachments: this.attachmentsArr,\r\n        };\r\n\r\n        this.mailService.create(mailComObj).subscribe(data => {\r\n            if (type == 'draft') {\r\n                this.toastr.success(this.translate.instant('mailbox.messages.message9'), this.translate.instant('mailbox.title'));\r\n            } else {\r\n                this.toastr.success(this.translate.instant('mailbox.messages.message3'), this.translate.instant('mailbox.title'));\r\n            }\r\n            this.toggle(true, false, false);\r\n        });\r\n    }\r\n\r\n    // View mail.\r\n    mailView(id, type) {\r\n        this.isMailLoaded = false;\r\n        this.mailboxType = type;\r\n        this.mailService.findById(id).subscribe(resp => {\r\n            this.resData = resp;\r\n            this.mailDetails = this.resData.mailbox;\r\n            this.toggle(false, false, true);\r\n            this.isMailLoaded = true;\r\n        });\r\n    }\r\n\r\n    deleteMail(id) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text') + ' ' + this.translate.instant('mailbox.title20'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.mailService.destroy(id).subscribe(data => {\r\n                    this.toastr.success(this.translate.instant('mailbox.messages.message4'), this.translate.instant('mailbox.title'));\r\n                    this.getMail(this.tableParams.emailType);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    public fileOverBase(e: any): void {\r\n        this.hasBaseDropZoneOver = e;\r\n    }\r\n\r\n    public uploaderRemove(id) {\r\n        let index = this.attachmentsArr.indexOf(id);\r\n        if (index > -1) {\r\n            let dataObj = {\r\n                id: id,\r\n            };\r\n            this.mailService.removeAttachments(dataObj).subscribe(data => {\r\n                this.toastr.success(this.translate.instant('mailbox.messages.message1'), this.translate.instant('mailbox.title'));\r\n            });\r\n            this.attachmentsArr.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public toggle(mailboxViewable, composeViewable, mailviewViewable): void {\r\n        this.mailboxViewable = mailboxViewable;\r\n        this.composeViewable = composeViewable;\r\n        this.mailviewViewable = mailviewViewable;\r\n    }\r\n\r\n    referesh() {\r\n        this.mail_checked = [];\r\n        this.getMail(this.tableParams.emailType);\r\n    }\r\n\r\n    getSentUser(email) {\r\n        for (let iRow in this.mailboxEmailsUsers) {\r\n            if (this.mailboxEmailsUsers[iRow].email == email) {\r\n                return this.mailboxEmailsUsers[iRow].firstname + ' ' + this.mailboxEmailsUsers[iRow].lastname;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}