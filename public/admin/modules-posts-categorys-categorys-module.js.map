{"version":3,"sources":["./src/app/modules/posts/categorys/pages/category-create/category-create.component.html","./src/app/modules/posts/categorys/pages/category-edit/category-edit.component.html","./src/app/modules/posts/categorys/pages/category-item-translate/category-item-translate.component.html","./src/app/modules/posts/categorys/pages/category-lists/category-lists.component.html","./src/app/modules/posts/categorys/pages/category-translate/category-translate.component.html","./src/app/core/services/client.service.ts","./src/app/modules/posts/categorys/categorys-routing.module.ts","./src/app/modules/posts/categorys/categorys.module.ts","./src/app/modules/posts/categorys/pages/category-create/category-create.component.scss","./src/app/modules/posts/categorys/pages/category-create/category-create.component.ts","./src/app/modules/posts/categorys/pages/category-edit/category-edit.component.scss","./src/app/modules/posts/categorys/pages/category-edit/category-edit.component.ts","./src/app/modules/posts/categorys/pages/category-item-translate/category-item-translate.component.scss","./src/app/modules/posts/categorys/pages/category-item-translate/category-item-translate.component.ts","./src/app/modules/posts/categorys/pages/category-lists/category-lists.component.scss","./src/app/modules/posts/categorys/pages/category-lists/category-lists.component.ts","./src/app/modules/posts/categorys/pages/category-translate/category-translate.component.scss","./src/app/modules/posts/categorys/pages/category-translate/category-translate.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,8ZAA+V,gCAAgC,kaAAka,wCAAwC,2YAA2Y,+DAA+D,8FAA8F,4CAA4C,MAAM,gKAAgK,+DAA+D,+EAA+E,2DAA2D,qQAAqQ,wDAAwD,2RAA2R,oEAAoE,mGAAmG,8CAA8C,MAAM,+VAA+V,0DAA0D,8JAA8J,WAAW,2XAA2X,wDAAwD,2RAA2R,sEAAsE,qGAAqG,mDAAmD,MAAM,+HAA+H,sEAAsE,kHAAkH,0DAA0D,+QAA+Q,wDAAwD,6uBAA6uB,wCAAwC,2YAA2Y,qEAAqE,oGAAoG,kDAAkD,4HAA4H,qEAAqE,2FAA2F,2DAA2D,iRAAiR,wDAAwD,2RAA2R,2EAA2E,0GAA0G,wDAAwD,+HAA+H,2EAA2E,iIAAiI,0DAA0D,yRAAyR,wDAAwD,2RAA2R,yEAAyE,wGAAwG,sDAAsD,MAAM,gKAAgK,yEAAyE,mGAAmG,2DAA2D,yRAAyR,wDAAwD,wWAAwW,sCAAsC,mVAAmV,oDAAoD,8JAA8J,YAAY,0xBAA0xB,qCAAqC,oEAAoE,sCAAsC,mEAAmE,yCAAyC,+SAA+S,sKAAsK,KAAK,iSAAiS,6CAA6C,2bAA2b,oDAAoD,0/BAA0/B,iEAAiE,0GAA0G,8CAA8C,MAAM,iTAAiT,0DAA0D,sQAAsQ,wDAAwD,usBAAusB,kEAAkE,2GAA2G,+CAA+C,4HAA4H,kEAAkE,qFAAqF,2DAA2D,2QAA2Q,wDAAwD,quBAAquB,yEAAyE,kHAAkH,sDAAsD,MAAM,0TAA0T,0DAA0D,8JAA8J,WAAW,qYAAqY,wDAAwD,8rBAA8rB,iEAAiE,0GAA0G,8CAA8C,MAAM,kcAAkc,4DAA4D,kwBAAkwB,mEAAmE,4GAA4G,gDAAgD,MAAM,sUAAsU,0DAA0D,mIAAmI,mEAAmE,uFAAuF,2DAA2D,gRAAgR,wDAAwD,4zBAA4zB,8BAA8B,wGAAwG,8BAA8B,2S;;;;;;;;;;;;ACA5qsB;AAAe,4ZAA6V,gCAAgC,kaAAka,wCAAwC,2YAA2Y,+DAA+D,8FAA8F,4CAA4C,MAAM,gKAAgK,+DAA+D,+EAA+E,2DAA2D,qQAAqQ,wDAAwD,2RAA2R,oEAAoE,mGAAmG,8CAA8C,MAAM,+VAA+V,0DAA0D,8JAA8J,WAAW,2XAA2X,wDAAwD,2RAA2R,sEAAsE,qGAAqG,mDAAmD,MAAM,+HAA+H,sEAAsE,kHAAkH,0DAA0D,+QAA+Q,wDAAwD,6uBAA6uB,wCAAwC,2YAA2Y,qEAAqE,oGAAoG,kDAAkD,4HAA4H,qEAAqE,2FAA2F,2DAA2D,iRAAiR,wDAAwD,2RAA2R,2EAA2E,0GAA0G,wDAAwD,+HAA+H,2EAA2E,iIAAiI,0DAA0D,yRAAyR,wDAAwD,2RAA2R,yEAAyE,wGAAwG,sDAAsD,MAAM,gKAAgK,yEAAyE,mGAAmG,2DAA2D,yRAAyR,wDAAwD,wWAAwW,sCAAsC,kVAAkV,oDAAoD,8JAA8J,YAAY,0xBAA0xB,qCAAqC,oEAAoE,sCAAsC,mEAAmE,yCAAyC,6SAA6S,sKAAsK,KAAK,iSAAiS,2CAA2C,4bAA4b,oDAAoD,0/BAA0/B,iEAAiE,0GAA0G,8CAA8C,MAAM,iTAAiT,0DAA0D,mIAAmI,iEAAiE,mFAAmF,2DAA2D,4QAA4Q,wDAAwD,msBAAmsB,kEAAkE,2GAA2G,+CAA+C,4HAA4H,kEAAkE,qFAAqF,2DAA2D,2QAA2Q,wDAAwD,quBAAquB,yEAAyE,kHAAkH,sDAAsD,MAAM,0TAA0T,0DAA0D,8JAA8J,WAAW,qYAAqY,wDAAwD,8rBAA8rB,iEAAiE,0GAA0G,8CAA8C,MAAM,klBAAklB,QAAQ,mBAAmB,iBAAiB,8MAA8M,oCAAoC,oOAAoO,4DAA4D,swBAAswB,mEAAmE,4GAA4G,gDAAgD,MAAM,sUAAsU,0DAA0D,mIAAmI,mEAAmE,uFAAuF,2DAA2D,gRAAgR,wDAAwD,4zBAA4zB,8BAA8B,wGAAwG,8BAA8B,2S;;;;;;;;;;;;ACAhpuB;AAAe,qVAAsR,gCAAgC,8XAA8X,wCAAwC,6WAA6W,+DAA+D,wFAAwF,4CAA4C,MAAM,oJAAoJ,+DAA+D,+EAA+E,2DAA2D,yPAAyP,wDAAwD,6PAA6P,oEAAoE,6FAA6F,8CAA8C,MAAM,mVAAmV,0DAA0D,kJAAkJ,WAAW,mWAAmW,wDAAwD,6PAA6P,sEAAsE,+FAA+F,mDAAmD,MAAM,mHAAmH,sEAAsE,kHAAkH,0DAA0D,mQAAmQ,wDAAwD,ypBAAypB,wCAAwC,6WAA6W,qEAAqE,8FAA8F,kDAAkD,gHAAgH,qEAAqE,2FAA2F,2DAA2D,qQAAqQ,wDAAwD,6PAA6P,2EAA2E,oGAAoG,wDAAwD,mHAAmH,2EAA2E,iIAAiI,0DAA0D,6QAA6Q,wDAAwD,6PAA6P,yEAAyE,kGAAkG,sDAAsD,MAAM,oJAAoJ,yEAAyE,mGAAmG,2DAA2D,6QAA6Q,wDAAwD,spBAAspB,iEAAiE,oGAAoG,8CAA8C,MAAM,qSAAqS,0DAA0D,uFAAuF,iEAAiE,mFAAmF,2DAA2D,gQAAgQ,wDAAwD,wmBAAwmB,kEAAkE,qGAAqG,+CAA+C,gHAAgH,kEAAkE,qFAAqF,2DAA2D,+PAA+P,wDAAwD,uoBAAuoB,yEAAyE,4GAA4G,sDAAsD,MAAM,4SAA4S,0DAA0D,kJAAkJ,gBAAgB,6WAA6W,wDAAwD,omBAAomB,iEAAiE,oGAAoG,8CAA8C,MAAM,oaAAoa,4DAA4D,kqBAAkqB,mEAAmE,sGAAsG,gDAAgD,MAAM,0TAA0T,0DAA0D,6HAA6H,mEAAmE,uFAAuF,2DAA2D,oQAAoQ,wDAAwD,stBAAstB,8BAA8B,kGAAkG,8BAA8B,qO;;;;;;;;;;;;ACA9qjB;AAAe,yVAA0R,+BAA+B,oPAAoP,6BAA6B,i3BAAi3B,sCAAsC,2DAA2D,6CAA6C,2DAA2D,wCAAwC,2DAA2D,8BAA8B,gPAAgP,6IAA6I,QAAQ,GAAG,gBAAgB,mBAAmB,gBAAgB,mDAAmD,2BAA2B,KAAK,eAAe,+GAA+G,sBAAsB,2DAA2D,iBAAiB,6+BAA6+B,2BAA2B,uaAAua,6BAA6B,gmBAAgmB,4CAA4C,6Y;;;;;;;;;;;;ACA1lJ;AAAe,uLAAwH,cAAc,sI;;;;;;;;;;;;;;;;;;;ACA5G;AACO;AAIc;AAM9D;IAGI,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,WAAM,GAAG,qEAAW,CAAC,MAAM,CAAC;IAGpC,CAAC;IAED,8BAAM,GAAN;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,MAAM,iBAAc,CAAC,CAAC;IACjE,CAAC;IAED,6CAAqB,GAArB;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,MAAM,6BAA0B,CAAC,CAAC;IAC7E,CAAC;IAED,+BAAO,GAAP,UAAQ,EAAU;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,qBAAgB,EAAI,CAAC,CAAC;IAC7D,CAAC;IAED,8BAAM,GAAN,UAAO,MAAc;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,MAAM,iBAAc,EAAE,MAAM,CAAC,CAAC;IAChE,CAAC;IAED,8BAAM,GAAN,UAAO,MAAc;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,qBAAgB,MAAM,CAAC,EAAI,EAAE,MAAM,CAAC,CAAC;IAC5E,CAAC;IAED,8BAAM,GAAN,UAAO,EAAU,EAAE,MAAW;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,MAAM,4BAAuB,EAAI,EAAE,MAAM,CAAC,CAAC;IAC7E,CAAC;IAED,6CAAqB,GAArB,UAAsB,MAAc;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,mCAA8B,MAAM,CAAC,EAAI,EAAE,MAAM,CAAC,CAAC;IAC1F,CAAC;IAED,0CAAkB,GAAlB,UAAmB,EAAE;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,0BAAqB,EAAI,CAAC,CAAC;IAClE,CAAC;;gBAjCyB,+DAAU;;IAH3B,aAAa;QAJzB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;+EAK4B,+DAAU;OAH3B,aAAa,CAqCzB;IAAD,oBAAC;CAAA;AArCyB;;;;;;;;;;;;;;;;;;;;;;;;ACXa;AACc;AACD;AAEmC;AACG;AACN;AACpF,uFAAuF;AAEvF,IAAM,MAAM,GAAW,CAAC;QACpB,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE;YACN;gBACI,IAAI,EAAE,EAAE;gBACR,WAAW,EAAE,CAAC,mEAAmB,CAAC;gBAClC,SAAS,EAAE,qGAAsB;aACpC;YACD;gBACI,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,CAAC,mEAAmB,CAAC;gBAClC,IAAI,EAAE;oBACF,WAAW,EAAE;wBACT,IAAI,EAAE,eAAe;wBACrB,IAAI,EAAE,qBAAqB;wBAC3B,IAAI,EAAE,IAAI;wBACV,MAAM,EAAE,IAAI;qBACf;oBACD,WAAW,EAAE;wBACT,IAAI,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,kBAAkB,CAAC;qBACrD;iBACJ;gBACD,SAAS,EAAE,wGAAuB;aACrC;YACD;gBACI,IAAI,EAAE,UAAU;gBAChB,WAAW,EAAE,CAAC,mEAAmB,CAAC;gBAClC,IAAI,EAAE;oBACF,WAAW,EAAE;wBACT,IAAI,EAAE,aAAa;wBACnB,IAAI,EAAE,qBAAqB;wBAC3B,IAAI,EAAE,IAAI;wBACV,MAAM,EAAE,IAAI;qBACf;oBACD,WAAW,EAAE;wBACT,IAAI,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,gBAAgB,CAAC;qBACnD;iBACJ;gBACD,SAAS,EAAE,kGAAqB;aACnC;SAeJ;KACJ;CACA,CAAC;AAOF;IAAA;IACA,CAAC;IADY,sBAAsB;QALlC,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OAEW,sBAAsB,CAClC;IAAD,6BAAC;CAAA;AADkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEI;AACM;AACmB;AAChB;AAC6F;AAChG;AACF;AACU;AACD;AACiB;AACN;AACX;AAEc;AACP;AAE4B;AACG;AACN;AACiB;AACc;AACnH,uFAAuF;AAuCvF;IAAA;IACA,CAAC;IADY,eAAe;QArC3B,8DAAQ,CAAC;YACN,YAAY,EAAE;gBACV,sGAAsB;gBACtB,yGAAuB;gBACvB,mGAAqB;gBACrB,kHAA0B;gBAC1B,gIAA8B;aAEjC;YACD,OAAO,EAAE;gBACL,4DAAY;gBACZ,iFAAsB;gBACtB,0DAAW;gBACX,kEAAmB;gBACnB,oEAAoB;gBACpB,oEAAgB;gBAChB,4DAAc;gBACd,0DAAe;gBACf,mEAAc;gBACd,yDAAW,CAAC,OAAO,EAAE;gBACrB,8DAAgB,CAAC,OAAO,EAAE;gBAC1B,gEAAkB,CAAC,OAAO,EAAE;gBAC5B,2DAAa,CAAC,OAAO,EAAE;gBACvB,8DAAgB,CAAC,OAAO,EAAE;gBAC1B,oEAAe,CAAC,QAAQ,CAAC;oBACrB,MAAM,EAAE;wBACJ,OAAO,EAAE,oEAAe;wBACxB,UAAU,EAAE,CAAC,iBAAiB,CAAC;wBAC/B,IAAI,EAAE,CAAC,+DAAU,CAAC;qBACrB;iBACJ,CAAC;gBACF,mEAAY;gBACZ,4DAAc;gBACd,wDAAU,CAAC,OAAO,EAAE;aACvB;SACJ,CAAC;OAEW,eAAe,CAC3B;IAAD,sBAAC;CAAA;AAD2B;AAG5B,+BAA+B;AACxB,SAAS,iBAAiB,CAAC,IAAgB;IAC9C,OAAO,IAAI,+EAAmB,CAAC,IAAI,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;AACpE,CAAC;;;;;;;;;;;;;AClED;AAAe,4EAAa,qBAAqB,GAAG,6CAA6C,uvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1B;AAC9B;AACoC;AACtC;AACE;AACY;AACrD,gGAAgG;AAChB;AACJ;AACF;AACN;AACsB;AAC3B;AAE1B;AASrC;IAsBI,iCACW,SAA2B,EAC3B,QAAkB,EACjB,MAAc,EACd,WAAwB,EACxB,MAAqB,EACrB,gBAAkC,EAClC,cAA8B,EAC9B,UAAsB,EACtB,aAA4B,EAC5B,UAAsB;IAC9B,0DAA0D;IAClD,qBAA4C;QAZxD,mBAeC;QAdU,cAAS,GAAT,SAAS,CAAkB;QAC3B,aAAQ,GAAR,QAAQ,CAAU;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,eAAU,GAAV,UAAU,CAAY;QAEtB,0BAAqB,GAArB,qBAAqB,CAAuB;QAhCxD,eAAU,GAAe;YACrB,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAC;YAC7B,EAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAC;SAC/B,CAAC;QAKF,kBAAa,GAAG,EAAE,CAAC;QACnB,iBAAY,GAAQ,EAAE,CAAC;QACvB,oBAAe,GAAG,KAAK,CAAC;QAExB,iBAAY,GAAG,KAAK,CAAC;QACrB,qBAAgB,GAAG;YACf,eAAe,EAAE,YAAY;YAC7B,cAAc,EAAE,WAAW;SAC9B,CAAC;QACF,qBAAgB,GAAG,KAAK,CAAC;QACzB,qBAAgB,GAAG,KAAK,CAAC;QAgBrB,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,SAAS,CAAC,WAAC,IAAI,cAAI,CAAC,SAAS,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAC5E,CAAC;IAED,sBAAI,oDAAe;aAAnB;YACI,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;QAC5C,CAAC;;;OAAA;IAED,0CAAQ,GAAR;QACI,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,uBAAuB,EAAE;YAC7C,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC;SACnC;aAAM;YACH,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC;SACtC;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,0CAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,IAAI,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,MAAM,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,WAAW,EAAE,CAAC,IAAI,CAAC;YACnB,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,gBAAgB,EAAE,CAAC,IAAI,CAAC;YACxB,cAAc,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,MAAM,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,kBAAkB,EAAC,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,cAAc,EAAE,CAAC,IAAI,CAAC;YACtB,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YACnC,GAAG,EAAE,CAAC,IAAI,CAAC;YACX,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACxC,CAAC,CAAC;QACH,UAAU,CAAC;YACP,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC7B,CAAC;IACO,4CAAU,GAAlB,UAAmB,IAAI;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1B,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,OAAO,EAAE,CAAC,IAAI,CAAC;SAClB,CAAC,CAAC;IACP,CAAC;IACO,4CAAU,GAAlB,UAAmB,IAAI;QACnB,IAAM,OAAO,GAAc,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACvE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,8CAAY,GAAZ,UAAa,IAAS;QAClB,IAAM,OAAO,GAAc,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACvE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,iDAAe,GAAf,UAAgB,IAAS;QACT,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;IAC5E,CAAC;IACD,8CAAY,GAAZ;QAAA,mBASC;QARG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,SAAS,CAChC,cAAI;YACA,IAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC;gBACpB,OAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAG,IAAI,QAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,oBAAoB,CAAC,IAAI,OAAI,CAAC,UAAU,CAAC,EAAhE,CAAgE,CAAC,CAAC;aAC5G;YACD,6BAA6B;YAC7B,OAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACf,CAAC;IAED,4CAAU,GAAV;QAAA,mBAMC;QALG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;aACvB,SAAS,CACN,cAAI;YACA,OAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;IACf,CAAC;IAED,mDAAiB,GAAjB;QAAA,mBAKC;QAJG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAClD,cAAI;YACA,OAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,6CAAW,GAAX;QAAA,mBAKC;QAJG,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,SAAS,CACzC,cAAI;YACA,OAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,0CAAQ,GAAR;QAAA,mBAeC;QAdG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE;YACjC,OAAO;SACV;QACD,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;aACtD,SAAS,CACN,cAAI;YACA,OAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,2BAA2B,CAAC,EAAE,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACpH,IAAI,OAAI,CAAC,UAAU,KAAK,MAAM,EAAE;gBAC5B,OAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;aAC3C;iBAAM;gBACH,OAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;aAC9C;QACL,CAAC,CAAC,CAAC;IACf,CAAC;IAED,8CAAY,GAAZ;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,sCAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE;YAC1C,GAAG,EAAE,0BAA0B;YAC/B,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,IAAI;YACf,aAAa,EAAE,SAAS;YACxB,qBAAqB,EAAE,IAAI;YAC3B,IAAI,EAAE;gBACF,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,UAAU,IAAI;oBAC/B,IAAM,YAAY,GAAG,uDAAsB,CAAC,yCAAyC,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,oBAAoB,CAAC,GAAG,WAAW,CAAC,CAAC;oBACpJ,IAAM,KAAK,GAAG,IAAI,CAAC;oBACnB,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,CAAC;wBAC9C,CAAC,CAAC,cAAc,EAAE,CAAC;wBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;wBACpB,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAC3B,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;oBAE9C,IAAI,IAAI,EAAE;wBACN,IAAI,QAAM,GAAG,IAAI,UAAU,EAAE,CAAC;wBAC9B,QAAM,CAAC,MAAM,GAAG,UAAC,CAAC;4BACd,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,QAAM,CAAC,MAAM,EAAC,CAAC,CAAC;wBAChE,CAAC,CAAC;wBACF,QAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;qBAC9B;gBACL,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,IAAI;oBACjC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,OAAY;oBACzC,IAAI,IAAI,EAAE;wBACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;qBAC9B;gBACL,CAAC,CAAC,CAAC;YACP,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;;gBAtKqB,oEAAgB;gBACjB,wDAAQ;gBACT,sDAAM;gBACD,0DAAW;gBAChB,wDAAa;gBACH,iFAAgB;gBAClB,6EAAc;gBAClB,6EAAU;gBACP,2EAAa;gBAChB,sEAAU;gBAEC,4FAAqB;;IAbZ;QAA3C,+DAAS,CAAC,cAAc,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;wEAAe,wDAAU;iEAAC;IArB5D,uBAAuB;QAPnC,+DAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;YAC/B,+QAA+C;YAE/C,SAAS,EAAE,CAAC,wDAAQ,CAAC;;SACxB,CAAC;+EAyBwB,oEAAgB;YACjB,wDAAQ;YACT,sDAAM;YACD,0DAAW;YAChB,wDAAa;YACH,iFAAgB;YAClB,6EAAc;YAClB,6EAAU;YACP,2EAAa;YAChB,sEAAU;YAEC,4FAAqB;OAlC/C,uBAAuB,CAmMnC;IAAD,8BAAC;CAAA;AAnMmC;;;;;;;;;;;;;ACvBpC;AAAe,kHAAmD,qBAAqB,GAAG,UAAU,iBAAiB,qCAAqC,sBAAsB,kBAAkB,gBAAgB,GAAG,oDAAoD,2CAA2C,uBAAuB,eAAe,GAAG,6CAA6C,usD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnU;AAC9B;AACoC;AACtB;AACd;AACY;AAE2B;AACV;AACI;AACN;AACsB;AAEd;AACL;AACR;AAC1B;AAQrC;IA0BI,+BACW,SAA2B,EAC3B,QAAkB,EACjB,MAAc,EACd,KAAqB,EACrB,WAAwB,EACxB,MAAqB,EACrB,eAAiC,EACjC,cAA8B,EAC9B,aAA4B,EAC5B,WAAwB,EACxB,UAAsB,EACtB,UAAsB,EACtB,qBAA4C;QAbxD,mBAmBC;QAlBU,cAAS,GAAT,SAAS,CAAkB;QAC3B,aAAQ,GAAR,QAAQ,CAAU;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,oBAAe,GAAf,eAAe,CAAkB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAY;QACtB,eAAU,GAAV,UAAU,CAAY;QACtB,0BAAqB,GAArB,qBAAqB,CAAuB;QA/BxD,iBAAY,GAAG,IAAI,CAAC;QACpB,kBAAa,GAAG,EAAE,CAAC;QACnB,iBAAY,GAAQ,EAAE,CAAC;QACvB,oBAAe,GAAG,KAAK,CAAC;QACxB,iBAAY,GAAG,KAAK,CAAC;QAErB,eAAU,GAAe;YACrB,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAC;YAC7B,EAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAC;SAC/B,CAAC;QACF,qBAAgB,GAAG;YACf,eAAe,EAAE,YAAY;YAC7B,cAAc,EAAE,WAAW;SAC9B,CAAC;QACF,qBAAgB,GAAG,KAAK,CAAC;QACzB,qBAAgB,GAAG,KAAK,CAAC;QAEjB,WAAM,GAAG,sEAAW,CAAC,MAAM,CAAC;QAgBhC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,SAAS,CAAC,WAAC,IAAI,cAAI,CAAC,SAAS,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;QACxE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,gBAAM;YAChC,OAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sBAAI,kDAAe;aAAnB;YACI,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;QAC1C,CAAC;;;OAAA;IAED,wCAAQ,GAAR;QACI,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,EAAE;YACvD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC;SACnC;aAAM;YACH,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC;SACtC;IACL,CAAC;IAED,wCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YACxC,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;YACpC,UAAU,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;YACtC,gBAAgB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC;YAClD,cAAc,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnE,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;YAChC,kBAAkB,EAAC,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YACnC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YACxB,cAAc,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;YAC9C,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC1D,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,CAAC;QACjE,UAAU,CAAC;YACP,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,KAAgB,UAAqB,EAArB,SAAI,CAAC,QAAQ,CAAC,OAAO,EAArB,cAAqB,EAArB,IAAqB,EAAE;YAAlC,IAAI,GAAG;YACR,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;SAC1B;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,0CAAU,GAAV;QAAA,mBAOC;QANG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;aACvB,SAAS,CACN,cAAI;YACA,OAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,OAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACf,CAAC;IACO,0CAAU,GAAlB,UAAmB,IAAI;QACnB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QACzC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1B,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC;SAC1B,CAAC,CAAC;IACP,CAAC;IACO,0CAAU,GAAlB,UAAmB,IAAI;QACnB,IAAM,OAAO,GAAc,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACrE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,4CAAY,GAAZ,UAAa,IAAS;QAClB,IAAM,OAAO,GAAc,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACrE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,+CAAe,GAAf,UAAgB,IAAS;QACT,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;IAC1E,CAAC;IACD,uCAAO,GAAP,UAAQ,UAAU;QAAlB,mBAKC;QAJG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;YACnD,OAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,4CAAY,GAAZ;QAAA,mBASC;QARG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,SAAS,CACnC,cAAI;YACA,IAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC;gBACpB,OAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAG,IAAI,QAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,oBAAoB,CAAC,IAAI,OAAI,CAAC,UAAU,CAAC,EAAhE,CAAgE,CAAC,CAAC;aAC5G;YACD,6BAA6B;YAC7B,OAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACX,CAAC;IACD,iDAAiB,GAAjB;QAAA,mBAMC;QALG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAClD,cAAI;YACA,OAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,OAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACX,CAAC;IACD,2CAAW,GAAX;QAAA,mBAMC;QALG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CACxC,cAAI;YACA,OAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACX,CAAC;IACD,wCAAQ,GAAR;QAAA,mBAYC;QAXG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YAC/B,OAAO;SACV;QAED,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;aACnD,SAAS,CACN,cAAI;YACA,OAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,2BAA2B,CAAC,EAAE,OAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACpH,OAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACf,CAAC;IAED,4CAAY,GAAZ;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,sCAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE;YACjE,GAAG,EAAE,0BAA0B;YAC/B,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,IAAI;YACf,aAAa,EAAE,SAAS;YACxB,qBAAqB,EAAE,IAAI;YAC3B,IAAI,EAAE;gBACF,IAAM,KAAK,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAE,KAAK,CAAC;gBACpJ,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,UAAU,IAAI;oBAAd,mBAuBpB;oBAtBG,IAAM,YAAY,GAAG,uDAAsB,CAAC,6DAA6D,CAAC,CAAC;oBAC3G,IAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,EAAC;wBAC3B,IAAI,CAAC,mBAAmB,EAAE,CAAC;wBAC3B,IAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;4BACtB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;yBACpC;qBACJ;oBACD,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,CAAC;wBAC9C,CAAC,CAAC,cAAc,EAAE,CAAC;wBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;wBACpB,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAC3B,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;oBAC9C,IAAI,IAAI,EAAE;wBACN,IAAI,QAAM,GAAG,IAAI,UAAU,EAAE,CAAC;wBAC9B,QAAM,CAAC,MAAM,GAAG,UAAC,CAAC;4BACd,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,QAAM,CAAC,MAAM,EAAC,CAAC,CAAC;4BAC1D,OAAI,CAAC,YAAY,GAAG,KAAK,CAAC;wBAC9B,CAAC,CAAC;wBACF,QAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;qBAC9B;gBACL,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,IAAI;oBACjC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;gBACrD,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,OAAY;oBACzC,IAAI,IAAI,EAAE;wBACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;qBAC9B;gBACL,CAAC,CAAC,CAAC;YACP,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAED,mDAAmB,GAAnB;QACI,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;QACjD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAE,KAAK,CAAC;IACtL,CAAC;;gBA3LqB,oEAAgB;gBACjB,wDAAQ;gBACT,sDAAM;gBACP,8DAAc;gBACR,0DAAW;gBAChB,wDAAa;gBACJ,iFAAgB;gBACjB,8EAAc;gBACf,2EAAa;gBACf,uEAAW;gBACZ,6EAAU;gBACV,sEAAU;gBACC,4FAAqB;;IAfZ;QAA3C,+DAAS,CAAC,cAAc,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;wEAAe,wDAAU;+DAAC;IAxB5D,qBAAqB;QANjC,+DAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;YAC7B,yQAA6C;;SAEhD,CAAC;+EA6BwB,oEAAgB;YACjB,wDAAQ;YACT,sDAAM;YACP,8DAAc;YACR,0DAAW;YAChB,wDAAa;YACJ,iFAAgB;YACjB,8EAAc;YACf,2EAAa;YACf,uEAAW;YACZ,6EAAU;YACV,sEAAU;YACC,4FAAqB;OAvC/C,qBAAqB,CAuNjC;IAAD,4BAAC;CAAA;AAvNiC;;;;;;;;;;;;;ACxBlC;AAAe,6GAA8C,mO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlB;AACqC;AACZ;AAC3B;AAEc;AAClB;AACM;AAC0C;AACV;AACN;AACE;AACR;AAO/D;IAuBE,wCACS,SAA2B,EAC3B,QAAkB,EACjB,MAAc,EACd,WAAwB,EACxB,MAAqB,EACrB,gBAAkC,EAClC,cAA8B,EAC9B,aAA4B,EAC5B,UAAsB;IAC9B,0DAA0D;IAClD,qBAA4C;QAXtD,mBAcC;QAbQ,cAAS,GAAT,SAAS,CAAkB;QAC3B,aAAQ,GAAR,QAAQ,CAAU;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,eAAU,GAAV,UAAU,CAAY;QAEtB,0BAAqB,GAArB,qBAAqB,CAAuB;QA/BtD,eAAU,GAAe;YACvB,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;YAC9B,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;SAChC,CAAC;QAIF,kBAAa,GAAG,EAAE,CAAC;QACnB,iBAAY,GAAQ,EAAE,CAAC;QACvB,oBAAe,GAAG,KAAK,CAAC;QAExB,iBAAY,GAAG,KAAK,CAAC;QACrB,qBAAgB,GAAG;YACjB,eAAe,EAAE,YAAY;YAC7B,cAAc,EAAE,WAAW;SAC5B,CAAC;QACF,qBAAgB,GAAG,KAAK,CAAC;QACzB,qBAAgB,GAAG,KAAK,CAAC;QAgBvB,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,SAAS,CAAC,WAAC,IAAI,cAAI,CAAC,SAAS,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAC1E,CAAC;IACD,sBAAI,2DAAe;aAAnB;YACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;QAC1C,CAAC;;;OAAA;IACD,iDAAQ,GAAR;QACE,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,uBAAuB,EAAE;YAC/C,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC;SACpC;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;QAClC,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,iDAAQ,GAAR;QACE,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/C,IAAI,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,MAAM,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,WAAW,EAAE,CAAC,IAAI,CAAC;YACnB,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,gBAAgB,EAAE,CAAC,IAAI,CAAC;YACxB,cAAc,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,MAAM,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,kBAAkB,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YACrC,cAAc,EAAE,CAAC,IAAI,CAAC;YACtB,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;QACH,UAAU,CAAC;YACT,uBAAuB;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,qDAAY,GAAZ;QAAA,mBAMC;QALC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,SAAS,CACtC,cAAI;YACF,OAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAU,GAAV,UAAW,MAAM;QAAjB,mBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAC1C,cAAI;YACF,OAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0DAAiB,GAAjB;QAAA,mBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,SAAS,CACpD,cAAI;YACF,OAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oDAAW,GAAX;QAAA,mBAKC;QAJC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,SAAS,CAC3C,cAAI;YACF,OAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,iDAAQ,GAAR;QACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAC1C,yCAAyC;QACzC,YAAY;QACZ,IAAI;QACJ,8DAA8D;QAC9D,gBAAgB;QAChB,gBAAgB;QAChB,6HAA6H;QAC7H,0CAA0C;QAC1C,mDAAmD;QACnD,iBAAiB;QACjB,sDAAsD;QACtD,UAAU;QACV,UAAU;IACZ,CAAC;IAED,qDAAY,GAAZ;QACE,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,qCAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE;YAC5C,GAAG,EAAE,0BAA0B;YAC/B,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,IAAI;YACf,aAAa,EAAE,SAAS;YACxB,qBAAqB,EAAE,IAAI;YAC3B,IAAI,EAAE;gBACJ,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,UAAU,IAAI;oBACjC,IAAM,YAAY,GAAG,sDAAsB,CAAC,yCAAyC,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,oBAAoB,CAAC,GAAG,WAAW,CAAC,CAAC;oBACpJ,IAAM,KAAK,GAAG,IAAI,CAAC;oBACnB,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,CAAC;wBAChD,CAAC,CAAC,cAAc,EAAE,CAAC;wBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;wBACpB,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;oBAE9C,IAAI,IAAI,EAAE;wBACR,IAAI,QAAM,GAAG,IAAI,UAAU,EAAE,CAAC;wBAC9B,QAAM,CAAC,MAAM,GAAG,UAAC,CAAC;4BAChB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,QAAM,CAAC,MAAM,EAAE,CAAC,CAAC;wBAChE,CAAC,CAAC;wBACF,QAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;qBAC5B;gBACH,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,IAAI;oBACnC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,OAAY;oBAC3C,IAAI,IAAI,EAAE;wBACR,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;qBAC5B;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IACL,CAAC;;gBA5ImB,oEAAgB;gBACjB,wDAAQ;gBACT,sDAAM;gBACD,0DAAW;gBAChB,wDAAa;gBACH,wFAAgB;gBAClB,qFAAc;gBACf,mFAAa;gBAChB,6EAAU;gBAEC,kGAAqB;;IAjC7C;QAAR,2DAAK,EAAE;;oEAAc;IAoBwB;QAA7C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;wEAAe,wDAAU;wEAAC;IArB5D,8BAA8B;QAL1C,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,uSAAuD;;SAExD,CAAC;+EAyBoB,oEAAgB;YACjB,wDAAQ;YACT,sDAAM;YACD,0DAAW;YAChB,wDAAa;YACH,wFAAgB;YAClB,qFAAc;YACf,mFAAa;YAChB,6EAAU;YAEC,kGAAqB;OAlC3C,8BAA8B,CA0K1C;IAAD,qCAAC;CAAA;AA1K0C;;;;;;;;;;;;;ACnB3C;AAAe,oGAAqC,kBAAkB,GAAG,6CAA6C,+xB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3D;AACX;AACK;AACS;AACrB;AAEiD;AAGnB;AAEjB;AACzB;AACE;AAEP;AACI;AACoD;AACzC;AAOvC;IAgBI,gCACW,SAA2B,EAC1B,eAAgC,EAChC,IAAgB,EAChB,MAAqB,EACrB,MAAc,EACd,gBAAkC,EAClC,qBAA4C;QAPxD,iBAWC;QAVU,cAAS,GAAT,SAAS,CAAkB;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,0BAAqB,GAArB,qBAAqB,CAAuB;QApBxD,cAAS,GAAiB,IAAI,4CAAO,EAAE,CAAC;QACxC,cAAS,GAAQ,EAAE,CAAC;QAIpB,cAAS,GAAG,EAAE,CAAC;QAEf,mBAAc,GAAmB;YAC7B,IAAI,EAAE,KAAK;YACX,kBAAkB,EAAE,gBAAgB;SACvC,CAAC;QACM,WAAM,GAAG,qEAAW,CAAC,MAAM,CAAC;QAYhC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,SAAS,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAC5E,CAAC;IAED,yCAAQ,GAAR;QACI,IAAG,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,gBAAgB,EAAC;YACpC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;SACvC;aAAM;YACH,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC;YACvC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAChC;QACD,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,8CAAa,GAAb;QAAA,iBAuFC;QAtFG,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG;YACb,UAAU,EAAE,cAAc;YAC1B,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,uBAAuB;YAC3D,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE,IAAI;YAChB,GAAG,EAAE,0BAA0B;YAC/B,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,CAAC,CAAC,CAAC;YACV,OAAO,EAAE;gBACL;oBACI,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAChB;gBACD;oBACI,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAChB;gBACD;oBACI,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAChB;gBACD;oBACI,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAChB;aACJ;YACD,OAAO,EAAE,CAAC;oBACN,MAAM,EAAE,KAAK;oBACb,SAAS,EAAE,4BAA4B;oBACvC,MAAM,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM;wBACjC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAC5B,CAAC;iBACJ,EAAE;oBACC,MAAM,EAAE,OAAO;oBACf,SAAS,EAAE,4BAA4B;oBACvC,MAAM,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM;wBACjC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBAC7B,CAAC;iBACJ,EAAE;oBACC,MAAM,EAAE,KAAK;oBACb,SAAS,EAAE,4BAA4B;oBACvC,MAAM,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM;wBACjC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAC5B,CAAC;iBACJ,CAAC;YACF,QAAQ,EAAE;gBACN,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC;gBACrE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,wBAAwB,CAAC;gBACzD,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,6BAA6B,CAAC;gBACnE,SAAS,EAAE,EAAE;gBACb,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC;gBACvE,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iCAAiC,CAAC;gBAC3E,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC;gBACrE,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kCAAkC,CAAC;gBAC7E,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC;gBACrE,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC;gBACvE,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC;gBACnF,WAAW,EAAE;oBACT,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC;oBACrE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kCAAkC,CAAC;oBACnE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kCAAkC,CAAC;oBACnE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,sCAAsC,CAAC;iBAC9E;gBACD,OAAO,EAAE;oBACL,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uCAAuC,CAAC;oBACjF,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,wCAAwC,CAAC;iBACtF;aACJ;YACD,IAAI,EAAE,UAAC,oBAAyB,EAAE,QAAQ;gBACtC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAqB,KAAI,CAAC,MAAM,GAAG,oBAAoB,EAAE,MAAM,CAAC,MAAM,CAAC,oBAAoB,EAAE,EAAC,UAAU,EAAE,KAAI,CAAC,UAAU,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;oBACzJ,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;oBACvC,QAAQ,CAAC;wBACL,YAAY,EAAE,IAAI,CAAC,YAAY;wBAC/B,eAAe,EAAE,IAAI,CAAC,eAAe;wBACrC,IAAI,EAAE,EAAE;qBACX,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACP,CAAC;SACJ,CAAC;IACN,CAAC;IAED,4CAAW,GAAX,UAAY,IAAI;QACZ,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,CAAC;QACpG,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAe,GAAf;QACI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,4CAAW,GAAX;QACI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAaC;QAZG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,UAA0B;YACtD,UAAU,CAAC,OAAO,EAAE,CAAC;YACrB,UAAU,CAAC;gBACP,KAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;gBAEtB,IAAI,KAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC3B,CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;iBACrC;qBAAM;oBACH,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;iBACxC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAc,GAAd,UAAe,EAAE;QAAjB,iBAgBC;QAfG,mDAAI,CAAC,IAAI,CAAC;YACN,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC;YAClD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC;YAC5F,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC;YAC1E,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC;SAC3E,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACX,IAAI,MAAM,CAAC,KAAK,EAAE;gBACd,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;oBAC3C,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,2BAA2B,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBACpH,KAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAkB,GAAlB,UAAmB,SAAS;QACxB,iDAAiD;QACjD,OAAO,EAAE,CAAC;IACd,CAAC;IAED,uCAAM,GAAN,UAAO,MAAM,EAAE,EAAE;QACb,IAAG,MAAM,KAAK,QAAQ,EAAC;YACnB,OAAO,CAAE,GAAG,GAAC,IAAI,CAAC,YAAY,GAAC,SAAS,CAAE,CAAC;SAC9C;aAAM;YACH,OAAO,CAAC,GAAG,GAAC,IAAI,CAAC,YAAY,GAAC,OAAO,EAAE,EAAE,CAAC,CAAC;SAC9C;IACL,CAAC;;gBA1KqB,oEAAgB;gBACT,6DAAe;gBAC1B,+DAAU;gBACR,wDAAa;gBACb,uDAAM;gBACI,kFAAgB;gBACX,2FAAqB;;IArBxD;QADC,+DAAS,CAAC,qEAAkB,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;wEACnC,qEAAkB;6DAAC;IAFrB,sBAAsB;QALlC,+DAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;YAC9B,4QAA8C;;SAEjD,CAAC;+EAkBwB,oEAAgB;YACT,6DAAe;YAC1B,+DAAU;YACR,wDAAa;YACb,uDAAM;YACI,kFAAgB;YACX,2FAAqB;OAvB/C,sBAAsB,CA6LlC;IAAD,6BAAC;CAAA;AA7LkC;;;;;;;;;;;;;ACzBnC;AAAe,6GAA8C,uN;;;;;;;;;;;;;;;;;ACAX;AAOlD;IAEE;IAAgB,CAAC;IAEjB,6CAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG;YACd,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,oBAAoB,EAAC;YACnD,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,qBAAqB,EAAC;YACpD,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,qBAAqB,EAAC;YACpD,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,qBAAqB,EAAC;SACrD,CAAC;IACJ,CAAC;IAXU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,wRAAkD;;SAEnD,CAAC;;OACW,0BAA0B,CAatC;IAAD,iCAAC;CAAA;AAbsC","file":"modules-posts-categorys-categorys-module.js","sourcesContent":["export default \"<section id=\\\"basic-form-layouts\\\">\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isFormLoaded\\\" [formGroup]=\\\"createCategoryForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <h4 class=\\\"card-title\\\">{{'categorys.title1' | translate}}</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\" (click)=\\\"isCollapsedHead1 = !isCollapsedHead1\\\" [attr.aria-expanded]=\\\"!isCollapsedHead1\\\" aria-controls=\\\"collapseBasic\\\">\\r\\n                                    {{'categorys.headings.head1' | translate}}\\r\\n                                    <i class=\\\"fa\\\" [ngClass] = \\\"isCollapsedHead1 ? 'fa-plus' : 'fa-minus'\\\"></i>\\r\\n                                </h4>\\r\\n                                <div class=\\\"row\\\" [collapse]=\\\"isCollapsedHead1\\\" [isAnimated]=\\\"true\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.name.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"name\\\">{{'categorys.create.fields.name' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder1' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.name.errors.required\\\">{{'categorys.create.error_messages.message1' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.parent_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"parent_id\\\">{{'categorys.create.fields.parent' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <ng-select [clearable]=\\\"false\\\" [items]=\\\"listcategorys\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"parent_id\\\" labelForId=\\\"parent_id\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder3' | translate}}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                                    {{item.name}}\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.parent_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.parent_id.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.description.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"description\\\">{{'categorys.create.fields.description' | translate}}&nbsp;\\r\\n                                            </label>\\r\\n                                            <textarea [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.description.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\" id=\\\"description\\\" name=\\\"description\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder2' | translate}}\\\"></textarea>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.description.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.description.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\" (click)=\\\"isCollapsedHead2 = !isCollapsedHead2\\\" [attr.aria-expanded]=\\\"!isCollapsedHead2\\\" aria-controls=\\\"collapseBasic\\\">\\r\\n                                    {{'categorys.headings.head2' | translate}}\\r\\n                                    <i class=\\\"fa\\\" [ngClass] = \\\"isCollapsedHead2 ? 'fa-plus' : 'fa-minus'\\\"></i>\\r\\n                                </h4>\\r\\n                                <div class=\\\"row\\\" [collapse]=\\\"isCollapsedHead2\\\" [isAnimated]=\\\"true\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.page_title.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"page_title\\\">{{'categorys.create.fields.page_title' | translate}}\\r\\n                                            </label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.page_title.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"page_title\\\" id=\\\"page_title\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder7' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.page_title.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.page_title.errors.required\\\">{{'categorys.create.error_messages.message1' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.page_description.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"page_description\\\">{{'categorys.create.fields.page_description' | translate}}\\r\\n                                            </label>\\r\\n                                            <textarea [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.page_description.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"page_description\\\" id=\\\"page_description\\\" name=\\\"page_description\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder8' | translate}}\\\"></textarea>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.page_description.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.page_description.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.url_and_handle.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"url_and_handle\\\">{{'categorys.create.fields.url_and_handle' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.url_and_handle.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"url_and_handle\\\" id=\\\"url_and_handle\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder9' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.url_and_handle.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.url_and_handle.errors.required\\\">{{'categorys.create.error_messages.message3' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"seo\\\">{{'seo.create.fields.meta' | translate}}</label>\\r\\n                                            <ng-select  (add)=\\\"onAddMetaTag($event)\\\" (remove)=\\\"onRemoveMetaTag($event)\\\" [clearable]=\\\"false\\\" [multiple]=\\\"true\\\" [items]=\\\"seoData\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"seo\\\" labelForId=\\\"seo\\\" placeholder=\\\"{{'seo.create.placeholders.placeholder6' | translate}}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                                    {{item.label}}\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"px-2\\\">\\r\\n                                        <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\" formArrayName=\\\"seoData\\\">\\r\\n                                            <table class=\\\"table table-bordered table-hover b4-datatable\\\" id=\\\"variations_table\\\" width=\\\"100%\\\">\\r\\n                                                <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>{{'seo.create.fields.stt' | translate}}</th>\\r\\n                                                    <th >{{'seo.create.fields.meta' | translate}}</th>\\r\\n                                                    <th>{{'seo.create.fields.content' | translate}}</th>\\r\\n                                                </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                <tr  *ngFor=\\\"let seo of createCategoryForm.controls.seoData.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\r\\n                                                    <td>\\r\\n                                                        <label>{{i+1}}</label>\\r\\n                                                    </td>\\r\\n                                                    <td >\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                            <label>{{createCategoryForm.value.seoData[i]['meta']}}</label>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                            <textarea class=\\\"form-control\\\" formControlName=\\\"content\\\" name=\\\"description\\\" placeholder=\\\"{{'seo.create.placeholders.placeholder7' | translate}}\\\"></textarea>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                                </tbody>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.active.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                            <label for=\\\"active\\\">{{'categorys.create.fields.status' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <ng-select [items]=\\\"liststatus\\\" [searchable]=\\\"false\\\" [selectOnTab]=\\\"true\\\" bindValue=\\\"value\\\" formControlName=\\\"active\\\" labelForId=\\\"active\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder4' | translate}}\\\"></ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.active.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.active.errors.required\\\">{{'categorys.create.error_messages.message4' | translate}}</div>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.keyword.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                            <label for=\\\"keyword\\\">{{'categorys.create.fields.keyword' | translate}}\\r\\n                                            </label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.keyword.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"keyword\\\" id=\\\"keyword\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder5' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.keyword.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.keyword.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n                <div class=\\\"card\\\" *ngIf=\\\"moduletype == 'products'\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.specifications.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                            <label for=\\\"specifications\\\">{{'categorys.create.fields.specifications' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <ng-select [items]=\\\"specifications\\\" [multiple]=\\\"true\\\" [searchable]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"indentify\\\" formControlName=\\\"specifications\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder2' | translate}}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                                    {{item.name}}\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.specifications.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.specifications.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.avatar.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                            <label for=\\\"avatar\\\">{{'categorys.create.fields.avatar' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <input formControlName=\\\"avatar\\\" type=\\\"hidden\\\">\\r\\n                                            <div #logodropzone class=\\\"dropzone dz-clickable\\\">\\r\\n                                                <div class=\\\"dz-default dz-message\\\">\\r\\n                                                    <span><strong>{{'categorys.create.placeholders.placeholder10' | translate }}</strong></span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.pages_id.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                            <label for=\\\"pages_id\\\">{{'categorys.create.fields.template' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <ng-select [items]=\\\"listTemplate\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"pages_id\\\" labelForId=\\\"pages_id\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder6' | translate}}\\\"></ng-select>\\r\\n                                            <!--                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.template.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"template\\\" id=\\\"template\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder6' | translate }}\\\" type=\\\"text\\\"/>-->\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.pages_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.pages_id.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-md-12 text-right pt-3\\\">\\r\\n                                        <a [routerLink]=\\\"urlPage\\\" class=\\\"btn btn-cancel mb-0\\\">{{'common.cancel' | translate }}</a>\\r\\n                                        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.create' | translate }}</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</section>\\r\\n\"","export default \"<section id=\\\"basic-form-layouts\\\">\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isFormLoaded\\\" [formGroup]=\\\"editCategoryForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <h4 class=\\\"card-title\\\">{{'categorys.title2' | translate}}</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\" (click)=\\\"isCollapsedHead1 = !isCollapsedHead1\\\" [attr.aria-expanded]=\\\"!isCollapsedHead1\\\" aria-controls=\\\"collapseBasic\\\">\\r\\n                                    {{'categorys.headings.head1' | translate}}\\r\\n                                    <i class=\\\"fa\\\" [ngClass] = \\\"isCollapsedHead1 ? 'fa-plus' : 'fa-minus'\\\"></i>\\r\\n                                </h4>\\r\\n                                <div class=\\\"row\\\" [collapse]=\\\"isCollapsedHead1\\\" [isAnimated]=\\\"true\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.name.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"name\\\">{{'categorys.create.fields.name' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder1' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.name.errors.required\\\">{{'categorys.create.error_messages.message1' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.parent_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"parent_id\\\">{{'categorys.create.fields.parent' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <ng-select [clearable]=\\\"false\\\" [items]=\\\"listcategorys\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"parent_id\\\" labelForId=\\\"parent_id\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder3' | translate}}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                                    {{item.name}}\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.parent_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.parent_id.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.description.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"description\\\">{{'categorys.create.fields.description' | translate}}&nbsp;\\r\\n                                            </label>\\r\\n                                            <textarea [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.description.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\" id=\\\"description\\\" name=\\\"description\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder2' | translate}}\\\"></textarea>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.description.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.description.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <h4 class=\\\"form-section\\\" (click)=\\\"isCollapsedHead2 = !isCollapsedHead2\\\" [attr.aria-expanded]=\\\"!isCollapsedHead2\\\" aria-controls=\\\"collapseBasic\\\">\\r\\n                                    {{'categorys.headings.head2' | translate}}\\r\\n                                    <i class=\\\"fa\\\" [ngClass] = \\\"isCollapsedHead2 ? 'fa-plus' : 'fa-minus'\\\"></i>\\r\\n                                </h4>\\r\\n                                <div class=\\\"row\\\" [collapse]=\\\"isCollapsedHead2\\\" [isAnimated]=\\\"true\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.page_title.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"page_title\\\">{{'categorys.create.fields.page_title' | translate}}\\r\\n                                            </label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.page_title.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"page_title\\\" id=\\\"page_title\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder7' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.page_title.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.page_title.errors.required\\\">{{'categorys.create.error_messages.message1' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.page_description.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"page_description\\\">{{'categorys.create.fields.page_description' | translate}}\\r\\n                                            </label>\\r\\n                                            <textarea [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.page_description.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"page_description\\\" id=\\\"page_description\\\" name=\\\"page_description\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder8' | translate}}\\\"></textarea>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.page_description.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.page_description.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.url_and_handle.errors }\\\" class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"url_and_handle\\\">{{'categorys.create.fields.url_and_handle' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.url_and_handle.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"url_and_handle\\\" id=\\\"url_and_handle\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder9' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.url_and_handle.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.url_and_handle.errors.required\\\">{{'categorys.create.error_messages.message3' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"seo\\\">{{'seo.create.fields.meta' | translate}}</label>\\r\\n                                            <ng-select (add)=\\\"onAddMetaTag($event)\\\" (remove)=\\\"onRemoveMetaTag($event)\\\" [clearable]=\\\"false\\\" [multiple]=\\\"true\\\" [items]=\\\"seoData\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"seo\\\" labelForId=\\\"seo\\\" placeholder=\\\"{{'seo.create.placeholders.placeholder6' | translate}}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                                    {{item.label}}\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"px-2\\\">\\r\\n                                        <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\" formArrayName=\\\"seoData\\\">\\r\\n                                            <table class=\\\"table table-bordered table-hover b4-datatable\\\" id=\\\"variations_table\\\" width=\\\"100%\\\">\\r\\n                                                <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>{{'seo.create.fields.stt' | translate}}</th>\\r\\n                                                    <th >{{'seo.create.fields.meta' | translate}}</th>\\r\\n                                                    <th>{{'seo.create.fields.content' | translate}}</th>\\r\\n                                                </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                <tr  *ngFor=\\\"let seo of editCategoryForm.controls.seoData.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\r\\n                                                    <td>\\r\\n                                                        <label>{{i+1}}</label>\\r\\n                                                    </td>\\r\\n                                                    <td >\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                            <label>{{editCategoryForm.value.seoData[i]['meta']}}</label>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                            <textarea class=\\\"form-control\\\" formControlName=\\\"content\\\"  name=\\\"description\\\" placeholder=\\\"{{'seo.create.placeholders.placeholder7' | translate}}\\\"></textarea>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                                </tbody>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.active.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                            <label for=\\\"active\\\">{{'categorys.create.fields.status' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <ng-select [items]=\\\"liststatus\\\" [searchable]=\\\"false\\\" [selectOnTab]=\\\"true\\\" bindValue=\\\"value\\\" formControlName=\\\"active\\\" labelForId=\\\"active\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder4' | translate}}\\\"></ng-select>\\r\\n                                            <!--                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.status.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"status\\\" id=\\\"status\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder2' | translate }}\\\" type=\\\"text\\\"/>-->\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.active.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.active.errors.required\\\">{{'categorys.create.error_messages.message4' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.keyword.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                            <label for=\\\"keyword\\\">{{'categorys.create.fields.keyword' | translate}}\\r\\n                                            </label>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.keyword.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"keyword\\\" id=\\\"keyword\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder5' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.keyword.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.keyword.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n                <div class=\\\"card\\\" *ngIf=\\\"moduletype == 'products'\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.specifications.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                            <label for=\\\"specifications\\\">{{'categorys.create.fields.specifications' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <ng-select [items]=\\\"specifications\\\" [multiple]=\\\"true\\\" [searchable]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"indentify\\\" formControlName=\\\"specifications\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder2' | translate}}\\\">\\r\\n                                                <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                                    {{item.name}}\\r\\n                                                </ng-template>\\r\\n                                            </ng-select>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.specifications.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.specifications.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.avatar.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                            <label for=\\\"avatar\\\">{{'categorys.create.fields.avatar' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <input formControlName=\\\"avatar\\\" type=\\\"hidden\\\">\\r\\n                                            <div #logodropzone class=\\\"dropzone dz-clickable\\\">\\r\\n                                                <div *ngIf=\\\"isLogoLoaded && category.avatar\\\" class=\\\"dz-preview dz-image-preview\\\">\\r\\n                                                    <div class=\\\"dz-image\\\">\\r\\n                                                        <img height=\\\"100\\\" src=\\\"{{apiUrl}}/uploads/project/{{category.avatar}}\\\" width=\\\"100\\\"/>\\r\\n                                                    </div>\\r\\n                                                    <a (click)=\\\"removeDropzoneImage()\\\" class=\\\"btn btn-sm btn-block\\\">{{ 'common.remove_file' | translate }}</a>\\r\\n                                                </div>\\r\\n                                                <!-- <div class=\\\"dz-default dz-message\\\">\\r\\n                                                    <span><strong>{{'categorys.create.placeholders.placeholder10' | translate }}</strong></span>\\r\\n                                                </div> -->\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.pages_id.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                            <label for=\\\"pages_id\\\">{{'categorys.create.fields.template' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                            </label>\\r\\n                                            <ng-select [items]=\\\"listTemplate\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"pages_id\\\" labelForId=\\\"pages_id\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder6' | translate}}\\\"></ng-select>\\r\\n                                            <!--                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.template.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"template\\\" id=\\\"template\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder6' | translate }}\\\" type=\\\"text\\\"/>-->\\r\\n                                            <div *ngIf=\\\"isFormSubmitted && categoryControl.pages_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"categoryControl.pages_id.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-3\\\">\\r\\n                            <div class=\\\"form-body\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-md-12 text-right pt-3\\\">\\r\\n                                        <a [routerLink]=\\\"urlPage\\\" class=\\\"btn btn-cancel mb-0\\\">{{'common.cancel' | translate }}</a>\\r\\n                                        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.create' | translate }}</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</section>\\r\\n\"","export default \"<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isFormLoaded\\\" [formGroup]=\\\"createCategoryForm\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header\\\">\\r\\n                  <h4 class=\\\"card-title\\\">{{'categorys.title1' | translate}}</h4>\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                  <div class=\\\"px-3\\\">\\r\\n                      <div class=\\\"form-body\\\">\\r\\n                          <h4 class=\\\"form-section\\\" (click)=\\\"isCollapsedHead1 = !isCollapsedHead1\\\" [attr.aria-expanded]=\\\"!isCollapsedHead1\\\" aria-controls=\\\"collapseBasic\\\">\\r\\n                              {{'categorys.headings.head1' | translate}}\\r\\n                              <i class=\\\"fa\\\" [ngClass] = \\\"isCollapsedHead1 ? 'fa-plus' : 'fa-minus'\\\"></i>\\r\\n                          </h4>\\r\\n                          <div class=\\\"row\\\" [collapse]=\\\"isCollapsedHead1\\\" [isAnimated]=\\\"true\\\">\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                  <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.name.errors }\\\" class=\\\"form-group\\\">\\r\\n                                      <label for=\\\"name\\\">{{'categorys.create.fields.name' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                      </label>\\r\\n                                      <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder1' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                      <div *ngIf=\\\"isFormSubmitted && categoryControl.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                          <div *ngIf=\\\"categoryControl.name.errors.required\\\">{{'categorys.create.error_messages.message1' | translate}}</div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                  <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.parent_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                                      <label for=\\\"parent_id\\\">{{'categorys.create.fields.parent' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                      </label>\\r\\n                                      <ng-select [clearable]=\\\"false\\\" [items]=\\\"listcategorys\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"parent_id\\\" labelForId=\\\"parent_id\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder3' | translate}}\\\">\\r\\n                                          <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                              {{item.name}}\\r\\n                                          </ng-template>\\r\\n                                      </ng-select>\\r\\n                                      <div *ngIf=\\\"isFormSubmitted && categoryControl.parent_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                          <div *ngIf=\\\"categoryControl.parent_id.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                  <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.description.errors }\\\" class=\\\"form-group\\\">\\r\\n                                      <label for=\\\"description\\\">{{'categorys.create.fields.description' | translate}}&nbsp;\\r\\n                                      </label>\\r\\n                                      <textarea [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.description.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\" id=\\\"description\\\" name=\\\"description\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder2' | translate}}\\\"></textarea>\\r\\n                                      <div *ngIf=\\\"isFormSubmitted && categoryControl.description.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                          <div *ngIf=\\\"categoryControl.description.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                  <div class=\\\"px-3\\\">\\r\\n                      <div class=\\\"form-body\\\">\\r\\n                          <h4 class=\\\"form-section\\\" (click)=\\\"isCollapsedHead2 = !isCollapsedHead2\\\" [attr.aria-expanded]=\\\"!isCollapsedHead2\\\" aria-controls=\\\"collapseBasic\\\">\\r\\n                              {{'categorys.headings.head2' | translate}}\\r\\n                              <i class=\\\"fa\\\" [ngClass] = \\\"isCollapsedHead2 ? 'fa-plus' : 'fa-minus'\\\"></i>\\r\\n                          </h4>\\r\\n                          <div class=\\\"row\\\" [collapse]=\\\"isCollapsedHead2\\\" [isAnimated]=\\\"true\\\">\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                  <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.page_title.errors }\\\" class=\\\"form-group\\\">\\r\\n                                      <label for=\\\"page_title\\\">{{'categorys.create.fields.page_title' | translate}}\\r\\n                                      </label>\\r\\n                                      <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.page_title.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"page_title\\\" id=\\\"page_title\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder7' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                      <div *ngIf=\\\"isFormSubmitted && categoryControl.page_title.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                          <div *ngIf=\\\"categoryControl.page_title.errors.required\\\">{{'categorys.create.error_messages.message1' | translate}}</div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                  <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.page_description.errors }\\\" class=\\\"form-group\\\">\\r\\n                                      <label for=\\\"page_description\\\">{{'categorys.create.fields.page_description' | translate}}\\r\\n                                      </label>\\r\\n                                      <textarea [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.page_description.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"page_description\\\" id=\\\"page_description\\\" name=\\\"page_description\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder8' | translate}}\\\"></textarea>\\r\\n                                      <div *ngIf=\\\"isFormSubmitted && categoryControl.page_description.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                          <div *ngIf=\\\"categoryControl.page_description.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                  <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.url_and_handle.errors }\\\" class=\\\"form-group\\\">\\r\\n                                      <label for=\\\"url_and_handle\\\">{{'categorys.create.fields.url_and_handle' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                      </label>\\r\\n                                      <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.url_and_handle.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"url_and_handle\\\" id=\\\"url_and_handle\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder9' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                      <div *ngIf=\\\"isFormSubmitted && categoryControl.url_and_handle.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                          <div *ngIf=\\\"categoryControl.url_and_handle.errors.required\\\">{{'categorys.create.error_messages.message3' | translate}}</div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                  <div class=\\\"px-3\\\">\\r\\n                      <div class=\\\"form-body\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                  <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.active.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                      <label for=\\\"active\\\">{{'categorys.create.fields.status' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                      </label>\\r\\n                                      <ng-select [items]=\\\"liststatus\\\" [searchable]=\\\"false\\\" [selectOnTab]=\\\"true\\\" bindValue=\\\"value\\\" formControlName=\\\"active\\\" labelForId=\\\"active\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder4' | translate}}\\\"></ng-select>\\r\\n<!--                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.status.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"status\\\" id=\\\"status\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder2' | translate }}\\\" type=\\\"text\\\"/>-->\\r\\n                                      <div *ngIf=\\\"isFormSubmitted && categoryControl.active.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                          <div *ngIf=\\\"categoryControl.active.errors.required\\\">{{'categorys.create.error_messages.message4' | translate}}</div>\\r\\n\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                  <div class=\\\"px-3\\\">\\r\\n                      <div class=\\\"form-body\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                  <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.keyword.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                      <label for=\\\"keyword\\\">{{'categorys.create.fields.keyword' | translate}}\\r\\n                                      </label>\\r\\n                                      <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.keyword.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"keyword\\\" id=\\\"keyword\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder5' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                      <div *ngIf=\\\"isFormSubmitted && categoryControl.keyword.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                          <div *ngIf=\\\"categoryControl.keyword.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"card\\\" *ngIf=\\\"moduletype == 'products'\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                  <div class=\\\"px-3\\\">\\r\\n                      <div class=\\\"form-body\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                  <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.specifications.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                      <label for=\\\"specifications\\\">{{'categorys.create.fields.specifications' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                      </label>\\r\\n                                      <ng-select [items]=\\\"specifications\\\" [multiple]=\\\"true\\\" [searchable]=\\\"true\\\" bindLabel=\\\"indentify\\\" bindValue=\\\"id\\\" formControlName=\\\"specifications\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder2' | translate}}\\\">\\r\\n                                          <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                              {{item.indentify}}\\r\\n                                          </ng-template>\\r\\n                                      </ng-select>\\r\\n                                      <div *ngIf=\\\"isFormSubmitted && categoryControl.specifications.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                          <div *ngIf=\\\"categoryControl.specifications.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                  <div class=\\\"px-3\\\">\\r\\n                      <div class=\\\"form-body\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                  <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.avatar.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                      <label for=\\\"avatar\\\">{{'categorys.create.fields.avatar' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                      </label>\\r\\n                                      <input formControlName=\\\"avatar\\\" type=\\\"hidden\\\">\\r\\n                                      <div #logodropzone class=\\\"dropzone dz-clickable\\\">\\r\\n                                          <div class=\\\"dz-default dz-message\\\">\\r\\n                                              <span><strong>{{'categorys.create.placeholders.placeholder10' | translate }}</strong></span>\\r\\n                                          </div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                  <div class=\\\"px-3\\\">\\r\\n                      <div class=\\\"form-body\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                  <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.pages_id.errors }\\\" class=\\\"form-group mg-t-1rem\\\">\\r\\n                                      <label for=\\\"pages_id\\\">{{'categorys.create.fields.template' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                                      </label>\\r\\n                                      <ng-select [items]=\\\"listTemplate\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"pages_id\\\" labelForId=\\\"pages_id\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder6' | translate}}\\\"></ng-select>\\r\\n                                      <!--                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && categoryControl.template.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"template\\\" id=\\\"template\\\" placeholder=\\\"{{'categorys.create.placeholders.placeholder6' | translate }}\\\" type=\\\"text\\\"/>-->\\r\\n                                      <div *ngIf=\\\"isFormSubmitted && categoryControl.pages_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                          <div *ngIf=\\\"categoryControl.pages_id.errors.required\\\">{{'categorys.create.error_messages.message2' | translate}}</div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                  <div class=\\\"px-3\\\">\\r\\n                      <div class=\\\"form-body\\\">\\r\\n                          <div class=\\\"row mb-3\\\">\\r\\n                              <div class=\\\"col-md-12 text-right pt-3\\\">\\r\\n                                  <a [routerLink]=\\\"urlPage\\\" class=\\\"btn btn-cancel mb-0\\\">{{'common.cancel' | translate }}</a>\\r\\n                                  <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.create' | translate }}</button>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</form>\"","export default \"<section class=\\\"hide_empty_message\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card pl-2 pr-2\\\">\\r\\n                <div class=\\\"card-header pl-0 pr-0 border-bottom\\\">\\r\\n                    <h4 class=\\\"main-title mt-2\\\"><span>{{'categorys.title' | translate}}</span></h4>\\r\\n                    <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'categorys_create']\\\" class=\\\"card-buttons\\\">\\r\\n                        <a [routerLink]=\\\"getUrl('create', '')\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'common.create' | translate}}\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\r\\n<!--                    [routerLink]=\\\"['/postscategory/create']\\\"-->\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-content pt-3 pb-3\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                                    <table [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"table table-bordered table-hover b4-datatable\\\" datatable id=\\\"category_table\\\" width=\\\"100%\\\">\\r\\n                                        <thead>\\r\\n                                        <tr>\\r\\n                                            <th>{{'categorys.columns.name' | translate}}</th>\\r\\n                                            <th>{{'categorys.columns.description' | translate}}</th>\\r\\n                                            <th>{{'categorys.columns.parent' | translate}}</th>\\r\\n                                            <th>{{'common.actions' | translate}}</th>\\r\\n                                        </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                        <tr *ngFor=\\\"let category of categorys; index as i\\\">\\r\\n                                            <td>\\r\\n                                                <a class=\\\"\\\" href=\\\"{{apiUrl}}/{{category.url}}{{category.prefix}}{{category.alias}}\\\" placement=\\\"top\\\" target=\\\"_blank\\\" tooltip=\\\"{{'common.view' | translate}}\\\">{{category.name}}</a>\\r\\n                                            </td>\\r\\n                                            <td>{{category.description}}</td>\\r\\n                                            <td>{{category.parent}}</td>\\r\\n                                            <td class=\\\"actions-dropdown\\\">\\r\\n                                                <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                    <button aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-1\\\" type=\\\"button\\\">\\r\\n                                                        <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                                                    <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                                        <li role=\\\"menuitem\\\">\\r\\n                                                            <a *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'categorys_edit']\\\" [routerLink]=\\\"getUrl('edit', category.id)\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\"><i class=\\\"fa fa-pencil-square-o\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                        <li role=\\\"menuitem\\\">\\r\\n                                                            <a (click)=\\\"deleteCategory(category.id)\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'categorys_delete']\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\"><i class=\\\"fa fa-trash-o\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        </tbody>\\r\\n                                        <tfoot *ngIf=\\\"categorys?.length == 0\\\" class=\\\"tfoot_dt\\\">\\r\\n                                        <tr>\\r\\n                                            <td class=\\\"no-data-available text-center\\\" colspan=\\\"4\\\">{{'common.datatable.sEmptyTable' | translate}}</td>\\r\\n                                        </tr>\\r\\n                                        </tfoot>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","export default \"<section id=\\\"basic-form-layouts\\\">\\r\\n  <tabset>\\r\\n      <tab [heading]=\\\"item.title\\\" *ngFor=\\\"let item of dataTabs;let i = index;\\\">\\r\\n          <category-item-translate [tabValue]=\\\"item\\\"></category-item-translate>\\r\\n      </tab>\\r\\n  </tabset>\\r\\n</section>\"","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {Client} from '../../shared/models/client.model';\r\n\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ClientService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<Client[]>(`${this.apiUrl}/api/clients`);\r\n    }\r\n\r\n    getClientsWithTrashed() {\r\n        return this.http.get<Client[]>(`${this.apiUrl}/api/clients/withtrashed`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/clients/${id}`);\r\n    }\r\n\r\n    create(client: Client) {\r\n        return this.http.post(`${this.apiUrl}/api/clients`, client);\r\n    }\r\n\r\n    update(client: Client) {\r\n        return this.http.put(`${this.apiUrl}/api/clients/${client.id}`, client);\r\n    }\r\n\r\n    delete(id: number, params: any) {\r\n        return this.http.post(`${this.apiUrl}/api/clients/delete/${id}`, params);\r\n    }\r\n\r\n    setActiveDeactiveUser(client: Client) {\r\n        return this.http.put(`${this.apiUrl}/api/clients/status-change/${client.id}`, client);\r\n    }\r\n\r\n    sendInviteUserMail(id) {\r\n        return this.http.get(`${this.apiUrl}/api/users/invite/${id}`);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NgxPermissionsGuard} from 'ngx-permissions';\r\n\r\nimport {CategoryListsComponent} from './pages/category-lists/category-lists.component';\r\nimport {CategoryCreateComponent} from './pages/category-create/category-create.component';\r\nimport {CategoryEditComponent} from './pages/category-edit/category-edit.component';\r\n// import {CategoryViewComponent} from './pages/category-view/category-view.component';\r\n\r\nconst routes: Routes = [{\r\n    path: '',\r\n    children: [\r\n        {\r\n            path: '',\r\n            canActivate: [NgxPermissionsGuard],\r\n            component: CategoryListsComponent\r\n        },\r\n        {\r\n            path: 'create',\r\n            canActivate: [NgxPermissionsGuard],\r\n            data: {\r\n                breadcrumbs: {\r\n                    text: 'common.create',\r\n                    icon: 'fa fa-external-link',\r\n                    show: true,\r\n                    isHome: true\r\n                },\r\n                permissions: {\r\n                    only: ['admin', 'super_admin', 'categorys_create']\r\n                }\r\n            },\r\n            component: CategoryCreateComponent\r\n        },\r\n        {\r\n            path: 'edit/:id',\r\n            canActivate: [NgxPermissionsGuard],\r\n            data: {\r\n                breadcrumbs: {\r\n                    text: 'common.edit',\r\n                    icon: 'fa fa-external-link',\r\n                    show: true,\r\n                    isHome: true\r\n                },\r\n                permissions: {\r\n                    only: ['admin', 'super_admin', 'categorys_edit']\r\n                }\r\n            },\r\n            component: CategoryEditComponent\r\n        },\r\n        // {\r\n        //     path: 'detail/:id',\r\n        //     canActivate: [NgxPermissionsGuard],\r\n        //     data: {\r\n        //         breadcrumbs: {\r\n        //             text: 'common.detail',\r\n        //             icon: 'fa fa-external-link'\r\n        //         },\r\n        //         permissions: {\r\n        //             only: ['admin', 'super_admin', 'categorys_view']\r\n        //         }\r\n        //     },\r\n        //     component: CategoryViewComponent\r\n        // }\r\n    ]\r\n}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class CategorysRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BsDatepickerModule, BsDropdownModule, CollapseModule, DatepickerModule, ModalModule, TabsModule, TooltipModule} from 'ngx-bootstrap';\r\nimport {ExportAsModule} from 'ngx-export-as';\r\nimport {NgxEditorModule} from 'ngx-editor';\r\nimport {NgxPermissionsModule} from 'ngx-permissions';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {DataTablesModule} from 'angular-datatables';\r\n\r\nimport {CategorysRoutingModule} from './categorys-routing.module';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\n\r\nimport {CategoryListsComponent} from './pages/category-lists/category-lists.component';\r\nimport {CategoryCreateComponent} from './pages/category-create/category-create.component';\r\nimport {CategoryEditComponent} from './pages/category-edit/category-edit.component';\r\nimport { CategoryTranslateComponent } from './pages/category-translate/category-translate.component';\r\nimport { CategoryItemTranslateComponent } from './pages/category-item-translate/category-item-translate.component';\r\n// import {CategoryViewComponent} from './pages/category-view/category-view.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CategoryListsComponent,\r\n        CategoryCreateComponent,\r\n        CategoryEditComponent,\r\n        CategoryTranslateComponent,\r\n        CategoryItemTranslateComponent,\r\n        // CategoryViewComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        CategorysRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgxPermissionsModule,\r\n        DataTablesModule,\r\n        ExportAsModule,\r\n        NgxEditorModule,\r\n        NgSelectModule,\r\n        ModalModule.forRoot(),\r\n        DatepickerModule.forRoot(),\r\n        BsDatepickerModule.forRoot(),\r\n        TooltipModule.forRoot(),\r\n        BsDropdownModule.forRoot(),\r\n        TranslateModule.forChild({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (HttpLoaderFactory),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        SharedModule,\r\n        CollapseModule,\r\n        TabsModule.forRoot()\r\n    ],\r\n})\r\n\r\nexport class CategorysModule {\r\n}\r\n\r\n// Required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n","export default \".mg-t-1rem {\\n  margin-top: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wb3N0cy9jYXRlZ29yeXMvcGFnZXMvY2F0ZWdvcnktY3JlYXRlL0M6XFxVc2Vyc1xcdGh1YW5cXE9uZURyaXZlXFxEZXNrdG9wXFxnbGF2YWwtdGh1YW5kaW5oL3NyY1xcYXBwXFxtb2R1bGVzXFxwb3N0c1xcY2F0ZWdvcnlzXFxwYWdlc1xcY2F0ZWdvcnktY3JlYXRlXFxjYXRlZ29yeS1jcmVhdGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvcG9zdHMvY2F0ZWdvcnlzL3BhZ2VzL2NhdGVnb3J5LWNyZWF0ZS9jYXRlZ29yeS1jcmVhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wb3N0cy9jYXRlZ29yeXMvcGFnZXMvY2F0ZWdvcnktY3JlYXRlL2NhdGVnb3J5LWNyZWF0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tZy10LTFyZW0ge1xyXG4gICAgbWFyZ2luLXRvcDogMXJlbTtcclxufVxyXG4iLCIubWctdC0xcmVtIHtcbiAgbWFyZ2luLXRvcDogMXJlbTtcbn0iXX0= */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n// import {CategorySettingService} from '../../../../../core/services/category-setting.service';\r\nimport {CategorysService} from '../../../../../core/services/categorys.service';\r\nimport {OptionsService} from '../../../../../core/services/options.service';\r\nimport {ClientService} from '../../../../../core/services/client.service';\r\nimport {TaxService} from '../../../../../core/services/tax.service';\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\nimport { SeoService } from 'src/app/core/services/seo.service';\r\nimport {NgOption} from '@ng-select/ng-select';\r\nimport * as Dropzone from 'dropzone';\r\n\r\n@Component({\r\n    selector: 'app-category-create',\r\n    templateUrl: './category-create.component.html',\r\n    styleUrls: ['./category-create.component.scss'],\r\n    providers: [DatePipe]\r\n})\r\n\r\nexport class CategoryCreateComponent implements OnInit {\r\n    createCategoryForm: FormGroup;\r\n    liststatus: NgOption[] = [\r\n        {value: 'yes', label: 'Show'},\r\n        {value: 'no', label: 'Hide'},\r\n    ];\r\n    moduletype:string;\r\n    urlPage:string;\r\n    loginUser: any;\r\n    seoData: any;\r\n    listcategorys = [];\r\n    listTemplate: any = [];\r\n    isFormSubmitted = false;\r\n    specifications: any;\r\n    isFormLoaded = false;\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n    isCollapsedHead1 = false;\r\n    isCollapsedHead2 = false;\r\n    @ViewChild('logodropzone', {static: false}) logodropzone: ElementRef;\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public datepipe: DatePipe,\r\n        private router: Router,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private categorysService: CategorysService,\r\n        private optionsService: OptionsService,\r\n        private seoService: SeoService,\r\n        private clientService: ClientService,\r\n        private taxService: TaxService,\r\n        // private categorySettingService: CategorySettingService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    get categoryControl() {\r\n        return this.createCategoryForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.router.url === '/postscategory/create') {\r\n            this.moduletype = 'news';\r\n            this.urlPage = '/postscategory';\r\n        } else {\r\n            this.moduletype = 'products';\r\n            this.urlPage = '/productscategory';\r\n        }\r\n        this.getTemplate();\r\n        this.getSpecifications();\r\n        this.getAllMeta();\r\n        this.getCategorys();\r\n    }\r\n\r\n    loadForm() {\r\n        let that = this;\r\n        this.createCategoryForm = this.formBuilder.group({\r\n            name: [null, Validators.required],\r\n            avatar: [null, Validators.required],\r\n            description: [null],\r\n            parent_id: [null],\r\n            page_title: [null],\r\n            page_description: [null],\r\n            url_and_handle: [null, Validators.required],\r\n            active: [null, Validators.required],\r\n            keyword: [null],\r\n            po_types_indentify:[this.moduletype],\r\n            specifications: [null],\r\n            seoData: this.formBuilder.array([]),\r\n            seo: [null],\r\n            pages_id: [null, Validators.required],\r\n        });\r\n        setTimeout(() => {\r\n            that.loadDropzone();\r\n        });\r\n        this.isFormLoaded = true;\r\n    }\r\n    private getSeoData(data) {\r\n        return this.formBuilder.group({\r\n            meta: [data.label, Validators.required],\r\n            meta_id: [data.id, Validators.required],\r\n            content: [null]\r\n        });\r\n    }\r\n    private addSeoData(data) {\r\n        const control = <FormArray>this.createCategoryForm.controls['seoData'];\r\n        control.push(this.getSeoData(data));\r\n    }\r\n    onAddMetaTag(even: any) {\r\n        const control = <FormArray>this.createCategoryForm.controls['seoData'];\r\n        control.push(this.getSeoData(even));\r\n    }\r\n    onRemoveMetaTag(even: any) {\r\n        (<FormArray>this.createCategoryForm.get('seoData')).removeAt(even.index)\r\n    }\r\n    getCategorys() {\r\n        this.categorysService.getAll().subscribe(\r\n                data => {\r\n                    if(Array.isArray(data)){\r\n                       this.listcategorys = data.filter(res => (res.id == null || res['po_types_indentify'] == this.moduletype));\r\n                    }\r\n                    // this.listcategorys = data;\r\n                    this.loadForm();\r\n                });\r\n    }\r\n\r\n    getAllMeta() {\r\n        this.seoService.getAllMeta()\r\n            .subscribe(\r\n                data => {\r\n                    this.seoData = data;\r\n                });\r\n    }\r\n\r\n    getSpecifications() {\r\n        this.optionsService.getAll('specifications').subscribe(\r\n            data => {\r\n                this.specifications = data;\r\n            });\r\n    }\r\n\r\n    getTemplate() {\r\n        this.categorysService.getTemplate().subscribe(\r\n            data => {\r\n                this.listTemplate = data;\r\n            });\r\n    }\r\n\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.createCategoryForm.invalid) {\r\n            return;\r\n        }\r\n        this.categorysService.create(this.createCategoryForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('categorys.messages.create'), this.translate.instant('categorys.title'));\r\n                    if (this.moduletype === 'news') {\r\n                        this.router.navigate(['postscategory']);\r\n                    } else {\r\n                        this.router.navigate(['productscategory']);\r\n                    }\r\n                });\r\n    }\r\n\r\n    loadDropzone() {\r\n        let that = this;\r\n        new Dropzone(this.logodropzone.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            maxFiles: 1,\r\n            clickable: true,\r\n            acceptedFiles: 'image/*',\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>' + that.translate.instant('common.remove_file') + '</button>');\r\n                    const _this = this;\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file);\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            that.createCategoryForm.patchValue({avatar: reader.result});\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n\r\n                this.on('removedfile', function (file) {\r\n                    that.createCategoryForm.patchValue({avatar: null});\r\n                });\r\n\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    // removeDropzoneImage() {\r\n    //     this.isLogoLoaded = false;\r\n    //     this.createCategoryForm.patchValue({avatar: null});\r\n    // }\r\n}\r\n","export default \".ng-select.ng-select-single .ng-select-container {\\n  min-width: 500px;\\n}\\n\\n.inp {\\n  border: none;\\n  border-bottom: 1px solid #e8eef3;\\n  padding: 5px 10px;\\n  outline: none;\\n  width: 100%;\\n}\\n\\n[placeholder]:focus::-webkit-input-placeholder {\\n  transition: text-indent 0.4s 0.4s ease;\\n  text-indent: -100%;\\n  opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wb3N0cy9jYXRlZ29yeXMvcGFnZXMvY2F0ZWdvcnktZWRpdC9DOlxcVXNlcnNcXHRodWFuXFxPbmVEcml2ZVxcRGVza3RvcFxcZ2xhdmFsLXRodWFuZGluaC9zcmNcXGFwcFxcbW9kdWxlc1xccG9zdHNcXGNhdGVnb3J5c1xccGFnZXNcXGNhdGVnb3J5LWVkaXRcXGNhdGVnb3J5LWVkaXQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvcG9zdHMvY2F0ZWdvcnlzL3BhZ2VzL2NhdGVnb3J5LWVkaXQvY2F0ZWdvcnktZWRpdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGdCQUFBO0FDQUo7O0FER0E7RUFDSSxZQUFBO0VBQ0EsZ0NBQUE7RUFDQSxpQkFBQTtFQUNBLGFBQUE7RUFDQSxXQUFBO0FDQUo7O0FER0E7RUFDSSxzQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsVUFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wb3N0cy9jYXRlZ29yeXMvcGFnZXMvY2F0ZWdvcnktZWRpdC9jYXRlZ29yeS1lZGl0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5nLXNlbGVjdC5uZy1zZWxlY3Qtc2luZ2xlXHJcbi5uZy1zZWxlY3QtY29udGFpbmVyIHtcclxuICAgIG1pbi13aWR0aDogNTAwcHg7XHJcbn1cclxuXHJcbi5pbnAge1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlOGVlZjM7XHJcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuW3BsYWNlaG9sZGVyXTpmb2N1czo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICB0cmFuc2l0aW9uOiB0ZXh0LWluZGVudCAwLjRzIDAuNHMgZWFzZTtcclxuICAgIHRleHQtaW5kZW50OiAtMTAwJTtcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxuIiwiLm5nLXNlbGVjdC5uZy1zZWxlY3Qtc2luZ2xlIC5uZy1zZWxlY3QtY29udGFpbmVyIHtcbiAgbWluLXdpZHRoOiA1MDBweDtcbn1cblxuLmlucCB7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlOGVlZjM7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xuICBvdXRsaW5lOiBub25lO1xuICB3aWR0aDogMTAwJTtcbn1cblxuW3BsYWNlaG9sZGVyXTpmb2N1czo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIHRyYW5zaXRpb246IHRleHQtaW5kZW50IDAuNHMgMC40cyBlYXNlO1xuICB0ZXh0LWluZGVudDogLTEwMCU7XG4gIG9wYWNpdHk6IDE7XG59Il19 */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {CategorysService} from '../../../../../core/services/categorys.service';\r\nimport {ItemService} from '../../../../../core/services/item.service';\r\nimport {ClientService} from '../../../../../core/services/client.service';\r\nimport {TaxService} from '../../../../../core/services/tax.service';\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\nimport {NgOption} from '@ng-select/ng-select';\r\nimport {OptionsService} from '../../../../../core/services/options.service';\r\nimport {environment} from '../../../../../../environments/environment';\r\nimport { SeoService } from 'src/app/core/services/seo.service';\r\nimport * as Dropzone from 'dropzone';\r\n\r\n@Component({\r\n    selector: 'app-category-edit',\r\n    templateUrl: './category-edit.component.html',\r\n    styleUrls: ['./category-edit.component.scss']\r\n})\r\n\r\nexport class CategoryEditComponent implements OnInit {\r\n    editCategoryForm: FormGroup;\r\n    selectedItem: number;\r\n    loginUser: any;\r\n    category: any;\r\n    specifications: any;\r\n    moduletype: string;\r\n    urlPage:string;\r\n    isLogoLoaded = true;\r\n    listcategorys = [];\r\n    listTemplate: any = [];\r\n    isFormSubmitted = false;\r\n    isFormLoaded = false;\r\n    seoData: any;\r\n    liststatus: NgOption[] = [\r\n        {value: 'yes', label: 'Show'},\r\n        {value: 'no', label: 'Hide'},\r\n    ];\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n    isCollapsedHead1 = false;\r\n    isCollapsedHead2 = false;\r\n    @ViewChild('logodropzone', {static: false}) logodropzone: ElementRef;\r\n    private apiUrl = environment.apiUrl;\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public datepipe: DatePipe,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private categoryService: CategorysService,\r\n        private optionsService: OptionsService,\r\n        private clientService: ClientService,\r\n        private itemService: ItemService,\r\n        private seoService: SeoService,\r\n        private taxService: TaxService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n        this.route.paramMap.subscribe(params => {\r\n            this.getById(params.get('id'));\r\n        });\r\n    }\r\n\r\n    get categoryControl() {\r\n        return this.editCategoryForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.router.url.indexOf('/postscategory/edit') !== -1) {\r\n            this.moduletype = 'news';\r\n            this.urlPage = '/postscategory';\r\n        } else {\r\n            this.moduletype = 'products';\r\n            this.urlPage = '/productscategory';\r\n        }\r\n    }\r\n\r\n    loadForm() {\r\n        let that = this;\r\n        this.editCategoryForm = this.formBuilder.group({\r\n            id: [this.category.id, Validators.required],\r\n            name: [this.category.name, Validators.required],\r\n            description: [this.category.description],\r\n            parent_id: [this.category.parent_id],\r\n            page_title: [this.category.page_title],\r\n            page_description: [this.category.page_description],\r\n            url_and_handle: [this.category.url_and_handle, Validators.required],\r\n            active: [this.category.active, Validators.required],\r\n            avatar: [this.category.avatar, Validators.required],\r\n            keyword: [this.category.keyword],\r\n            po_types_indentify:[this.moduletype],\r\n            seoData: this.formBuilder.array([]),\r\n            seo: [this.category.seo],\r\n            specifications: [this.category.specifications],\r\n            pages_id: [this.category.pages_id, Validators.required],\r\n        });\r\n        this.editCategoryForm.patchValue({avatar: this.category.avatar});\r\n        setTimeout(() => {\r\n            that.loadDropzone();\r\n        });\r\n        for (let seo of this.category.seoData) {\r\n            this.onAddMetaTag(seo);\r\n        }\r\n        this.isFormLoaded = true;\r\n    }\r\n\r\n    getAllMeta() {\r\n        this.seoService.getAllMeta()\r\n            .subscribe(\r\n                data => {\r\n                    this.seoData = data;\r\n                    this.loadForm();\r\n                });\r\n    }\r\n    private getSeoData(data) {\r\n        !data.content ? data.content = null : '';\r\n        return this.formBuilder.group({\r\n            meta: [data.label, Validators.required],\r\n            meta_id: [data.id, Validators.required],\r\n            content: [data.content]\r\n        });\r\n    }\r\n    private addSeoData(data) {\r\n        const control = <FormArray>this.editCategoryForm.controls['seoData'];\r\n        control.push(this.getSeoData(data));\r\n    }\r\n    onAddMetaTag(even: any) {\r\n        const control = <FormArray>this.editCategoryForm.controls['seoData'];\r\n        control.push(this.getSeoData(even));\r\n    }\r\n    onRemoveMetaTag(even: any) {\r\n        (<FormArray>this.editCategoryForm.get('seoData')).removeAt(even.index)\r\n    }\r\n    getById(categoryId) {\r\n        this.categoryService.getById(categoryId).subscribe(data => {\r\n            this.category = data;\r\n            this.getTemplate();\r\n        });\r\n    }\r\n    getCategorys() {\r\n        this.categoryService.getAll().subscribe(\r\n            data => {\r\n                if(Array.isArray(data)){\r\n                   this.listcategorys = data.filter(res => (res.id == null || res['po_types_indentify'] == this.moduletype));\r\n                }\r\n                // this.listcategorys = data;\r\n                this.getAllMeta();\r\n            });\r\n    }\r\n    getSpecifications() {\r\n        this.optionsService.getAll('specifications').subscribe(\r\n            data => {\r\n                this.specifications = data;\r\n                this.getCategorys();\r\n            });\r\n    }\r\n    getTemplate() {\r\n        this.categoryService.getTemplate().subscribe(\r\n            data => {\r\n                this.listTemplate = data;\r\n                this.getSpecifications();\r\n            });\r\n    }\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.editCategoryForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.categoryService.update(this.editCategoryForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('categorys.messages.update'), this.translate.instant('categorys.title'));\r\n                    this.router.navigate([this.urlPage]);\r\n                });\r\n    }\r\n\r\n    loadDropzone() {\r\n        let that = this;\r\n        this['fileDropZone'] = new Dropzone(this.logodropzone.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            maxFiles: 1,\r\n            clickable: true,\r\n            acceptedFiles: 'image/*',\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                const _this = this;\r\n                that.editCategoryForm.get('avatar').value ? _this.previewsContainer.lastChild['hidden'] = true : _this.previewsContainer.lastChild['hidden']= false;\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>Remove file</button>');\r\n                    if(_this.options.maxFiles == 1){\r\n                        that.removeDropzoneImage();\r\n                        if(_this.files.length > 1){\r\n                            _this.removeFile(_this.files[0]);\r\n                        }\r\n                    }\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file);\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            that.editCategoryForm.patchValue({avatar: reader.result});\r\n                            this.isLogoLoaded = false;\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n\r\n                this.on('removedfile', function (file) {\r\n                    that.editCategoryForm.patchValue({avatar: null});\r\n                });\r\n\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    removeDropzoneImage() {\r\n        this.isLogoLoaded = false;\r\n        this.editCategoryForm.patchValue({avatar: null});\r\n        this.editCategoryForm.get('avatar').value ? this['fileDropZone'].previewsContainer.lastChild['hidden'] = true : this['fileDropZone'].previewsContainer.lastChild['hidden']= false;\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG9zdHMvY2F0ZWdvcnlzL3BhZ2VzL2NhdGVnb3J5LWl0ZW0tdHJhbnNsYXRlL2NhdGVnb3J5LWl0ZW0tdHJhbnNsYXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { DatePipe } from '@angular/common';\r\nimport { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgOption } from '@ng-select/ng-select';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as Dropzone from 'dropzone';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\r\nimport { CategorysService } from 'src/app/core/services/categorys.service';\r\nimport { ClientService } from 'src/app/core/services/client.service';\r\nimport { OptionsService } from 'src/app/core/services/options.service';\r\nimport { TaxService } from 'src/app/core/services/tax.service';\r\n\r\n@Component({\r\n  selector: 'category-item-translate',\r\n  templateUrl: './category-item-translate.component.html',\r\n  styleUrls: ['./category-item-translate.component.scss']\r\n})\r\nexport class CategoryItemTranslateComponent implements OnInit {\r\n  @Input() tabValue:any;\r\n  createCategoryForm: FormGroup;\r\n  liststatus: NgOption[] = [\r\n    { value: 'no', label: 'Hide' },\r\n    { value: 'yes', label: 'Show' },\r\n  ];\r\n  moduletype: string;\r\n  urlPage: string;\r\n  loginUser: any;\r\n  listcategorys = [];\r\n  listTemplate: any = [];\r\n  isFormSubmitted = false;\r\n  specifications: any;\r\n  isFormLoaded = false;\r\n  datepickerConfig = {\r\n    dateInputFormat: 'YYYY-MM-DD',\r\n    containerClass: 'theme-red'\r\n  };\r\n  isCollapsedHead1 = false;\r\n  isCollapsedHead2 = false;\r\n  @ViewChild('logodropzone', { static: false }) logodropzone: ElementRef;\r\n\r\n  constructor(\r\n    public translate: TranslateService,\r\n    public datepipe: DatePipe,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private categorysService: CategorysService,\r\n    private optionsService: OptionsService,\r\n    private clientService: ClientService,\r\n    private taxService: TaxService,\r\n    // private categorySettingService: CategorySettingService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n    this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n  }\r\n  get categoryControl() {\r\n    return this.createCategoryForm.controls;\r\n  }\r\n  ngOnInit() {\r\n    if (this.router.url === '/postscategory/create') {\r\n      this.moduletype = 'news';\r\n      this.urlPage = '/postscategory';\r\n    } else {\r\n      this.moduletype = 'products';\r\n      this.urlPage = '/productscategory';\r\n    }\r\n    this.getTemplate();\r\n    this.getSpecifications();\r\n    this.getOptions('specifications');\r\n    this.getCategorys();\r\n  }\r\n  loadForm() {\r\n    let that = this;\r\n    this.createCategoryForm = this.formBuilder.group({\r\n      name: [null, Validators.required],\r\n      avatar: [null, Validators.required],\r\n      description: [null],\r\n      parent_id: [null],\r\n      page_title: [null],\r\n      page_description: [null],\r\n      url_and_handle: [null, Validators.required],\r\n      active: [null, Validators.required],\r\n      keyword: [null],\r\n      po_types_indentify: [this.moduletype],\r\n      specifications: [null],\r\n      pages_id: [null, Validators.required],\r\n    });\r\n    setTimeout(() => {\r\n      // that.loadDropzone();\r\n    });\r\n    this.isFormLoaded = true;\r\n  }\r\n\r\n  getCategorys() {\r\n    this.categorysService.getAll().subscribe(\r\n      data => {\r\n        this.listcategorys = data;\r\n        this.loadForm();\r\n      });\r\n  }\r\n\r\n  getOptions(action) {\r\n    this.optionsService.getAll(action).subscribe(\r\n      data => {\r\n        this.specifications = data;\r\n      });\r\n  }\r\n\r\n  getSpecifications() {\r\n    this.optionsService.getAll('specifications').subscribe(\r\n      data => {\r\n        this.specifications = data;\r\n      });\r\n  }\r\n\r\n  getTemplate() {\r\n    this.categorysService.getTemplate().subscribe(\r\n      data => {\r\n        this.listTemplate = data;\r\n      });\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.isFormSubmitted = true;\r\n    console.log(this.createCategoryForm.value)\r\n    // if (this.createCategoryForm.invalid) {\r\n    //   return;\r\n    // }\r\n    // this.categorysService.create(this.createCategoryForm.value)\r\n    //   .subscribe(\r\n    //     data => {\r\n    //       this.toastr.success(this.translate.instant('categorys.messages.create'), this.translate.instant('categorys.title'));\r\n    //       if (this.moduletype === 'news') {\r\n    //         this.router.navigate(['postscategory']);\r\n    //       } else {\r\n    //         this.router.navigate(['productscategory']);\r\n    //       }\r\n    //     });\r\n  }\r\n\r\n  loadDropzone() {\r\n    let that = this;\r\n    new Dropzone(this.logodropzone.nativeElement, {\r\n      url: 'https://httpbin.org/post',\r\n      maxFiles: 1,\r\n      clickable: true,\r\n      acceptedFiles: 'image/*',\r\n      createImageThumbnails: true,\r\n      init: function () {\r\n        this.on('addedfile', function (file) {\r\n          const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>' + that.translate.instant('common.remove_file') + '</button>');\r\n          const _this = this;\r\n          removeButton.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            _this.removeFile(file);\r\n          });\r\n\r\n          file.previewElement.appendChild(removeButton);\r\n\r\n          if (file) {\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n              that.createCategoryForm.patchValue({ avatar: reader.result });\r\n            };\r\n            reader.readAsDataURL(file);\r\n          }\r\n        });\r\n\r\n        this.on('removedfile', function (file) {\r\n          that.createCategoryForm.patchValue({ avatar: null });\r\n        });\r\n\r\n        this.on('error', function (file, message: any) {\r\n          if (file) {\r\n            that.toastr.error(message);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // removeDropzoneImage() {\r\n  //     this.isLogoLoaded = false;\r\n  //     this.createCategoryForm.patchValue({avatar: null});\r\n  // }\r\n}\r\n","export default \".hide_empty_message ::ng-deep .odd {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wb3N0cy9jYXRlZ29yeXMvcGFnZXMvY2F0ZWdvcnktbGlzdHMvQzpcXFVzZXJzXFx0aHVhblxcT25lRHJpdmVcXERlc2t0b3BcXGdsYXZhbC10aHVhbmRpbmgvc3JjXFxhcHBcXG1vZHVsZXNcXHBvc3RzXFxjYXRlZ29yeXNcXHBhZ2VzXFxjYXRlZ29yeS1saXN0c1xcY2F0ZWdvcnktbGlzdHMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvcG9zdHMvY2F0ZWdvcnlzL3BhZ2VzL2NhdGVnb3J5LWxpc3RzL2NhdGVnb3J5LWxpc3RzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wb3N0cy9jYXRlZ29yeXMvcGFnZXMvY2F0ZWdvcnktbGlzdHMvY2F0ZWdvcnktbGlzdHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlkZV9lbXB0eV9tZXNzYWdlIDo6bmctZGVlcCAub2RkIHtcclxuICAgIGRpc3BsYXk6IG5vbmVcclxufSIsIi5oaWRlX2VtcHR5X21lc3NhZ2UgOjpuZy1kZWVwIC5vZGQge1xuICBkaXNwbGF5OiBub25lO1xufSJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {ExportAsConfig, ExportAsService} from 'ngx-export-as';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\n// import {category_status_value} from '../../../../../core/helpers/sale.helper';\r\nimport {DatatablesResponse} from '../../../../../core/helpers/datatables-response.helper';\r\nimport {environment} from '../../../../../../environments/environment';\r\n\r\nimport {DataTableDirective} from 'angular-datatables';\r\nimport {Subject} from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport 'datatables.net';\r\nimport 'datatables.net-bs4';\r\nimport {CategorysService} from '../../../../../core/services/categorys.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-category-lists',\r\n    templateUrl: './category-lists.component.html',\r\n    styleUrls: ['./category-lists.component.scss']\r\n})\r\nexport class CategoryListsComponent implements OnInit {\r\n    @ViewChild(DataTableDirective, {static: true})\r\n    dtElement: DataTableDirective;\r\n    dtTrigger: Subject<any> = new Subject();\r\n    dtOptions: any = {};\r\n    curentModule: string;\r\n    moduletype: string;\r\n    loginUser: any;\r\n    categorys = [];\r\n    settings: any;\r\n    exportAsConfig: ExportAsConfig = {\r\n        type: 'pdf',\r\n        elementIdOrContent: 'category_table',\r\n    };\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private exportAsService: ExportAsService,\r\n        private http: HttpClient,\r\n        private toastr: ToastrService,\r\n        private router: Router,\r\n        private categorysService: CategorysService,\r\n        private authenticationService: AuthenticationService,\r\n        // private categoryService: CategoryService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n        if(this.router.url === '/postscategory'){\r\n            this.moduletype = 'news';\r\n            this.curentModule = 'postscategory';\r\n        } else {\r\n            this.curentModule = 'productscategory';\r\n            this.moduletype = 'products';\r\n        }\r\n        this.loadDatatable();\r\n    }\r\n\r\n    loadDatatable() {\r\n        let that = this;\r\n        this.dtOptions = {\r\n            pagingType: 'full_numbers',\r\n            pageLength: that.loginUser.settings.tables_pagination_limit,\r\n            serverSide: true,\r\n            processing: true,\r\n            dom: '<\"html5buttons\"B>ltfrtip',\r\n            data: [],\r\n            order: [0],\r\n            columns: [\r\n                {\r\n                    'sortable': true,\r\n                    'width': '20%',\r\n                    'target': [0]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '20%',\r\n                    'target': [1]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '40%',\r\n                    'target': [2]\r\n                },\r\n                {\r\n                    'sortable': true,\r\n                    'width': '20%',\r\n                    'target': [3]\r\n                }\r\n            ],\r\n            buttons: [{\r\n                extend: 'csv',\r\n                className: 'btn btn-datatable-gredient',\r\n                action: function (e, dt, node, config) {\r\n                    that.exportFiles('csv');\r\n                }\r\n            }, {\r\n                extend: 'excel',\r\n                className: 'btn btn-datatable-gredient',\r\n                action: function (e, dt, node, config) {\r\n                    that.exportFiles('xlsx');\r\n                }\r\n            }, {\r\n                extend: 'pdf',\r\n                className: 'btn btn-datatable-gredient',\r\n                action: function (e, dt, node, config) {\r\n                    that.exportFiles('pdf');\r\n                }\r\n            }],\r\n            language: {\r\n                'sEmptyTable': this.translate.instant('common.datatable.sEmptyTable'),\r\n                'sInfo': this.translate.instant('common.datatable.sInfo'),\r\n                'sInfoEmpty': this.translate.instant('common.datatable.sInfoEmpty'),\r\n                'sSearch': '',\r\n                'sInfoPostFix': this.translate.instant('common.datatable.sInfoPostFix'),\r\n                'sInfoThousands': this.translate.instant('common.datatable.sInfoThousands'),\r\n                'sLengthMenu': this.translate.instant('common.datatable.sLengthMenu'),\r\n                'sLoadingRecords': this.translate.instant('common.datatable.sLoadingRecords'),\r\n                'sProcessing': this.translate.instant('common.datatable.sProcessing'),\r\n                'sZeroRecords': this.translate.instant('common.datatable.sZeroRecords'),\r\n                'sSearchPlaceholder': this.translate.instant('common.datatable.sSearchPlaceholder'),\r\n                'oPaginate': {\r\n                    'sFirst': this.translate.instant('common.datatable.oPaginate.sFirst'),\r\n                    'sLast': this.translate.instant('common.datatable.oPaginate.sLast'),\r\n                    'sNext': this.translate.instant('common.datatable.oPaginate.sNext'),\r\n                    'sPrevious': this.translate.instant('common.datatable.oPaginate.sPrevious')\r\n                },\r\n                'oAria': {\r\n                    'sSortAscending': this.translate.instant('common.datatable.oAria.sSortAscending'),\r\n                    'sSortDescending': this.translate.instant('common.datatable.oAria.sSortDescending')\r\n                }\r\n            },\r\n            ajax: (dataTablesParameters: any, callback) => {\r\n                this.http.post<DatatablesResponse>(this.apiUrl + '/api/all-categorys', Object.assign(dataTablesParameters, {moduletype: this.moduletype}), {}).subscribe(resp => {\r\n                    this.categorys = resp.data;\r\n                    this.settings = resp;\r\n                    this.settings = this.settings.settings;\r\n                    callback({\r\n                        recordsTotal: resp.recordsTotal,\r\n                        recordsFiltered: resp.recordsFiltered,\r\n                        data: [],\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    exportFiles(type) {\r\n        this.exportAsConfig.type = type;\r\n        this.exportAsService.save(this.exportAsConfig, this.translate.instant('categorys.title')).subscribe(() => {\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dtTrigger.next();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n    rerender(): void {\r\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n            dtInstance.destroy();\r\n            setTimeout(() => {\r\n                this.dtTrigger.next();\r\n\r\n                if (this.categorys.length > 0) {\r\n                    $('.tfoot_dt').addClass('d-none');\r\n                } else {\r\n                    $('.tfoot_dt').removeClass('d-none');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    deleteCategory(id) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text') + this.translate.instant('categorys.title'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.categorysService.delete(id).subscribe(data => {\r\n                    this.toastr.success(this.translate.instant('categorys.messages.delete'), this.translate.instant('categorys.title'));\r\n                    this.rerender();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    getTranslateStatus(statusKey) {\r\n        // return this.categoryStatusKeyValue[statusKey];\r\n        return [];\r\n    }\r\n\r\n    getUrl(action, id){\r\n        if(action === 'create'){\r\n            return [ '/'+this.curentModule+'/create' ];\r\n        } else {\r\n            return ['/'+this.curentModule+'/edit', id];\r\n        }\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG9zdHMvY2F0ZWdvcnlzL3BhZ2VzL2NhdGVnb3J5LXRyYW5zbGF0ZS9jYXRlZ29yeS10cmFuc2xhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-category-translate',\r\n  templateUrl: './category-translate.component.html',\r\n  styleUrls: ['./category-translate.component.scss']\r\n})\r\nexport class CategoryTranslateComponent implements OnInit {\r\n  dataTabs:any;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.dataTabs = [\r\n      {title: 'title 1', formGroup: 'createCategoryForm'},\r\n      {title: 'title 3', formGroup: 'createCategoryFormN'},\r\n      {title: 'title 4', formGroup: 'createCategoryFormY'},\r\n      {title: 'title 5', formGroup: 'createCategoryFormM'}\r\n    ];\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}