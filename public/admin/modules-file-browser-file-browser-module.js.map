{"version":3,"sources":["./node_modules/file-saver/dist/FileSaver.min.js","./node_modules/ngx-filesaver/fesm5/ngx-filesaver.js","./src/app/modules/file-browser/components/create-folder-model/create-folder-model.component.html","./src/app/modules/file-browser/components/edit-file-modal/edit-file-modal.component.html","./src/app/modules/file-browser/components/edit-folder-modal/edit-folder-modal.component.html","./src/app/modules/file-browser/components/upload-files-model/upload-files-model.component.html","./src/app/modules/file-browser/pages/file-browser/file-browser.component.html","./src/app/core/services/file-browser.service.ts","./src/app/modules/file-browser/components/create-folder-model/create-folder-model.component.scss","./src/app/modules/file-browser/components/create-folder-model/create-folder-model.component.ts","./src/app/modules/file-browser/components/edit-file-modal/edit-file-modal.component.scss","./src/app/modules/file-browser/components/edit-file-modal/edit-file-modal.component.ts","./src/app/modules/file-browser/components/edit-folder-modal/edit-folder-modal.component.scss","./src/app/modules/file-browser/components/edit-folder-modal/edit-folder-modal.component.ts","./src/app/modules/file-browser/components/upload-files-model/upload-files-model.component.scss","./src/app/modules/file-browser/components/upload-files-model/upload-files-model.component.ts","./src/app/modules/file-browser/file-browser-routing.module.ts","./src/app/modules/file-browser/file-browser.module.ts","./src/app/modules/file-browser/pages/file-browser/file-browser.component.scss","./src/app/modules/file-browser/pages/file-browser/file-browser.component.ts"],"names":[],"mappings":"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","file":"modules-file-browser-file-browser-module.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import { saveAs } from 'file-saver';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport 'rxjs';\nimport { Injectable, NgModule, Directive, ElementRef, Input, HostListener, EventEmitter, Output, defineInjectable } from '@angular/core';\n\nvar FileSaverService = /** @class */ (function () {\n    function FileSaverService() {\n    }\n    FileSaverService.prototype.genType = function (fileName) {\n        if (!fileName || fileName.lastIndexOf('.') === -1)\n            return 'text/plain';\n        var type = fileName.substr(fileName.lastIndexOf('.') + 1);\n        switch (type) {\n            case 'txt':\n                return 'text/plain';\n            case 'xml':\n            case 'html':\n                return \"text/\" + type;\n            case 'json':\n                return 'octet/stream';\n            default:\n                return \"application/\" + type;\n        }\n    };\n    FileSaverService.prototype.save = function (blob, fileName, filtType) {\n        if (!blob) {\n            throw new Error('Muse spcify blod argument');\n        }\n        saveAs(new Blob([blob], { type: filtType || blob.type || this.genType(fileName) }), decodeURI(fileName || 'download'));\n    };\n    FileSaverService.prototype.saveText = function (txt, fileName) {\n        var blob = new Blob([txt]);\n        this.save(blob, fileName);\n    };\n    FileSaverService.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    FileSaverService.ngInjectableDef = defineInjectable({ factory: function FileSaverService_Factory() { return new FileSaverService(); }, token: FileSaverService, providedIn: \"root\" });\n    return FileSaverService;\n}());\n\nvar FileSaverDirective = /** @class */ (function () {\n    function FileSaverDirective(el, _FileSaverService, _httpClient) {\n        this.el = el;\n        this._FileSaverService = _FileSaverService;\n        this._httpClient = _httpClient;\n        this.method = 'GET';\n        this.success = new EventEmitter();\n        this.error = new EventEmitter();\n    }\n    FileSaverDirective.prototype.getName = function (res) {\n        return decodeURI(this.fileName ||\n            res.headers.get('filename') ||\n            res.headers.get('x-filename'));\n    };\n    FileSaverDirective.prototype._click = function () {\n        var _this = this;\n        var _http = this.http;\n        if (!_http) {\n            var params = new HttpParams(), _data = this.query || {};\n            // tslint:disable-next-line:forin\n            for (var item in _data) {\n                params.set(item, _data[item]);\n            }\n            _http = this._httpClient.request(this.method, this.url, {\n                observe: 'response',\n                responseType: 'blob',\n                headers: this.header,\n                params: params\n            });\n        }\n        this.el.nativeElement.disabled = true;\n        _http.subscribe(function (res) {\n            if (res.status !== 200 || res.body.size <= 0) {\n                _this.error.emit(res);\n                return;\n            }\n            _this._FileSaverService.save(res.body, _this.getName(res));\n            _this.success.emit(res);\n        }, function (err) {\n            _this.error.emit(err);\n        }, function () {\n            _this.el.nativeElement.disabled = false;\n        });\n    };\n    FileSaverDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[fileSaver]',\n                    exportAs: 'fileSaver'\n                },] }\n    ];\n    /** @nocollapse */\n    FileSaverDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: FileSaverService },\n        { type: HttpClient }\n    ]; };\n    FileSaverDirective.propDecorators = {\n        method: [{ type: Input }],\n        http: [{ type: Input }],\n        query: [{ type: Input }],\n        header: [{ type: Input }],\n        url: [{ type: Input }],\n        fileName: [{ type: Input }],\n        success: [{ type: Output }],\n        error: [{ type: Output }],\n        _click: [{ type: HostListener, args: ['click',] }]\n    };\n    return FileSaverDirective;\n}());\n\nvar FileSaverModule = /** @class */ (function () {\n    function FileSaverModule() {\n    }\n    FileSaverModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [FileSaverDirective],\n                    exports: [FileSaverDirective],\n                },] }\n    ];\n    return FileSaverModule;\n}());\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FileSaverService, FileSaverDirective, FileSaverModule };\n\n//# sourceMappingURL=ngx-filesaver.js.map","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-folder\\\"></i>&nbsp;{{'file_browser.title1' | translate}}</h2>\\r\\n    <button (click)=\\\"bsCreateFolderModalRef.hide()\\\" aria-label=\\\"Close\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"createFolderForm\\\" class=\\\"bs4-forms\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"folder_name\\\">{{'file_browser.create.fields.folder_name' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isSubmitted && folderControl.folder_name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"folder_name\\\" id=\\\"folder_name\\\" placeholder=\\\"{{'file_browser.create.placeholders.placeholder1' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    <div *ngIf=\\\"isSubmitted && folderControl.folder_name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"folderControl.folder_name.errors.required\\\">{{'file_browser.create.error_messages.message1' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"folder_desc\\\">{{'file_browser.create.fields.description' | translate}}</label>\\r\\n                    <app-ngx-editor [placeholder]=\\\"'file_browser.create.placeholders.placeholder2' | translate\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"folder_desc\\\" height=\\\"100px\\\" id=\\\"folder_desc\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\"><span>{{'common.create' | translate}}</span></button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-file\\\"></i>&nbsp;{{'file_browser.title4' | translate}}</h2>\\r\\n    <button (click)=\\\"bsEditFileModalRef.hide()\\\" aria-label=\\\"Close\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"editFileForm\\\" class=\\\"bs4-forms\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"name\\\">{{'file_browser.create.fields.file_name' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isSubmitted && fileControl.file_name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"file_name\\\" id=\\\"file_name\\\" placeholder=\\\"{{'file_browser.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    <div *ngIf=\\\"isSubmitted && fileControl.file_name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fileControl.file_name.errors.required\\\">{{'file_browser.create.error_messages.message3' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\"><span>{{'common.update' | translate}}</span></button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-folder\\\"></i>&nbsp;{{'file_browser.title2' | translate}}</h2>\\r\\n    <button (click)=\\\"bsEditFolderModalRef.hide()\\\" aria-label=\\\"Close\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"editFolderForm\\\" class=\\\"bs4-forms\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"name\\\">{{'file_browser.create.fields.folder_name' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isSubmitted && folderControl.folder_name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"folder_name\\\" id=\\\"folder_name\\\" placeholder=\\\"{{'file_browser.create.placeholders.placeholder1' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    <div *ngIf=\\\"isSubmitted && folderControl.folder_name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"folderControl.folder_name.errors.required\\\">{{'file_browser.create.error_messages.message1' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"folder_desc\\\">{{'file_browser.create.fields.description' | translate}}</label>\\r\\n                    <app-ngx-editor [placeholder]=\\\"'file_browser.create.placeholders.placeholder2' | translate\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"folder_desc\\\" height=\\\"100px\\\" id=\\\"folder_desc\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit\\\" type=\\\"submit\\\"><span>{{'common.update' | translate}}</span></button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-file\\\"></i>&nbsp;{{'file_browser.title3' | translate}}</h2>\\r\\n    <button (click)=\\\"bsCreateFileModalRef.hide()\\\" aria-label=\\\"Close\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div (fileOver)=\\\"fileOverBase($event)\\\" [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\" [uploader]=\\\"uploader\\\" class=\\\"well dropzone text-center\\\" ng2FileDrop>\\r\\n                <i class=\\\"fa fa-upload fa-4x\\\"></i>\\r\\n                <br/>\\r\\n                <h4 class=\\\"dz-message\\\">{{'file_browser.create.error_messages.message2' | translate}}</h4>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 mt-2\\\">\\r\\n            <label class=\\\"btn btn-raised btn-info round btn-file\\\">\\r\\n                <input [uploader]=\\\"uploader\\\" class=\\\"d-none\\\" multiple ng2FileSelect type=\\\"file\\\"/>\\r\\n                <span><i class=\\\"fa fa-upload\\\"></i> {{'file_browser.title3' | translate}}</span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"uploader.queue.length != 0\\\" class=\\\"col-md-12\\\">\\r\\n            <table class=\\\"table table-responsive\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th width=\\\"50%\\\">{{'file_browser.columns.name' | translate}}</th>\\r\\n                    <th>{{'file_browser.columns.size' | translate}}</th>\\r\\n                    <th>{{'file_browser.columns.progress' | translate}}</th>\\r\\n                    <th>{{'file_browser.columns.status' | translate}}</th>\\r\\n                    <th>{{'file_browser.columns.actions' | translate}}</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                <tr *ngFor=\\\"let item of uploader.queue; index as i\\\">\\r\\n                    <td><strong>{{ item?.file?.name }}</strong></td>\\r\\n                    <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size / 1024 / 1024 | number:'.2' }} MB</td>\\r\\n                    <td *ngIf=\\\"uploader.options.isHTML5\\\">\\r\\n                        <progressbar [animate]=\\\"true\\\" [striped]=\\\"true\\\" [value]=\\\"item.progress\\\" max=\\\"100\\\"></progressbar>\\r\\n                    </td>\\r\\n                    <td class=\\\"budges-status\\\">\\r\\n                        <span *ngIf=\\\"item.isSuccess\\\" class=\\\"completed\\\">{{'common.status.success' | translate}}</span>\\r\\n                        <span *ngIf=\\\"item.isCancel\\\" class=\\\"cancel\\\">{{'common.status.cancel' | translate}}</span>\\r\\n                        <span *ngIf=\\\"item.isError\\\" class=\\\"closed\\\">{{'common.status.error' | translate}}</span>\\r\\n                    </td>\\r\\n                    <td nowrap>\\r\\n                        <button (click)=\\\"item.remove();uploaderRemove(attachmentsArr[i])\\\" class=\\\"btn btn-raised btn-danger white btn-xs mb-0\\\" type=\\\"button\\\">\\r\\n                            <span class=\\\"fa fa-close\\\"></span></button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n</div>\\r\\n\"","export default \"<section>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card pl-2 pr-2\\\">\\r\\n                <div class=\\\"card-header pl-0 pr-0 border-bottom\\\">\\r\\n                    <h4 class=\\\"main-title mt-2\\\"><span>{{'file_browser.title' | translate}}</span></h4>\\r\\n                    <div class=\\\"card-buttons\\\">\\r\\n                        <button (click)=\\\"uploadFileModal();\\\" *ngxPermissionsOnly=\\\"['filemanager_create']\\\" class=\\\"btn btn-create\\\" tooltip=\\\"{{'common.upload' | translate}}\\\">\\r\\n                            <i class=\\\"fa fa-upload\\\"></i></button>\\r\\n                        <button (click)=\\\"openFolderCreateModal();\\\" *ngxPermissionsOnly=\\\"['filemanager_create']\\\" class=\\\"btn btn-create\\\" tooltip=\\\"{{'common.create' | translate}}\\\">\\r\\n                            <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-content\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-3 mt-2\\\">\\r\\n                                <div *ngIf=\\\"breadcrumbs?.length != 0\\\" class=\\\"folder-list p-2\\\">\\r\\n                                    <h4>Folders</h4>\\r\\n                                    <ul>\\r\\n                                        <li *ngFor=\\\"let breadcrumb of breadcrumbs;\\\">\\r\\n                                            <a (click)=\\\"getFileFolders(breadcrumb.parent_folder)\\\"><i class=\\\"fa fa-folder\\\"></i>&nbsp;{{breadcrumb.folder_name}}\\r\\n                                            </a></li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-9 mt-2\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <!-- Folders -->\\r\\n                                    <div *ngFor=\\\"let folder of folders;\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <div class=\\\"file-browser\\\">\\r\\n                                            <div class=\\\"actions-dropdown text-right m-1 pr-2\\\">\\r\\n                                                <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                    <a aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle\\\" dropdownToggle href=\\\"javascript:void(0);\\\" id=\\\"button-basic-1\\\"><i class=\\\"fa fa-ellipsis-v\\\"></i></a>\\r\\n                                                    <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                                        <li *ngxPermissionsOnly=\\\"['filemanager_edit']\\\" role=\\\"menuitem\\\">\\r\\n                                                            <a (click)=\\\"openFolderEditModal(folder)\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                        <li *ngxPermissionsOnly=\\\"['filemanager_edit']\\\" role=\\\"menuitem\\\">\\r\\n                                                            <a (click)=\\\"deleteFolder(folder.id)\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"file-box\\\">\\r\\n                                                <div class=\\\"files\\\">\\r\\n                                                    <a (click)=\\\"getFileFolders(folder.id)\\\">\\r\\n                                                        <div class=\\\"icon docx\\\">\\r\\n                                                            <i class=\\\"fa fa-folder-o\\\"></i>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"file-name\\\">\\r\\n                                                            <h4>{{ (folder.folder_name.length > 20) ? (folder.folder_name | slice:0:20) + '..' : (folder.folder_name) }}</h4>\\r\\n                                                            <p>{{'file_browser.title7' | translate}}: {{ folder.updated_at | dateTimeFormatFilter: loginUser.settings.date_time_format }}</p>\\r\\n                                                        </div>\\r\\n                                                    </a>\\r\\n                                                </div>\\r\\n                                                <span class=\\\"corner\\\"></span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!-- Files -->\\r\\n                                    <div *ngFor=\\\"let file of files; index as i\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <div class=\\\"file-browser\\\">\\r\\n                                            <div class=\\\"actions-dropdown text-right m-1 pr-2\\\">\\r\\n                                                <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                    <a aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle\\\" dropdownToggle href=\\\"javascript:void(0);\\\" id=\\\"button-basic-1\\\"><i class=\\\"fa fa-ellipsis-v\\\"></i></a>\\r\\n                                                    <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                                        <li role=\\\"menuitem\\\">\\r\\n                                                            <a class=\\\"dropdown-item btn btn-download btn-raised\\\" download=\\\"{{file.file_name}}\\\" href=\\\"{{apiUrl}}/uploads/filebrowser/{{file.file_hash}}\\\" target=\\\"_blank\\\" tooltip=\\\"{{'common.download' | translate}}\\\"><i class=\\\"fa fa-download\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                        <li *ngxPermissionsOnly=\\\"['filemanager_edit']\\\" role=\\\"menuitem\\\">\\r\\n                                                            <a (click)=\\\"opneFileEditModal(file)\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                        <li *ngxPermissionsOnly=\\\"['filemanager_edit']\\\" role=\\\"menuitem\\\">\\r\\n                                                            <a (click)=\\\"deleteFile(file.id)\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"file-box\\\">\\r\\n                                                <div class=\\\"files\\\">\\r\\n                                                    <div *ngIf=\\\"file.icon\\\" class=\\\"icon docx\\\">\\r\\n                                                        <i [ngClass]=\\\"file.icon\\\"></i>\\r\\n                                                    </div>\\r\\n                                                    <div *ngIf=\\\"file.isImageFile\\\" class=\\\"image\\\">\\r\\n                                                        <img alt=\\\"image\\\" class=\\\"img-fluid height-100\\\" src=\\\"{{ apiUrl }}/uploads/filebrowser/{{file.file_hash}}\\\"/>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"file-name\\\">\\r\\n                                                        <a download=\\\"{{file.file_name}}\\\" href=\\\"{{apiUrl}}/uploads/filebrowser/{{file.file_hash}}\\\" target=\\\"_blank\\\" tooltip=\\\"{{file.file_name}}\\\">\\r\\n                                                            <h4>{{ (file.file_name.length > 20) ? (file.file_name | slice:0:20) + '..' : (file.file_name) }}</h4>\\r\\n                                                        </a>\\r\\n                                                        <p>{{'file_browser.title7' | translate}}: {{ file.updated_at | dateTimeFormatFilter:loginUser.settings.date_time_format }}</p>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <span class=\\\"corner\\\"></span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"isEmptyObject(folders) && isEmptyObject(files)\\\" class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-12 text-center\\\">\\r\\n                                        <img src=\\\"assets/img/norecord-img.png\\\" width=\\\"50\\\">\\r\\n                                        <p class=\\\"mt-1\\\">{{'common.empty_message.file_browser' | translate}}</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\n\r\nimport {Folder} from '../../shared/models/folder.model';\r\nimport {File} from '../../shared/models/file.model';\r\n\r\nimport {environment} from '../../../environments/environment';\r\n\r\nconst options = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class FileBrowserService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getFolders(reqObj) {\r\n        return this.http.get(`${this.apiUrl}/api/file-browser`, {params: reqObj});\r\n    }\r\n\r\n    createFolder(reqObj) {\r\n        return this.http.post(`${this.apiUrl}/api/file-browser`, reqObj, options);\r\n    }\r\n\r\n    getById(current_folder_id) {\r\n        return this.http.get(`${this.apiUrl}/api/file-browser/${current_folder_id}`);\r\n    }\r\n\r\n    updateFolder(folder: Folder) {\r\n        return this.http.put(`${this.apiUrl}/api/file-browser/${folder.id}`, folder);\r\n    }\r\n\r\n    deleteFolder(id: number) {\r\n        return this.http.delete(`${this.apiUrl}/api/file-browser/${id}`);\r\n    }\r\n\r\n    getFolderBreadcrumb(reqObj) {\r\n        return this.http.get(`${this.apiUrl}/api/file-browser/breadcrumb`, {params: reqObj});\r\n    }\r\n\r\n    getFiles(reqObj) {\r\n        return this.http.get(`${this.apiUrl}/api/files`, {params: reqObj});\r\n    }\r\n\r\n    updateFile(file: File) {\r\n        return this.http.put(`${this.apiUrl}/api/files/${file.id}`, file);\r\n    }\r\n\r\n    deleteFile(id: number) {\r\n        return this.http.delete(`${this.apiUrl}/api/files/${id}`);\r\n    }\r\n\r\n    removeAttachments(dataObj: any) {\r\n        return this.http.post(`${this.apiUrl}/api/files/attachment/remove`, dataObj);\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmlsZS1icm93c2VyL2NvbXBvbmVudHMvY3JlYXRlLWZvbGRlci1tb2RlbC9jcmVhdGUtZm9sZGVyLW1vZGVsLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {FileBrowserService} from '../../../../core/services/file-browser.service';\r\n\r\n@Component({\r\n    selector: 'app-create-folder-model',\r\n    templateUrl: './create-folder-model.component.html',\r\n    styleUrls: ['./create-folder-model.component.scss']\r\n})\r\n\r\nexport class CreateFolderModelComponent implements OnInit {\r\n    public onClose: Subject<boolean>;\r\n    createFolderForm: FormGroup;\r\n    current_folder: number;\r\n    isSubmitted = false;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsCreateFolderModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private fbService: FileBrowserService,\r\n        private toastr: ToastrService\r\n    ) {\r\n    }\r\n\r\n    get folderControl() {\r\n        return this.createFolderForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.loadForm();\r\n    }\r\n\r\n    loadForm() {\r\n        this.createFolderForm = this.formBuilder.group({\r\n            parent_folder: [this.current_folder, Validators.required],\r\n            folder_name: ['', Validators.required],\r\n            folder_desc: ['']\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isSubmitted = true;\r\n        if (this.createFolderForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.fbService.createFolder(this.createFolderForm.value).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('file_browser.messages.create_folder'), this.translate.instant('file_browser.title'));\r\n            this.onCancel();\r\n        });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsCreateFolderModalRef.hide();\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmlsZS1icm93c2VyL2NvbXBvbmVudHMvZWRpdC1maWxlLW1vZGFsL2VkaXQtZmlsZS1tb2RhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {File} from '../../../../shared/models/file.model';\r\n\r\nimport {FileBrowserService} from '../../../../core/services/file-browser.service';\r\n\r\n@Component({\r\n    selector: 'app-edit-file-modal',\r\n    templateUrl: './edit-file-modal.component.html',\r\n    styleUrls: ['./edit-file-modal.component.scss']\r\n})\r\n\r\nexport class EditFileModalComponent implements OnInit {\r\n    public onClose: Subject<boolean>;\r\n    editFileForm: FormGroup;\r\n    file: File;\r\n    isSubmitted = false;\r\n    renameFileFailederrors = [];\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsEditFileModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private fbService: FileBrowserService,\r\n        private toastr: ToastrService\r\n    ) {\r\n    }\r\n\r\n    get fileControl() {\r\n        return this.editFileForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.loadForm();\r\n    }\r\n\r\n    loadForm() {\r\n        this.editFileForm = this.formBuilder.group({\r\n            id: [this.file.id],\r\n            file_name: [this.file.file_name, Validators.required]\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isSubmitted = true;\r\n        if (this.editFileForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.fbService.updateFile(this.editFileForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('file_browser.messages.update_file'), this.translate.instant('file_browser.title'));\r\n                    this.onCancel();\r\n                });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsEditFileModalRef.hide();\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmlsZS1icm93c2VyL2NvbXBvbmVudHMvZWRpdC1mb2xkZXItbW9kYWwvZWRpdC1mb2xkZXItbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {Folder} from '../../../../shared/models/folder.model';\r\n\r\nimport {FileBrowserService} from '../../../../core/services/file-browser.service';\r\n\r\n@Component({\r\n    selector: 'app-edit-folder-modal',\r\n    templateUrl: './edit-folder-modal.component.html',\r\n    styleUrls: ['./edit-folder-modal.component.scss']\r\n})\r\n\r\nexport class EditFolderModalComponent implements OnInit {\r\n    public onClose: Subject<boolean>;\r\n    editFolderForm: FormGroup;\r\n    isSubmitted = false;\r\n    folder: Folder;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsEditFolderModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private fbService: FileBrowserService,\r\n        private toastr: ToastrService\r\n    ) {\r\n    }\r\n\r\n    get folderControl() {\r\n        return this.editFolderForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.loadForm();\r\n    }\r\n\r\n    loadForm() {\r\n        this.editFolderForm = this.formBuilder.group({\r\n            id: [this.folder.id],\r\n            folder_name: [this.folder.folder_name, Validators.required],\r\n            folder_desc: [this.folder.folder_desc]\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isSubmitted = true;\r\n        if (this.editFolderForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.fbService.updateFolder(this.editFolderForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('file_browser.messages.update_folder'), this.translate.instant('file_browser.title'));\r\n                    this.onCancel();\r\n                });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsEditFolderModalRef.hide();\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmlsZS1icm93c2VyL2NvbXBvbmVudHMvdXBsb2FkLWZpbGVzLW1vZGVsL3VwbG9hZC1maWxlcy1tb2RlbC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {FileUploader} from 'ng2-file-upload';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {AuthenticationService} from '../../../../core/services/authentication.service';\r\nimport {FileBrowserService} from '../../../../core/services/file-browser.service';\r\n\r\nimport {environment} from '../../../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-upload-files-model',\r\n    templateUrl: './upload-files-model.component.html',\r\n    styleUrls: ['./upload-files-model.component.scss']\r\n})\r\n\r\nexport class UploadFilesModelComponent implements OnInit {\r\n    public uploader: FileUploader;\r\n    public onClose: Subject<boolean>;\r\n    hasBaseDropZoneOver: boolean;\r\n    current_folder: number;\r\n    loginToken: any;\r\n    attachmentsArr = [];\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsCreateFileModalRef: BsModalRef,\r\n        private toastr: ToastrService,\r\n        private fbService: FileBrowserService,\r\n        private authenticationService: AuthenticationService,\r\n    ) {\r\n        this.loginToken = this.authenticationService.currentTokenValue;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.uploader = new FileUploader({\r\n            url: this.apiUrl + '/api/files/upload',\r\n            authToken: this.loginToken.token_type + ' ' + this.loginToken.token,\r\n            additionalParameter: {folder: this.current_folder},\r\n            method: 'post',\r\n            removeAfterUpload: false,\r\n            autoUpload: true,\r\n            isHTML5: true,\r\n        });\r\n\r\n        this.hasBaseDropZoneOver = false;\r\n        this.onClose = new Subject();\r\n        this.uploader.onBeforeUploadItem = (item) => {\r\n            item.withCredentials = false;\r\n        };\r\n\r\n        this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\r\n            let obj = JSON.parse(response);\r\n            if (obj.success) {\r\n                this.attachmentsArr.push(obj.id);\r\n                this.toastr.success(this.translate.instant('file_browser.messages.upload_file'), this.translate.instant('file_browser.title'));\r\n            }\r\n        };\r\n    }\r\n\r\n    public fileOverBase(e: any): void {\r\n        this.hasBaseDropZoneOver = e;\r\n    }\r\n\r\n    public uploaderRemove(id) {\r\n        let index = this.attachmentsArr.indexOf(id);\r\n        if (index > -1) {\r\n            let dataObj = {\r\n                id: id,\r\n            };\r\n            this.fbService.removeAttachments(dataObj).subscribe(data => {\r\n                this.toastr.success(this.translate.instant('file_browser.messages.delete_file'), this.translate.instant('file_browser.title'));\r\n            });\r\n            this.attachmentsArr.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsCreateFileModalRef.hide();\r\n    }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport {FileBrowserComponent} from './pages/file-browser/file-browser.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: FileBrowserComponent\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class FileBrowserRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {FileUploadModule} from 'ng2-file-upload';\r\nimport {FileSaverModule} from 'ngx-filesaver';\r\nimport {NgxPermissionsModule} from 'ngx-permissions';\r\nimport {NgxEditorModule} from 'ngx-editor';\r\nimport {BsDropdownModule, ModalModule, TooltipModule} from 'ngx-bootstrap';\r\nimport {ProgressbarModule} from 'ngx-bootstrap/progressbar';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\n\r\nimport {FileBrowserRoutingModule} from './file-browser-routing.module';\r\nimport {SharedModule} from '../../shared/shared.module';\r\n\r\nimport {FileBrowserComponent} from './pages/file-browser/file-browser.component';\r\nimport {UploadFilesModelComponent} from './components/upload-files-model/upload-files-model.component';\r\nimport {CreateFolderModelComponent} from './components/create-folder-model/create-folder-model.component';\r\nimport {EditFolderModalComponent} from './components/edit-folder-modal/edit-folder-modal.component';\r\nimport {EditFileModalComponent} from './components/edit-file-modal/edit-file-modal.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FileBrowserComponent,\r\n        UploadFilesModelComponent,\r\n        CreateFolderModelComponent,\r\n        EditFolderModalComponent,\r\n        EditFolderModalComponent,\r\n        EditFileModalComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FileBrowserRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgxPermissionsModule,\r\n        NgxEditorModule,\r\n        FileUploadModule,\r\n        HttpClientModule,\r\n        FileSaverModule,\r\n        ModalModule.forRoot(),\r\n        TooltipModule.forRoot(),\r\n        ProgressbarModule.forRoot(),\r\n        BsDropdownModule.forRoot(),\r\n        TranslateModule.forChild({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (HttpLoaderFactory),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        SharedModule\r\n    ],\r\n    entryComponents: [\r\n        UploadFilesModelComponent,\r\n        EditFileModalComponent,\r\n        CreateFolderModelComponent,\r\n        EditFolderModalComponent\r\n    ]\r\n})\r\n\r\nexport class FileBrowserModule {\r\n}\r\n\r\n// Required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmlsZS1icm93c2VyL3BhZ2VzL2ZpbGUtYnJvd3Nlci9maWxlLWJyb3dzZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {FileSaverService} from 'ngx-filesaver';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {FileBrowserService} from '../../../../core/services/file-browser.service';\r\nimport {AuthenticationService} from '../../../../core/services/authentication.service';\r\n\r\nimport {UploadFilesModelComponent} from '../../components/upload-files-model/upload-files-model.component';\r\nimport {EditFileModalComponent} from '../../components/edit-file-modal/edit-file-modal.component';\r\nimport {CreateFolderModelComponent} from '../../components/create-folder-model/create-folder-model.component';\r\nimport {EditFolderModalComponent} from '../../components/edit-folder-modal/edit-folder-modal.component';\r\n\r\nimport {environment} from '../../../../../environments/environment';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-file-browser',\r\n    templateUrl: './file-browser.component.html',\r\n    styleUrls: ['./file-browser.component.scss']\r\n})\r\n\r\nexport class FileBrowserComponent implements OnInit {\r\n    public modalRef: BsModalRef;\r\n    loginUser: any;\r\n    current_folder: any = 0;\r\n    files: any;\r\n    folders: any;\r\n    breadcrumbs: any;\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private modalService: BsModalService,\r\n        private toastr: ToastrService,\r\n        private fbService: FileBrowserService,\r\n        private _http: HttpClient,\r\n        private _FileSaverService: FileSaverService,\r\n        public authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getFolderBreadcrumb();\r\n        this.getFolders();\r\n        this.getFiles();\r\n    }\r\n\r\n    getFileFolders(id) {\r\n        this.current_folder = id;\r\n        this.getFolderBreadcrumb();\r\n        this.getFolders();\r\n        this.getFiles();\r\n    }\r\n\r\n    getFolderBreadcrumb() {\r\n        let reqObj = {folder: this.current_folder};\r\n        this.fbService.getFolderBreadcrumb(reqObj).subscribe(resp => {\r\n            this.breadcrumbs = resp;\r\n        });\r\n    }\r\n\r\n    getFolders() {\r\n        let reqObj = {folder: this.current_folder};\r\n        this.fbService.getFolders(reqObj).subscribe(resp => {\r\n            this.folders = resp;\r\n        });\r\n    }\r\n\r\n    isEmptyObject(obj) {\r\n        return (obj && (Object.keys(obj).length === 0));\r\n    }\r\n\r\n    getFiles() {\r\n        let reqObj = {folder: this.current_folder};\r\n        this.fbService.getFiles(reqObj).subscribe(resp => {\r\n            this.files = resp;\r\n            if (this.files) {\r\n                // --\r\n                // Render files based on file type\r\n                for (let iRow in this.files) {\r\n                    switch (this.files[iRow].file_extension) {\r\n                        case 'txt':\r\n                            this.files[iRow].icon = 'fa fa-file-text';\r\n                            break;\r\n                        case 'mp3':\r\n                        case 'wav':\r\n                        case 'raw':\r\n                        case 'tta':\r\n                            this.files[iRow].icon = 'fa fa-music';\r\n                            break;\r\n                        case 'webm':\r\n                        case 'flv':\r\n                        case 'ogg':\r\n                        case 'mov':\r\n                        case 'mp4':\r\n                        case 'm4p':\r\n                        case 'mpeg':\r\n                        case 'f4v':\r\n                        case '3gp':\r\n                            this.files[iRow].icon = 'fa fa-film';\r\n                            break;\r\n                        case 'pdf':\r\n                            this.files[iRow].icon = 'fa fa-file-pdf-o';\r\n                            break;\r\n                        case 'jpeg':\r\n                        case 'jpg':\r\n                        case 'png':\r\n                        case 'gif':\r\n                        case 'bmp':\r\n                        case 'svg':\r\n                            this.files[iRow].isImageFile = true;\r\n                            break;\r\n                        default:\r\n                            this.files[iRow].isImageFile = false;\r\n                            this.files[iRow].icon = 'fa fa-file';\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    getParentFolderId() {\r\n        this.fbService.getById(this.current_folder).subscribe(resp => {\r\n            this.current_folder = resp;\r\n            this.getFileFolders(this.current_folder);\r\n        });\r\n    }\r\n\r\n    uploadFileModal() {\r\n        let modalConfig = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-md animated fadeIn',\r\n            initialState: {\r\n                current_folder: this.current_folder\r\n            }\r\n        };\r\n        this.modalRef = this.modalService.show(UploadFilesModelComponent, modalConfig);\r\n        this.modalRef.content.onClose.subscribe(result => {\r\n            this.getFileFolders(this.current_folder);\r\n        });\r\n    }\r\n\r\n    opneFileEditModal(file) {\r\n        let modalConfig = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-md animated fadeIn',\r\n            initialState: {\r\n                file: file\r\n            }\r\n        };\r\n\r\n        this.modalRef = this.modalService.show(EditFileModalComponent, modalConfig);\r\n        this.modalRef.content.onClose.subscribe(result => {\r\n            this.getFileFolders(this.current_folder);\r\n        });\r\n    }\r\n\r\n    openFolderCreateModal() {\r\n        let modalConfig = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-md animated fadeIn',\r\n            initialState: {\r\n                current_folder: this.current_folder\r\n            }\r\n        };\r\n        this.modalRef = this.modalService.show(CreateFolderModelComponent, modalConfig);\r\n        this.modalRef.content.onClose.subscribe(result => {\r\n            this.getFileFolders(this.current_folder);\r\n        });\r\n    }\r\n\r\n    openFolderEditModal(folder) {\r\n        let modalConfig = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-md animated fadeIn',\r\n            initialState: {\r\n                folder: folder\r\n            }\r\n        };\r\n\r\n        this.modalRef = this.modalService.show(EditFolderModalComponent, modalConfig);\r\n        this.modalRef.content.onClose.subscribe(result => {\r\n            this.getFileFolders(this.current_folder);\r\n        });\r\n    }\r\n\r\n    deleteFolder(id) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text') + ' ' + this.translate.instant('file_browser.title6'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.fbService.deleteFolder(id)\r\n                    .subscribe(\r\n                        data => {\r\n                            this.toastr.success(this.translate.instant('file_browser.messages.delete_folder'), this.translate.instant('file_browser.title'));\r\n                            this.getFileFolders(this.current_folder);\r\n                        });\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteFile(id) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text') + ' ' + this.translate.instant('file_browser.title5'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.fbService.deleteFile(id)\r\n                    .subscribe(\r\n                        data => {\r\n                            this.toastr.success(this.translate.instant('file_browser.messages.delete_file'), this.translate.instant('file_browser.title'));\r\n                            this.getFileFolders(this.current_folder);\r\n                        });\r\n            }\r\n        });\r\n\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}