{"version":3,"sources":["./src/app/modules/pm/project-planner/components/create-project-modal/create-project-modal.component.html","./src/app/modules/pm/project-planner/components/create-sprint-modal/create-sprint-modal.component.html","./src/app/modules/pm/project-planner/components/create-sprint-task-modal/create-sprint-task-modal.component.html","./src/app/modules/pm/project-planner/components/create-task-modal/create-task-modal.component.html","./src/app/modules/pm/project-planner/components/edit-project-modal/edit-project-modal.component.html","./src/app/modules/pm/project-planner/components/edit-sprint-modal/edit-sprint-modal.component.html","./src/app/modules/pm/project-planner/components/edit-sprint-task-modal/edit-sprint-task-modal.component.html","./src/app/modules/pm/project-planner/components/edit-task-modal/edit-task-modal.component.html","./src/app/modules/pm/project-planner/components/move-task-modal/move-task-modal.component.html","./src/app/modules/pm/project-planner/pages/project-planner-detail/project-planner-detail.component.html","./src/app/modules/pm/project-planner/pages/project-planner-list/project-planner-list.component.html","./src/app/core/services/client.service.ts","./src/app/core/services/project-planner-sprint.service.ts","./src/app/core/services/project.service.ts","./src/app/modules/pm/project-planner/components/create-project-modal/create-project-modal.component.scss","./src/app/modules/pm/project-planner/components/create-project-modal/create-project-modal.component.ts","./src/app/modules/pm/project-planner/components/create-sprint-modal/create-sprint-modal.component.scss","./src/app/modules/pm/project-planner/components/create-sprint-modal/create-sprint-modal.component.ts","./src/app/modules/pm/project-planner/components/create-sprint-task-modal/create-sprint-task-modal.component.scss","./src/app/modules/pm/project-planner/components/create-sprint-task-modal/create-sprint-task-modal.component.ts","./src/app/modules/pm/project-planner/components/create-task-modal/create-task-modal.component.scss","./src/app/modules/pm/project-planner/components/create-task-modal/create-task-modal.component.ts","./src/app/modules/pm/project-planner/components/edit-project-modal/edit-project-modal.component.scss","./src/app/modules/pm/project-planner/components/edit-project-modal/edit-project-modal.component.ts","./src/app/modules/pm/project-planner/components/edit-sprint-modal/edit-sprint-modal.component.scss","./src/app/modules/pm/project-planner/components/edit-sprint-modal/edit-sprint-modal.component.ts","./src/app/modules/pm/project-planner/components/edit-sprint-task-modal/edit-sprint-task-modal.component.scss","./src/app/modules/pm/project-planner/components/edit-sprint-task-modal/edit-sprint-task-modal.component.ts","./src/app/modules/pm/project-planner/components/edit-task-modal/edit-task-modal.component.scss","./src/app/modules/pm/project-planner/components/edit-task-modal/edit-task-modal.component.ts","./src/app/modules/pm/project-planner/components/move-task-modal/move-task-modal.component.scss","./src/app/modules/pm/project-planner/components/move-task-modal/move-task-modal.component.ts","./src/app/modules/pm/project-planner/pages/project-planner-detail/project-planner-detail.component.scss","./src/app/modules/pm/project-planner/pages/project-planner-detail/project-planner-detail.component.ts","./src/app/modules/pm/project-planner/pages/project-planner-list/project-planner-list.component.scss","./src/app/modules/pm/project-planner/pages/project-planner-list/project-planner-list.component.ts","./src/app/modules/pm/project-planner/project-planner-routing.module.ts","./src/app/modules/pm/project-planner/project-planner.module.ts"],"names":[],"mappings":"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","file":"modules-pm-project-planner-project-planner-module.js","sourcesContent":["export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-product-hunt modal-icon\\\"></i>&nbsp;{{'projects.title1' | translate}}</h2>\\r\\n    <button (click)=\\\"onCancel()\\\" class=\\\"close\\\" type=\\\"button\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"createProjectForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"project_name\\\">{{'projects.create.fields.project_name' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectControl.project_name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"project_name\\\" id=\\\"project_name\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder1' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectControl.project_name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectControl.project_name.errors.required\\\">{{'projects.create.error_messages.message1' | translate}}</div>\\r\\n                            <div *ngIf=\\\"projectControl.project_name.errors.maxlength\\\">{{'projects.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"project_version\\\">{{'projects.create.fields.version' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectControl.project_version.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"project_version\\\" id=\\\"project_version\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder2' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectControl.project_version.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectControl.project_version.errors.required\\\">{{'projects.create.error_messages.message3' | translate}}</div>\\r\\n                            <div *ngIf=\\\"projectControl.project_version.errors.pattern\\\">{{'projects.create.error_messages.message4' | translate}}</div>\\r\\n                        </div>\\r\\n                        <span class=\\\"badge badge-secondary\\\">{{'projects.budges.version' | translate }}: 1.0, 1.1, 1.2</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectControl.start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"start_date\\\">{{'projects.create.fields.start_date' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp1=\\\"bsDatepicker\\\" (bsValueChange)=\\\"startDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"start_date\\\" id=\\\"start_date\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder7' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectControl.start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectControl.start_date.errors.required\\\">{{'projects.create.error_messages.message9' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectControl.end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"end-date\\\">{{'projects.create.fields.end_date' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp2=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [minDate]=\\\"createProjectForm.get('start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"end_date\\\" id=\\\"end_date\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder8' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectControl.end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectControl.end_date.errors.required\\\">{{'projects.create.error_messages.message10' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!loginUser.is_client\\\" class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"client_id\\\">{{'projects.create.fields.client_name' | translate}}</label>\\r\\n                        <ng-select [items]=\\\"clients\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"client_id\\\" labelForId=\\\"client_id\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder3' | translate}}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>{{item.firstname}} {{item.lastname}}</ng-template>\\r\\n                        </ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"estimated_hours\\\">{{'projects.create.fields.estimate_hours' | translate}}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectControl.estimated_hours.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"estimated_hours\\\" placeholder=\\\"00:00\\\" type=\\\"text\\\">\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectControl.estimated_hours.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectControl.estimated_hours.errors.pattern\\\">{{'projects.create.error_messages.message11' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectControl.status.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"status\\\">{{'projects.create.fields.status' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                        </label>\\r\\n                        <ng-select [items]=\\\"('projects.status' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"status\\\" labelForId=\\\"status\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder4' | translate}}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectControl.status.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectControl.status.errors.required\\\">{{'projects.create.error_messages.message6' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"assign_to\\\">{{'projects.create.fields.assigned_group' | translate}}</label>\\r\\n                        <ng-select (change)=\\\"assignGroupChange($event)\\\" [items]=\\\"teams\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"team_name\\\" bindValue=\\\"id\\\" formControlName=\\\"assign_to\\\" labelForId=\\\"assign_to\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder5' | translate}}\\\"></ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"assign_members\\\">{{'projects.create.fields.assigned_To' | translate}}</label>\\r\\n                        <ng-select [items]=\\\"teamsMembers\\\" [multiple]=\\\"true\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"assign_members\\\" labelForId=\\\"assign_members\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder6' | translate}}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>{{item.firstname}} {{item.lastname}}</ng-template>\\r\\n                        </ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectControl.demo_url.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"demo_url\\\">{{'projects.create.fields.demo_URL' | translate }}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectControl.demo_url.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"demo_url\\\" id=\\\"demo_url\\\" placeholder=\\\"https://example.com\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectControl.demo_url.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectControl.demo_url.errors.pattern\\\">{{'projects.create.error_messages.message8' | translate }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"type\\\">{{'projects.create.fields.billing_type' | translate }}</label>\\r\\n                        <ng-select [items]=\\\"('projects.billing_types' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"billing_type\\\" labelForId=\\\"billing_type\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder9' | translate }}\\\"></ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"createProjectForm.get('billing_type').value == 1 || createProjectForm.get('billing_type').value == 2 || createProjectForm.get('billing_type').value == null\\\" class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group fixed_rate\\\">\\r\\n                        <label *ngIf=\\\"createProjectForm.get('billing_type').value == 1 || createProjectForm.get('billing_type').value == null\\\" for=\\\"price_rate\\\">{{'projects.create.fields.fixed_price' | translate }}</label>\\r\\n                        <label *ngIf=\\\"createProjectForm.get('billing_type').value == 2\\\" for=\\\"price_rate\\\">{{'projects.create.fields.hourly_rate' | translate }}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectControl.price_rate.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"price_rate\\\" id=\\\"price_rate\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder10' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectControl.price_rate.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectControl.price_rate.errors.minlength\\\">{{'projects.create.error_messages.message12' | translate }}</div>\\r\\n                            <div *ngIf=\\\"projectControl.price_rate.errors.pattern\\\">{{'projects.create.error_messages.message13' | translate }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"project_hours\\\">{{'projects.create.fields.project_hours' | translate }}</label><br>\\r\\n                        <div class=\\\"form-check checkbox-container\\\">\\r\\n                            <input class=\\\"form-check-input\\\" formControlName=\\\"project_hours\\\" id=\\\"project_hours\\\" type=\\\"checkbox\\\">\\r\\n                            <label></label>\\r\\n                            <span class=\\\"checkbox-checkmark\\\"></span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!createProjectForm.get('project_hours').value\\\" class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>{{'projects.create.fields.progress' | translate }}</label>\\r\\n                        <ng5-slider [options]=\\\"progressOptions\\\" formControlName=\\\"progress\\\"></ng5-slider>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>{{'projects.create.fields.project_logo' | translate }}</label>\\r\\n                        <input formControlName=\\\"project_logo\\\" type=\\\"hidden\\\">\\r\\n                        <div #logodropzone class=\\\"dropzone dz-clickable\\\">\\r\\n                            <div class=\\\"dz-default dz-message\\\">\\r\\n                                <span><strong>{{'projects.create.error_messages.message14' | translate }}</strong></span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"people-lists text-center\\\">\\r\\n                            <a (click)=\\\"setLogos(logo)\\\" *ngFor=\\\"let logo of logos;\\\" [ngClass]=\\\"{active: isActive(logo)}\\\" class=\\\"btn btn-profile-info rounded-circle text-dark\\\">\\r\\n                                <img alt=\\\"Project Logo\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/project/{{logo}}\\\"/>\\r\\n                            </a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"customFields.length > 0\\\" class=\\\"col-md-12\\\">\\r\\n                    <app-show-custom-field-element [controls]=\\\"createProjectForm.get('custom_field')\\\" [customFields]=\\\"customFields\\\" [formArray]=\\\"'custom_field'\\\" [formName]=\\\"createProjectForm\\\" [isFormSubmitted]=\\\"isFormSubmitted\\\"></app-show-custom-field-element>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"description\\\">{{'projects.create.fields.description' | translate}}</label>\\r\\n                        <app-ngx-editor [placeholder]=\\\"'projects.create.placeholders.placeholder11' | translate\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"description\\\" height=\\\"100px\\\" id=\\\"description\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.create' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-product-hunt modal-icon\\\"></i>&nbsp;{{'project_planner.sprint.title1' | translate}}\\r\\n    </h2>\\r\\n    <button (click)=\\\"onCancel()\\\" class=\\\"close\\\" type=\\\"button\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isPageLoaded\\\" [formGroup]=\\\"createProjectSprintForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"sprint_name\\\">{{'project_planner.sprint.create.fields.sprint_name' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintControl.sprint_name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"sprint_name\\\" id=\\\"sprint_name\\\" placeholder=\\\"{{'project_planner.sprint.create.placeholders.placeholder1' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintControl.sprint_name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintControl.sprint_name.errors.required\\\">{{'project_planner.sprint.create.error_messages.message1' | translate}}</div>\\r\\n                            <div *ngIf=\\\"projectSprintControl.sprint_name.errors.maxlength\\\">{{'project_planner.sprint.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"sprint_members\\\">{{'project_planner.sprint.create.fields.responsible' | translate}}</label>\\r\\n                        <ng-select [items]=\\\"users\\\" [multiple]=\\\"true\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"sprint_members\\\" labelForId=\\\"sprint_members\\\" placeholder=\\\"{{'project_planner.sprint.create.placeholders.placeholder2' | translate}}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                {{item.firstname}} {{item.lastname}}\\r\\n                            </ng-template>\\r\\n                        </ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintControl.start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"start_date\\\">{{'project_planner.sprint.create.fields.start_date' | translate}}</label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp1=\\\"bsDatepicker\\\" (bsValueChange)=\\\"startDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" [maxDate]=\\\"projectEndDate\\\" [minDate]=\\\"projectStartDate\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"start_date\\\" id=\\\"start_date\\\" placeholder=\\\"{{'project_planner.sprint.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectSprintControl.start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectSprintControl.start_date.errors.required\\\">{{'project_planner.sprint.create.error_messages.message4' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintControl.end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"end-date\\\">{{'project_planner.sprint.create.fields.end_date' | translate}}</label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp2=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [maxDate]=\\\"projectEndDate\\\" [minDate]=\\\"createProjectSprintForm.get('start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"end_date\\\" id=\\\"end_date\\\" placeholder=\\\"{{'project_planner.sprint.create.placeholders.placeholder4' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectSprintControl.end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectSprintControl.end_date.errors.required\\\">{{'project_planner.sprint.create.error_messages.message5' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintControl.status.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"status\\\">{{'project_planner.sprint.create.fields.status' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <ng-select [items]=\\\"('project_planner.sprint.status' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"status\\\" labelForId=\\\"status\\\" placeholder=\\\"{{'project_planner.sprint.create.placeholders.placeholder5' | translate}}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintControl.status.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintControl.status.errors.required\\\">{{'project_planner.sprint.create.error_messages.message6' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"hours\\\">{{'project_planner.sprint.create.fields.estimate_hours' | translate}}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && (projectSprintControl.hours.errors || isHoursValid) }\\\" class=\\\"form-control\\\" formControlName=\\\"hours\\\" placeholder=\\\"00:00\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintControl.hours.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintControl.hours.errors.pattern\\\">{{'project_planner.sprint.create.error_messages.message7' | translate}}</div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isHoursValid\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"isHoursValid\\\">{{'project_planner.sprint.create.error_messages.message8' | translate}} {{this.project.estimated_hours}} {{'common.hours' | translate}}.</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"description\\\">{{'project_planner.sprint.create.fields.description' | translate}}</label>\\r\\n                        <app-ngx-editor [placeholder]=\\\"'project_planner.sprint.create.placeholders.placeholder6' | translate\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"description\\\" height=\\\"100px\\\" id=\\\"description\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.create' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-tasks modal-icon\\\"></i>&nbsp;{{'project_planner.sprint_task.title1' | translate}} {{sprint.type}}\\r\\n    </h2>\\r\\n    <button (click)=\\\"onCancel()\\\" class=\\\"close\\\" type=\\\"button\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isPageLoaded\\\" [formGroup]=\\\"createProjectSprintTaskForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">{{sprint.type}} {{'project_planner.sprint_task.create.fields.name' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder1' | translate}}{{sprint.type}} {{'project_planner.sprint_task.create.fields.name' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.name.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message1' | translate}} {{sprint.type | lowercase}} {{'project_planner.sprint_task.title3' | translate}}.</div>\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.name.errors.maxlength\\\">{{sprint.type}} {{'project_planner.sprint_task.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"assign_to\\\">{{'project_planner.sprint_task.create.fields.responsible' | translate}}</label>\\r\\n                        <ng-select [items]=\\\"users\\\" [multiple]=\\\"false\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"assign_to\\\" labelForId=\\\"assign_to\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder2' | translate}}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                {{item.firstname}} {{item.lastname}}\\r\\n                            </ng-template>\\r\\n                        </ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"start_date\\\">{{'project_planner.sprint_task.create.fields.start_date' | translate}}</label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp1=\\\"bsDatepicker\\\" (bsValueChange)=\\\"startDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" [maxDate]=\\\"sprintEndDate\\\" [minDate]=\\\"sprintStartDate\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"start_date\\\" id=\\\"start_date\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectSprintTaskControl.start_date.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message4' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"end-date\\\">{{'project_planner.sprint_task.create.fields.end_date' | translate}}</label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp2=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [maxDate]=\\\"sprintEndDate\\\" [minDate]=\\\"createProjectSprintTaskForm.get('start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"end_date\\\" id=\\\"end_date\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder4' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectSprintTaskControl.end_date.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message5' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.status.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"status\\\">{{'project_planner.sprint_task.create.fields.status' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <ng-select [items]=\\\"statusLists\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"status\\\" labelForId=\\\"status\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder5' | translate}}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.status.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.status.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message6' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"estimated_hours\\\">{{'project_planner.sprint_task.create.fields.estimate_hours' | translate}}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && (projectSprintTaskControl.estimated_hours.errors || isHoursValid) }\\\" class=\\\"form-control\\\" formControlName=\\\"estimated_hours\\\" placeholder=\\\"00:00\\\" type='text'/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.estimated_hours.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.estimated_hours.errors.pattern\\\">{{'project_planner.sprint_task.create.error_messages.message7' | translate}}</div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isHoursValid\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"isHoursValid\\\">{{'project_planner.sprint_task.create.error_messages.message8' | translate}} {{this.sprint.hours}} {{'common.hours' | translate}}.</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"description\\\">{{'project_planner.sprint_task.create.fields.description' | translate}}</label>\\r\\n                        <app-ngx-editor [placeholder]=\\\"'project_planner.sprint_task.create.placeholders.placeholder6' | translate\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"description\\\" height=\\\"100px\\\" id=\\\"description\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.create' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-tasks modal-icon\\\"></i>&nbsp;{{'common.create' | translate}} {{project.type}}\\r\\n    </h2>\\r\\n    <button (click)=\\\"onCancel()\\\" class=\\\"close\\\" type=\\\"button\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isPageLoaded\\\" [formGroup]=\\\"createProjectSprintTaskForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">{{project.type}} {{'project_planner.sprint_task.create.fields.name' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder7' | translate}}{{project.type}} {{'project_planner.sprint_task.create.fields.name' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.name.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message1' | translate}} {{project.type | lowercase}} {{'project_planner.sprint_task.title3' | translate}}.</div>\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.name.errors.maxlength\\\">{{project.type}} {{'project_planner.sprint_task.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"assign_to\\\">{{'project_planner.sprint_task.create.fields.responsible' | translate}}</label>\\r\\n                        <ng-select [items]=\\\"users\\\" [multiple]=\\\"false\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"assign_to\\\" labelForId=\\\"assign_to\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder2' | translate}}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                {{item.firstname}} {{item.lastname}}\\r\\n                            </ng-template>\\r\\n                        </ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"start_date\\\">{{'project_planner.sprint_task.create.fields.start_date' | translate}}</label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp1=\\\"bsDatepicker\\\" (bsValueChange)=\\\"startDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"start_date\\\" id=\\\"start_date\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectSprintTaskControl.start_date.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message4' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"end-date\\\">{{'project_planner.sprint_task.create.fields.end_date' | translate}}</label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp2=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [minDate]=\\\"createProjectSprintTaskForm.get('start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"end_date\\\" id=\\\"end_date\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder4' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectSprintTaskControl.end_date.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message5' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.status.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"status\\\">{{'project_planner.sprint_task.create.fields.status' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <ng-select [items]=\\\"statusLists\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"status\\\" labelForId=\\\"status\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder5' | translate}}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.status.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.status.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message6' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"estimated_hours\\\">{{'project_planner.sprint_task.create.fields.estimate_hours' | translate}}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.estimated_hours.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"estimated_hours\\\" placeholder=\\\"00:00\\\" type='text'/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.estimated_hours.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.estimated_hours.errors.pattern\\\">{{'project_planner.sprint_task.create.error_messages.message7' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"description\\\">{{'project_planner.sprint_task.create.fields.description' | translate}}</label>\\r\\n                        <app-ngx-editor [placeholder]=\\\"'project_planner.sprint_task.create.placeholders.placeholder6' | translate\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"description\\\" height=\\\"100px\\\" id=\\\"description\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.create' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-product-hunt modal-icon\\\"></i>&nbsp;{{'projects.title2' | translate}}</h2>\\r\\n    <button (click)=\\\"onCancel()\\\" class=\\\"close\\\" type=\\\"button\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isPageLoaded\\\" [formGroup]=\\\"editProjectForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"generated_id\\\">{{'projects.create.fields.project_id' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"generated_id\\\" id=\\\"generated_id\\\" readonly type=\\\"text\\\"/>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"project_name\\\">{{'projects.create.fields.project_name' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectPlannerControl.project_name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"project_name\\\" id=\\\"project_name\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder1' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectPlannerControl.project_name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectPlannerControl.project_name.errors.required\\\">{{'projects.create.error_messages.message1' | translate }}</div>\\r\\n                            <div *ngIf=\\\"projectPlannerControl.project_name.errors.maxlength\\\">{{'projects.create.error_messages.message2' | translate }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"project_version\\\">{{'projects.create.fields.version' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectPlannerControl.project_version.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"project_version\\\" id=\\\"project_version\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder2' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectPlannerControl.project_version.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectPlannerControl.project_version.errors.required\\\">{{'projects.create.error_messages.message3' | translate }}</div>\\r\\n                            <div *ngIf=\\\"projectPlannerControl.project_version.errors.pattern\\\">{{'projects.create.error_messages.message4' | translate }}</div>\\r\\n                        </div>\\r\\n                        <span *ngIf=\\\"oldVersion\\\" class=\\\"badge badge-success\\\">{{oldVersion}},</span>\\r\\n                        <span class=\\\"badge badge-success\\\">{{'projects.budges.current_version' | translate }} {{currentVersion}}</span>\\r\\n                        <span class=\\\"badge badge-secondary\\\">{{'projects.budges.version' | translate }}: 1.0, 1.1, 1.2</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!loginUser.is_client\\\" class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"client_id\\\">{{'projects.create.fields.client_name' | translate }}</label>\\r\\n                        <ng-select [items]=\\\"clients\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"client_id\\\" labelForId=\\\"client_id\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder3' | translate }}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>{{item.firstname}} {{item.lastname}}</ng-template>\\r\\n                        </ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectPlannerControl.start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"start_date\\\">{{'projects.create.fields.start_date' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp1=\\\"bsDatepicker\\\" (onHidden)=\\\"startDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"start_date\\\" id=\\\"start_date\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder7' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectPlannerControl.start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectPlannerControl.start_date.errors.required\\\">{{'projects.create.error_messages.message9' | translate }}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectPlannerControl.end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"end-date\\\">{{'projects.create.fields.end_date' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp2=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [minDate]=\\\"editProjectForm.get('start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"end_date\\\" id=\\\"end_date\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder8' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectPlannerControl.end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectPlannerControl.end_date.errors.required\\\">{{'projects.create.error_messages.message10' | translate }}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"estimated_hours\\\">{{'projects.create.fields.estimate_hours' | translate }}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectPlannerControl.estimated_hours.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"estimated_hours\\\" placeholder=\\\"00:00\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectPlannerControl.estimated_hours.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectPlannerControl.estimated_hours.errors.pattern\\\">{{'projects.create.error_messages.message11' | translate }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectPlannerControl.status.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"status\\\">{{'projects.create.fields.status' | translate }}&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                        </label>\\r\\n                        <ng-select [items]=\\\"('projects.status' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"status\\\" labelForId=\\\"status\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder4' | translate }}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectPlannerControl.status.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectPlannerControl.status.errors.required\\\">{{'projects.create.error_messages.message6' | translate }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"assign_to\\\">{{'projects.create.fields.assigned_group' | translate }}</label>\\r\\n                        <ng-select (change)=\\\"assignGroupChange($event)\\\" [items]=\\\"teams\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"team_name\\\" bindValue=\\\"id\\\" formControlName=\\\"assign_to\\\" labelForId=\\\"assign_to\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder5' | translate }}\\\"></ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"assign_members\\\">{{'projects.create.fields.assigned_To' | translate }}</label>\\r\\n                        <ng-select [items]=\\\"teamsMembers\\\" [multiple]=\\\"true\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" formControlName=\\\"assign_members\\\" labelForId=\\\"assign_members\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder6' | translate }}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                {{item.firstname}} {{item.lastname}}\\r\\n                            </ng-template>\\r\\n                        </ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"demo_url\\\">{{'projects.create.fields.demo_URL' | translate }}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectPlannerControl.demo_url.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"demo_url\\\" id=\\\"demo_url\\\" placeholder=\\\"https://example.com\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectPlannerControl.demo_url.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectPlannerControl.demo_url.errors.pattern\\\">{{'projects.create.error_messages.message8' | translate }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"type\\\">{{'projects.create.fields.billing_type' | translate }}</label>\\r\\n                        <ng-select [items]=\\\"('projects.billing_types' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"billing_type\\\" labelForId=\\\"billing_type\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder9' | translate }}\\\"></ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"editProjectForm.get('billing_type').value == 1 || editProjectForm.get('billing_type').value == 2 || editProjectForm.get('billing_type').value == null \\\" class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group fixed_rate\\\">\\r\\n                        <label *ngIf=\\\"editProjectForm.get('billing_type').value == 1 || editProjectForm.get('billing_type').value == null\\\" for=\\\"price_rate\\\">{{'projects.create.fields.fixed_price' | translate }}</label>\\r\\n                        <label *ngIf=\\\"editProjectForm.get('billing_type').value == 2\\\" for=\\\"price_rate\\\">{{'projects.create.fields.hourly_rate' | translate }}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectPlannerControl.price_rate.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"price_rate\\\" id=\\\"price_rate\\\" placeholder=\\\"{{'projects.create.placeholders.placeholder10' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectPlannerControl.price_rate.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectPlannerControl.price_rate.errors.min\\\">{{'projects.create.error_messages.message12' | translate }}</div>\\r\\n                            <div *ngIf=\\\"projectPlannerControl.price_rate.errors.pattern\\\">{{'projects.create.error_messages.message13' | translate }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"project_hours\\\">{{'projects.create.fields.project_hours' | translate }}</label><br>\\r\\n                        <div class=\\\"form-check checkbox-container\\\">\\r\\n                            <input class=\\\"form-check-input\\\" formControlName=\\\"project_hours\\\" id=\\\"project_hours\\\" type=\\\"checkbox\\\">\\r\\n                            <label></label>\\r\\n                            <span class=\\\"checkbox-checkmark\\\"></span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!editProjectForm.get('project_hours').value\\\" class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>{{'projects.create.fields.progress' | translate }}</label>\\r\\n                        <ng5-slider [options]=\\\"progressOptions\\\" formControlName=\\\"progress\\\"></ng5-slider>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>{{'projects.create.fields.project_logo' | translate }}</label>\\r\\n                        <input formControlName=\\\"project_logo\\\" type=\\\"hidden\\\">\\r\\n                        <div #logodropzone class=\\\"dropzone dz-clickable\\\">\\r\\n                            <div *ngIf=\\\"isLogoLoaded && project.project_logo\\\" class=\\\"dz-preview dz-image-preview\\\">\\r\\n                                <div class=\\\"dz-image\\\">\\r\\n                                    <img height=\\\"100\\\" src=\\\"{{apiUrl}}/uploads/project/{{project.project_logo}}\\\" width=\\\"100\\\"/>\\r\\n                                </div>\\r\\n                                <a (click)=\\\"removeDropzoneImage()\\\" class=\\\"btn btn-sm btn-block\\\">{{ 'common.remove_file' | translate }}</a>\\r\\n                            </div>\\r\\n                            <div class=\\\"dz-default dz-message\\\">\\r\\n                                <span><strong>{{ 'projects.create.error_messages.message14' | translate }}</strong></span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"people-lists text-center\\\">\\r\\n                            <a (click)=\\\"setLogos(logo)\\\" *ngFor=\\\"let logo of logos;\\\" [ngClass]=\\\"{active: isActive(logo)}\\\" class=\\\"btn btn-profile-info rounded-circle text-dark\\\">\\r\\n                                <img alt=\\\"Project Logo\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/project/{{logo}}\\\"/>\\r\\n                            </a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"customFields.length > 0\\\" class=\\\"col-md-12\\\">\\r\\n                    <app-show-custom-field-element [controls]=\\\"editProjectForm.get('custom_field')\\\" [customFields]=\\\"customFields\\\" [formArray]=\\\"'custom_field'\\\" [formName]=\\\"editProjectForm\\\" [isFormSubmitted]=\\\"isFormSubmitted\\\"></app-show-custom-field-element>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"description\\\">{{'projects.create.fields.description' | translate }}</label>\\r\\n                        <app-ngx-editor [placeholder]=\\\"'projects.create.placeholders.placeholder11' | translate\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"description\\\" height=\\\"100px\\\" id=\\\"description\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.update' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-product-hunt modal-icon\\\"></i>&nbsp;{{'project_planner.sprint.title2' | translate}}\\r\\n    </h2>\\r\\n    <button (click)=\\\"onCancel()\\\" class=\\\"close\\\" type=\\\"button\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isPageLoaded\\\" [formGroup]=\\\"editProjectSprintForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"sprint_name\\\">{{'project_planner.sprint.create.fields.sprint_name' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintControl.sprint_name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"sprint_name\\\" id=\\\"sprint_name\\\" placeholder=\\\"{{'project_planner.sprint.create.placeholders.placeholder1' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintControl.sprint_name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintControl.sprint_name.errors.required\\\">{{'project_planner.sprint.create.error_messages.message1' | translate}}</div>\\r\\n                            <div *ngIf=\\\"projectSprintControl.sprint_name.errors.maxlength\\\">{{'project_planner.sprint.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"sprint_members\\\">{{'project_planner.sprint.create.fields.responsible' | translate}} &nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <ng-select [items]=\\\"users\\\" [multiple]=\\\"true\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" formControlName=\\\"sprint_members\\\" labelForId=\\\"sprint_members\\\" placeholder=\\\"{{'project_planner.sprint.create.placeholders.placeholder2' | translate}}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                {{item.firstname}} {{item.lastname}}\\r\\n                            </ng-template>\\r\\n                        </ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintControl.start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"start_date\\\">{{'project_planner.sprint.create.fields.start_date' | translate}}</label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp1=\\\"bsDatepicker\\\" (onHidden)=\\\"startDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" [maxDate]=\\\"projectEndDate\\\" [minDate]=\\\"projectStartDate\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"start_date\\\" id=\\\"start_date\\\" placeholder=\\\"{{'project_planner.sprint.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectSprintControl.start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectSprintControl.start_date.errors.required\\\">{{'project_planner.sprint.create.error_messages.message4' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintControl.end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"end-date\\\">{{'project_planner.sprint.create.fields.end_date' | translate}}</label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp2=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [maxDate]=\\\"projectEndDate\\\" [minDate]=\\\"editProjectSprintForm.get('start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"end_date\\\" id=\\\"end_date\\\" placeholder=\\\"{{'project_planner.sprint.create.placeholders.placeholder4' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectSprintControl.end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectSprintControl.end_date.errors.required\\\">{{'project_planner.sprint.create.error_messages.message5' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintControl.status.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"status\\\">{{'project_planner.sprint.create.fields.status' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <ng-select [items]=\\\"('project_planner.sprint.status' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"id\\\" formControlName=\\\"status\\\" labelForId=\\\"status\\\" placeholder=\\\"{{'project_planner.sprint.create.placeholders.placeholder5' | translate}}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintControl.status.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintControl.status.errors.required\\\">{{'project_planner.sprint.create.error_messages.message6' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"hours\\\">{{'project_planner.sprint.create.fields.estimate_hours' | translate}}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && (projectSprintControl.hours.errors || isHoursValid) }\\\" class=\\\"form-control\\\" formControlName=\\\"hours\\\" placeholder=\\\"00:00\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintControl.hours.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintControl.hours.errors.pattern\\\">{{'project_planner.sprint.create.error_messages.message7' | translate}}</div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isHoursValid\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"isHoursValid\\\">{{'project_planner.sprint.create.error_messages.message8' | translate}} {{this.project.estimated_hours}} {{'common.hours' | translate}}.</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"description\\\">{{'project_planner.sprint.create.fields.description' | translate}}</label>\\r\\n                        <app-ngx-editor [placeholder]=\\\"'project_planner.sprint.create.placeholders.placeholder6' | translate\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"description\\\" height=\\\"100px\\\" id=\\\"description\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.update' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div *ngIf=\\\"isPageLoaded\\\" class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-tasks\\\"></i>&nbsp;{{'project_planner.sprint_task.title2' | translate}} {{task.type}}\\r\\n    </h2>\\r\\n    <button (click)=\\\"onCancel()\\\" class=\\\"close\\\" type=\\\"button\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isPageLoaded\\\" [formGroup]=\\\"editProjectSprintTaskForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">{{task.type}} {{'project_planner.sprint_task.create.fields.name' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder1' | translate}}{{task.type}} {{'project_planner.sprint_task.create.fields.name' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.name.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message1' | translate}} {{task.type | lowercase}} {{'project_planner.sprint_task.title3' | translate}}.</div>\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.name.errors.maxlength\\\">{{task.type}} {{'project_planner.sprint_task.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"assign_to\\\">{{'project_planner.sprint_task.create.fields.responsible' | translate}}</label>\\r\\n                        <ng-select [items]=\\\"users\\\" [multiple]=\\\"false\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"assign_to\\\" labelForId=\\\"assign_to\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder2' | translate}}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                {{item.firstname}} {{item.lastname}}\\r\\n                            </ng-template>\\r\\n                        </ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"start_date\\\">{{'project_planner.sprint_task.create.fields.start_date' | translate}}</label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp1=\\\"bsDatepicker\\\" (onHidden)=\\\"startDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" [maxDate]=\\\"sprintEndDate\\\" [minDate]=\\\"sprintStartDate\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"start_date\\\" id=\\\"start_date\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectSprintTaskControl.start_date.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message4' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"end-date\\\">{{'project_planner.sprint_task.create.fields.end_date' | translate}}</label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp2=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [maxDate]=\\\"sprintEndDate\\\" [minDate]=\\\"editProjectSprintTaskForm.get('start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"end_date\\\" id=\\\"end_date\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder4' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectSprintTaskControl.end_date.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message5' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.status.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"status\\\">{{'project_planner.sprint_task.create.fields.status' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <ng-select [items]=\\\"statusLists\\\" [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.status.errors }\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"status\\\" labelForId=\\\"status\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder5' | translate}}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.status.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.status.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message6' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"estimated_hours\\\">{{'project_planner.sprint_task.create.fields.estimate_hours' | translate}}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && (projectSprintTaskControl.estimated_hours.errors || isHoursValid) }\\\" class=\\\"form-control\\\" formControlName=\\\"estimated_hours\\\" placeholder=\\\"00:00\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.estimated_hours.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.estimated_hours.errors.pattern\\\">{{'project_planner.sprint_task.create.error_messages.message7' | translate}}</div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isHoursValid\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"isHoursValid\\\">{{'project_planner.sprint_task.create.error_messages.message8' | translate}} {{this.sprint.hours}} {{'common.hours' | translate}}.</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"description\\\">{{'project_planner.sprint_task.create.fields.description' | translate}}</label>\\r\\n                        <app-ngx-editor [placeholder]=\\\"'project_planner.sprint_task.create.placeholders.placeholder6' | translate\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"description\\\" height=\\\"100px\\\" id=\\\"description\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.update' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div *ngIf=\\\"isPageLoaded\\\" class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-tasks\\\"></i>&nbsp;{{'common.edit' | translate}} {{task.type}}</h2>\\r\\n    <button (click)=\\\"onCancel()\\\" class=\\\"close\\\" type=\\\"button\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isPageLoaded\\\" [formGroup]=\\\"editProjectSprintTaskForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">{{task.type}} {{'project_planner.sprint_task.create.fields.name' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder7' | translate}}{{task.type}} {{'project_planner.sprint_task.create.fields.name' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.name.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message1' | translate}} {{task.type | lowercase}} {{'project_planner.sprint_task.title3' | translate}}.</div>\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.name.errors.maxlength\\\">{{task.type}} {{'project_planner.sprint_task.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"assign_to\\\">{{'project_planner.sprint_task.create.fields.responsible' | translate}}</label>\\r\\n                        <ng-select [items]=\\\"users\\\" [multiple]=\\\"false\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"firstname\\\" bindValue=\\\"id\\\" formControlName=\\\"assign_to\\\" labelForId=\\\"assign_to\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder2' | translate}}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                {{item.firstname}} {{item.lastname}}\\r\\n                            </ng-template>\\r\\n                        </ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.start_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"start_date\\\">{{'project_planner.sprint_task.create.fields.start_date' | translate}}</label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp1=\\\"bsDatepicker\\\" (onHidden)=\\\"startDateChange($event)\\\" [bsConfig]=\\\"datepickerConfig\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"start_date\\\" id=\\\"start_date\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectSprintTaskControl.start_date.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message4' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.end_date.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"end-date\\\">{{'project_planner.sprint_task.create.fields.end_date' | translate}}</label>\\r\\n                        <div class=\\\"position-relative has-icon-left\\\">\\r\\n                            <input #dp2=\\\"bsDatepicker\\\" [bsConfig]=\\\"datepickerConfig\\\" [minDate]=\\\"editProjectSprintTaskForm.get('start_date').value\\\" bsDatepicker class=\\\"form-control\\\" formControlName=\\\"end_date\\\" id=\\\"end_date\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder4' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                            <div class=\\\"form-control-position\\\"><i class=\\\"ft-calendar\\\"></i></div>\\r\\n                            <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.end_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"projectSprintTaskControl.end_date.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message5' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.status.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"status\\\">{{'project_planner.sprint_task.create.fields.status' | translate}}&nbsp;<span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <ng-select [items]=\\\"statusLists\\\" [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.status.errors }\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"status\\\" labelForId=\\\"status\\\" placeholder=\\\"{{'project_planner.sprint_task.create.placeholders.placeholder5' | translate}}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.status.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.status.errors.required\\\">{{'project_planner.sprint_task.create.error_messages.message6' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"estimated_hours\\\">{{'project_planner.sprint_task.create.fields.estimate_hours' | translate}}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectSprintTaskControl.estimated_hours.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"estimated_hours\\\" placeholder=\\\"00:00\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectSprintTaskControl.estimated_hours.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectSprintTaskControl.estimated_hours.errors.pattern\\\">{{'project_planner.sprint_task.create.error_messages.message7' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"description\\\">{{'project_planner.sprint_task.create.fields.description' | translate}}</label>\\r\\n                        <app-ngx-editor [placeholder]=\\\"'project_planner.sprint_task.create.placeholders.placeholder6' | translate\\\" [spellcheck]=\\\"true\\\" formControlName=\\\"description\\\" height=\\\"100px\\\" id=\\\"description\\\" minHeight=\\\"50px\\\"></app-ngx-editor>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.update' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-arrows-alt modal-icon\\\"></i>&nbsp;{{'project_planner.move_sprint_task.title' | translate}}\\r\\n    </h2>\\r\\n    <button (click)=\\\"onCancel()\\\" class=\\\"close\\\" type=\\\"button\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isPageLoaded\\\" [formGroup]=\\\"moveTaskForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <!-- <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectPlannerControl.project_id.errors }\\\">\\r\\n                        <label for=\\\"project\\\">{{'project_planner.move_sprint_task.create.fields.project' | translate}}<span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <ng-select [searchable]=\\\"true\\\"\\r\\n                            [items]=\\\"projects\\\"\\r\\n                            [selectOnTab]=\\\"true\\\"\\r\\n                            bindLabel=\\\"project_name\\\"\\r\\n                            bindValue=\\\"id\\\"\\r\\n                            labelForId=\\\"project_id\\\"\\r\\n                            formControlName=\\\"project_id\\\"\\r\\n                            placeholder=\\\"{{'project_planner.move_sprint_task.create.placeholders.placeholder1' | translate}}\\\"\\r\\n                            (change)=\\\"projectChange($event)\\\">\\r\\n                            <ng-template ng-option-tmp let-item=\\\"item\\\">\\r\\n                                {{item.project_name}}\\r\\n                            </ng-template>\\r\\n                        </ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectPlannerControl.project_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectPlannerControl.project_id.errors.required\\\">{{'project_planner.move_sprint_task.create.error_messages.message1' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && projectPlannerControl.sprint_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"sprint_id\\\">{{'project_planner.move_sprint_task.create.fields.sprint' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <ng-select [items]=\\\"sprints\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"sprint_name\\\" bindValue=\\\"id\\\" formControlName=\\\"sprint_id\\\" labelForId=\\\"sprint_id\\\" placeholder=\\\"{{'project_planner.move_sprint_task.create.placeholders.placeholder2' | translate}}\\\">\\r\\n                            <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                                {{item.sprint_name}}\\r\\n                            </ng-template>\\r\\n                        </ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && projectPlannerControl.sprint_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"projectPlannerControl.sprint_id.errors.required\\\">{{'project_planner.move_sprint_task.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.move' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<section class=\\\"row detail-page project_planner\\\">\\r\\n    <div *ngIf=\\\"isPageLoaded\\\" class=\\\"card bg-transparent\\\">\\r\\n        <div class=\\\"card-content\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row mr-0 ml-0\\\">\\r\\n                    <div class=\\\"col-md-12 card-separator\\\">\\r\\n                        <div class=\\\"d-flex justify-content-between\\\">\\r\\n                            <div class=\\\"task-name d-lg-flex\\\">\\r\\n                                <h4 class=\\\"task-id\\\">\\r\\n                                    <span>#{{project.generated_id}} </span>\\r\\n                                </h4>\\r\\n                                <p class=\\\"task-title ml-lg-2\\\">\\r\\n                                    {{project.project_name}}\\r\\n                                </p>\\r\\n                            </div>\\r\\n                            <div class=\\\"task-action d-flex\\\">\\r\\n                                <button (click)=\\\"openEditProjectModal(project.id)\\\" *ngIf=\\\"permissions.project_permission || permissions.edit_delete_permission.edit\\\" class=\\\"btn btn-create mb-2 mb-lg-0 float-right\\\" tooltip=\\\"{{'common.edit' | translate}}\\\">\\r\\n                                    <i class=\\\"fa fa-pencil-square-o\\\"></i></button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 pr-0 pl-0 \\\">\\r\\n                        <form class=\\\"form-body overflow-hidden mt-3\\\">\\r\\n                            <!-- Detail fields -->\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-lg-4 pr-lg-3 pl-lg-2 pr-2 pl-2\\\">\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                    <div class=\\\"col card-separator mb-3\\\">\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'projects.create.fields.version' | translate}}</label>\\r\\n                                                            <div class=\\\"detail-inline\\\">{{project.project_version}}</div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'projects.create.fields.status' | translate}}</label>\\r\\n                                                            <div class=\\\"status-dropdown\\\">\\r\\n                                                                <ng-container *ngIf=\\\"permissions.project_permission || permissions.edit_delete_permission.edit; else elseBlock11\\\">\\r\\n                                                                    <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                                        <button aria-controls=\\\"dropdown-basic\\\" class=\\\"btn dropdown-toggle select-btn-lg\\\" dropdownToggle id=\\\"button-basic\\\" type=\\\"button\\\">{{getTranslateStatus(project.status) | translate}}&nbsp;<span class=\\\"caret\\\"></span>\\r\\n                                                                        </button>\\r\\n                                                                        <ul *dropdownMenu aria-labelledby=\\\"button-basic\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic\\\" role=\\\"menu\\\">\\r\\n                                                                            <li *ngFor=\\\"let status of ('projects.status' | translate)\\\" role=\\\"menuitem\\\">\\r\\n                                                                                <a (click)=\\\"changeProjectStatus([project.id], status);project.status = status.id\\\" [ngClass]=\\\"{'active': project.status == status.id}\\\" class=\\\"dropdown-item btn btn-sm {{status.class}}\\\">{{status.label}}</a>\\r\\n                                                                            </li>\\r\\n                                                                        </ul>\\r\\n                                                                    </div>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock11>\\r\\n                                                                    <ng-container *ngFor=\\\"let status of ('projects.status' | translate)\\\">\\r\\n                                                                        <div class=\\\"budges-status\\\">\\r\\n                                                                            <span *ngIf=\\\"status.id == project.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                                                        </div>\\r\\n                                                                    </ng-container>\\r\\n                                                                </ng-template>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'projects.create.fields.created_by' | translate}}</label>\\r\\n                                                            <div class=\\\"people-lists\\\">\\r\\n                                                                <a [routerLink]=\\\"['/users/profile', project.created_user.id]\\\" class=\\\"btn btn-profile-info rounded-circle text-dark\\\" placement=\\\"top\\\" tooltip=\\\"{{project.created_user.firstname}} {{project.created_user.lastname}}\\\">\\r\\n                                                                    <img *ngIf=\\\"project.created_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{project.created_user.avatar}}\\\"/>\\r\\n                                                                    <img *ngIf=\\\"!project.created_user.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                                </a>\\r\\n                                                                <span class=\\\"ml-1\\\">{{project.created_user.firstname}} {{project.created_user.lastname}}</span>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'projects.create.fields.assigned_To' | translate}}</label>\\r\\n                                                            <div class=\\\"people-lists\\\">\\r\\n                                                                <ng-container *ngIf=\\\"project.assign_members == 'Unassign' || project.assign_members == '' || project.assign_members == null; else elseBlock\\\">\\r\\n                                                                    <a class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" href=\\\"javascript:void(0);\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                                                                        <img alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/unassign.jpg\\\"/>\\r\\n                                                                    </a>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock>\\r\\n                                                                    <ng-container *ngFor=\\\"let user_id of project.assign_members | stringToArrayFilter index as i; odd as isOdd; even as isEven\\\">\\r\\n                                                                        <a *ngIf=\\\"userLists[user_id]\\\" [ngClass]=\\\"{'btn-profile-info popover-item': isOdd, 'btn-profile-danger': isEven, 'popover-item': i!=0}\\\" [routerLink]=\\\"['/users/profile', user_id]\\\" class=\\\"btn rounded-circle popover-item text-dark\\\" tooltip=\\\"{{userLists[user_id].firstname}} {{userLists[user_id].lastname}}\\\">\\r\\n                                                                            <img *ngIf=\\\"userLists[user_id].avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{userLists[user_id].avatar}}\\\"/>\\r\\n                                                                            <img *ngIf=\\\"!userLists[user_id].avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                                        </a>\\r\\n                                                                    </ng-container>\\r\\n                                                                </ng-template>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'projects.create.fields.completed' | translate}}</label>\\r\\n                                                            <div>\\r\\n                                                                <progressbar [animate]=\\\"true\\\" [value]=\\\"project.progress\\\" max=\\\"100\\\">\\r\\n                                                                    <strong>{{project.progress}}%</strong></progressbar>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"col-md-12 card-separator\\\">\\r\\n                                                        <div *ngIf=\\\"!loginUser.is_client\\\" class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'projects.create.fields.client_name' | translate}}</label>\\r\\n                                                            <div class=\\\"detail-inline\\\">\\r\\n                                                                <ng-container *ngIf=\\\"permissions.project_permission || permissions.edit_delete_permission.edit; else elseBlock4\\\">\\r\\n                                                                    <inline-edit-select (updateValue)=\\\"saveProjectDetail('client_id', $event);\\\" [elementFor]=\\\"'projects.inline_edit.client' | translate\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'firstname'\\\" [options]=\\\"clients\\\" [selectedValue]=\\\"project.client_id\\\" [txtField]=\\\"'client_id'\\\"></inline-edit-select>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock4>\\r\\n                                                                    {{ project.clients.firstname}} {{project.clients.lastname}}\\r\\n                                                                </ng-template>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'projects.create.fields.start_date' | translate}}</label>\\r\\n                                                            <div class=\\\"detail-inline\\\">\\r\\n                                                                <ng-container *ngIf=\\\"permissions.project_permission || permissions.edit_delete_permission.edit; else elseBlock5\\\">\\r\\n                                                                    <inline-edit-date (updateValue)=\\\"saveProjectDetail('start_date', $event);\\\" [datepickerConfigs]=\\\"datepickerConfigs\\\" [elementFor]=\\\"'projects.inline_edit.start_date' | translate\\\" [fieldValue]=\\\"project.start_date\\\" [format]=\\\"loginUser.settings.date_format\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'start_date'\\\"></inline-edit-date>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock5>\\r\\n                                                                    {{ project.start_date | dateTimeFormatFilter: loginUser.settings.date_format }}\\r\\n                                                                </ng-template>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'projects.create.fields.end_date' | translate}}</label>\\r\\n                                                            <div class=\\\"detail-inline\\\">\\r\\n                                                                <ng-container *ngIf=\\\"permissions.project_permission || permissions.edit_delete_permission.edit; else elseBlock6\\\">\\r\\n                                                                    <inline-edit-date (updateValue)=\\\"saveProjectDetail('end_date', $event);\\\" [datepickerConfigs]=\\\"datepickerConfigs\\\" [elementFor]=\\\"'projects.inline_edit.end_date' | translate\\\" [fieldValue]=\\\"project.end_date\\\" [format]=\\\"loginUser.settings.date_format\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'end_date'\\\"></inline-edit-date>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock6>\\r\\n                                                                    {{ project.end_date | dateTimeFormatFilter: loginUser.settings.date_format }}\\r\\n                                                                </ng-template>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'projects.create.fields.estimate_hours' | translate}}</label>\\r\\n                                                            <div class=\\\"detail-inline\\\">\\r\\n                                                                <ng-container *ngIf=\\\"permissions.project_permission || permissions.edit_delete_permission.edit; else elseBlock7\\\">\\r\\n                                                                    <inline-edit-hours (updateValue)=\\\"saveProjectDetail('estimated_hours', $event);\\\" [elementFor]=\\\"'projects.inline_edit.estimate_hours' | translate\\\" [fieldValue]=\\\"project.estimated_hours\\\" [isRequired]=\\\"'false'\\\" [name]=\\\"'estimated_hours'\\\"></inline-edit-hours>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock7>{{ project.estimated_hours}}</ng-template>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'projects.create.fields.actual_hours' | translate}}</label>\\r\\n                                                            <div class=\\\"detail-inline\\\">{{project.actual_hours}}</div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'projects.create.fields.demo_URL' | translate}}</label>\\r\\n                                                            <div class=\\\"detail-inline\\\">\\r\\n                                                                <ng-container *ngIf=\\\"permissions.project_permission || permissions.edit_delete_permission.edit; else elseBlock8\\\">\\r\\n                                                                    <inline-edit-input (updateValue)=\\\"saveProjectDetail('demo_url', $event);\\\" [elementFor]=\\\"'projects.inline_edit.demo_url' | translate\\\" [fieldValue]=\\\"project.demo_url\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'demo_url'\\\" [type]=\\\"'text'\\\"></inline-edit-input>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock8>{{ project.demo_url }}</ng-template>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'projects.create.fields.billing_type' | translate}}</label>\\r\\n                                                            <div class=\\\"detail-inline\\\">\\r\\n                                                                <ng-container *ngIf=\\\"permissions.project_permission || permissions.edit_delete_permission.edit; else elseBlock9\\\">\\r\\n                                                                    <inline-edit-select (updateValue)=\\\"saveProjectDetail('billing_type', $event);\\\" [elementFor]=\\\"'projects.inline_edit.billing_type' | translate\\\" [isRequired]=\\\"'true'\\\" [name]=\\\"'label'\\\" [options]=\\\"('projects.billing_types' | translate)\\\" [selectedValue]=\\\"project.billing_type\\\" [txtField]=\\\"'billing_type'\\\"></inline-edit-select>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock9>\\r\\n                                                                    <ng-container *ngFor=\\\"let type of ('projects.billing_types' | translate)\\\">\\r\\n                                                                        <span *ngIf=\\\"project.billing_type == type.id\\\">{{type.label}}</span>\\r\\n                                                                    </ng-container>\\r\\n                                                                </ng-template>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'projects.create.fields.budget' | translate}}</label>\\r\\n                                                            <div class=\\\"detail-inline\\\">\\r\\n                                                                <ng-container *ngIf=\\\"permissions.project_permission || permissions.edit_delete_permission.edit; else elseBlock10\\\">\\r\\n                                                                    <inline-edit-input (updateValue)=\\\"saveProjectDetail('price_rate', $event);\\\" [elementFor]=\\\"'projects.inline_edit.budget' | translate\\\" [fieldValue]=\\\"project.price_rate\\\" [isRequired]=\\\"'false'\\\" [name]=\\\"'price_rate'\\\" [pattern]=\\\"'^[0-9]+(\\\\.[0-9]{1,2})?$'\\\" [type]=\\\"'text'\\\"></inline-edit-input>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock10>{{project.price_rate}}</ng-template>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'common.created' | translate}}</label>\\r\\n                                                            <div class=\\\"detail-inline\\\">{{project.created_at | dateTimeFormatFilter : loginUser.settings.date_time_format}}</div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-lg-12 mb-3\\\">\\r\\n                                                            <label>{{'common.updated' | translate}}</label>\\r\\n                                                            <div class=\\\"detail-inline\\\">{{project.updated_at | dateTimeFormatFilter : loginUser.settings.date_time_format}}</div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-lg-8\\\">\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <!-- Description field -->\\r\\n                                            <div class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 description-detail mb-3 card-separator\\\">\\r\\n                                                <h4 class=\\\"sub-title\\\">\\r\\n                                                    <span>{{'projects.details.title2' | translate}}</span></h4>\\r\\n                                                <div class=\\\"detail-inline\\\">\\r\\n                                                    <ng-container *ngIf=\\\"permissions.project_permission || permissions.edit_delete_permission.edit; else elseBlock1\\\">\\r\\n                                                        <inline-edit-text-editor (updateValue)=\\\"saveProjectDetail('description', $event);\\\" [elementFor]=\\\"'projects.inline_edit.description' | translate\\\" [fieldValue]=\\\"project.description\\\" [name]=\\\"'description'\\\"></inline-edit-text-editor>\\r\\n                                                    </ng-container>\\r\\n                                                    <ng-template #elseBlock1>\\r\\n                                                        <p [innerHtml]=\\\"project.description\\\"></p>\\r\\n                                                    </ng-template>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <!-- Custom fields -->\\r\\n                                            <div *ngIf=\\\"project.custom_fields.length > 0\\\" class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 card-separator mb-3\\\">\\r\\n                                                <h4 class=\\\"sub-title\\\">\\r\\n                                                    <span>{{'projects.details.title1' | translate}}</span></h4>\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                    <ng-container *ngFor=\\\"let customField of project.custom_fields\\\">\\r\\n                                                        <div *ngIf=\\\"customField.field_type != 'textarea'\\\" class=\\\"col-lg-4 col-md-6 mt-2\\\">\\r\\n                                                            <ng-container *ngIf=\\\"customField.field_type == 'text' || customField.field_type == 'numeric'\\\">\\r\\n                                                                <label>{{customField.field_label}}</label>\\r\\n                                                                <div class=\\\"detail-inline\\\">{{project[customField.field_column]}}</div>\\r\\n                                                            </ng-container>\\r\\n                                                            <ng-container *ngIf=\\\"customField.field_type == 'date'\\\">\\r\\n                                                                <label>{{customField.field_label}}</label>\\r\\n                                                                <div class=\\\"detail-inline\\\">{{project[customField.field_column] | dateTimeFormatFilter: loginUser.settings.date_format}}</div>\\r\\n                                                            </ng-container>\\r\\n                                                            <ng-container *ngIf=\\\"customField.field_type == 'dropdown'\\\">\\r\\n                                                                <label>{{customField.field_label}}</label>\\r\\n                                                                <div class=\\\"detail-inline\\\">\\r\\n                                                                    <ng-container *ngFor=\\\"let fieldValue of getParseArray(customField.default_value)\\\">\\r\\n                                                                        <ng-container *ngIf=\\\"fieldValue.value == project[customField.field_column]\\\">\\r\\n                                                                            {{fieldValue.label}}\\r\\n                                                                        </ng-container>\\r\\n                                                                    </ng-container>\\r\\n                                                                </div>\\r\\n                                                            </ng-container>\\r\\n                                                            <ng-container *ngIf=\\\"customField.field_type == 'checkbox'\\\">\\r\\n                                                                <label>{{customField.field_label}}</label>\\r\\n                                                                <div class=\\\"detail-inline\\\">\\r\\n                                                                    <div *ngIf=\\\"project[customField.field_column] == 1; else checkboxElseBlock\\\">{{'common.true' | translate}}</div>\\r\\n                                                                    <ng-template #checkboxElseBlock>{{'common.false' | translate}}</ng-template>\\r\\n                                                                </div>\\r\\n                                                            </ng-container>\\r\\n                                                        </div>\\r\\n                                                    </ng-container>\\r\\n                                                    <ng-container *ngFor=\\\"let customField of project.custom_fields\\\">\\r\\n                                                        <div *ngIf=\\\"customField.field_type == 'textarea'\\\" class=\\\"col-lg-4 col-md-6 mt-2\\\">\\r\\n                                                            <ng-container>\\r\\n                                                                <label>{{customField.field_label}}</label>\\r\\n                                                                <div class=\\\"detail-inline\\\">{{project[customField.field_column]}}</div>\\r\\n                                                            </ng-container>\\r\\n                                                        </div>\\r\\n                                                    </ng-container>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <!-- Sprint -->\\r\\n                                            <div class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 description-detail mb-3 card-separator\\\">\\r\\n                                                <div class=\\\"card-header p-0\\\">\\r\\n                                                    <h4 class=\\\"sub-title\\\">\\r\\n                                                        <span>{{'project_planner.title5' | translate}}</span></h4>\\r\\n                                                    <div class=\\\"card-buttons pb-2\\\">\\r\\n                                                        <button (click)=\\\"openCreateSprintModal()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'projectplanner_create']\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'common.create' | translate}}\\\">\\r\\n                                                            <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"table-responsive-xl table-responsive-lg table-responsive-md table-responsive-sm table-responsive-xs\\\">\\r\\n                                                    <table class=\\\"table table-bordered table-hover\\\" width=\\\"100%\\\">\\r\\n                                                        <thead>\\r\\n                                                        <tr>\\r\\n                                                            <th class=\\\"width-5-per text-center\\\"></th>\\r\\n                                                            <th class=\\\"width-20-per\\\">{{'project_planner.columns.name' | translate}}</th>\\r\\n                                                            <th class=\\\"width-20-per\\\">{{'project_planner.columns.responsible' | translate}}</th>\\r\\n                                                            <th class=\\\"width-10-per\\\">{{'project_planner.columns.type' | translate}}</th>\\r\\n                                                            <th class=\\\"width-20-per\\\">{{'project_planner.columns.start_date' | translate}} </th>\\r\\n                                                            <th class=\\\"width-20-per\\\">{{'project_planner.columns.end_date' | translate}}</th>\\r\\n                                                            <th class=\\\"width-5-per\\\">{{'project_planner.columns.hours' | translate}}</th>\\r\\n                                                            <th class=\\\"width-5-per\\\">{{'project_planner.columns.status' | translate}}</th>\\r\\n                                                            <th class=\\\"width-5-per text-center\\\">{{'project_planner.columns.actions' | translate}}</th>\\r\\n                                                        </tr>\\r\\n                                                        </thead>\\r\\n                                                        <tbody *ngIf=\\\"sprints.sprint_tasks?.length != 0\\\">\\r\\n                                                        <!-- Sprints -->\\r\\n                                                        <ng-container *ngFor=\\\"let sprint of sprints.sprint_tasks; let i = index\\\">\\r\\n                                                            <tr class=\\\"tr_clickable\\\">\\r\\n                                                                <td (click)=\\\"changeSprintId(sprint.id)\\\" [ngClass]=\\\"{'details-control': sprint.tasks?.length != 0}\\\" class=\\\"width-5-per text-center\\\"></td>\\r\\n                                                                <td class=\\\"width-20-per\\\">{{sprint.sprint_name}}</td>\\r\\n                                                                <td class=\\\"width-20-per people-lists\\\">\\r\\n                                                                    <ng-container *ngIf=\\\"sprint.sprint_members?.length; else elseBlock3\\\">\\r\\n                                                                        <a *ngFor=\\\"let member of sprint.sprint_members; odd as isOdd; even as isEven\\\" [ngClass]=\\\"{'btn-profile-info': isOdd, 'btn-profile-danger': isEven}\\\" class=\\\"btn rounded-circle popover-item text-dark\\\" placement=\\\"top\\\" tooltip=\\\"{{member.firstname}} {{member.lastname}}\\\">\\r\\n                                                                            <img *ngIf=\\\"member.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{member.avatar}}\\\"/>\\r\\n                                                                            <img *ngIf=\\\"!member.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                                        </a>\\r\\n                                                                    </ng-container>\\r\\n                                                                    <ng-template #elseBlock3>\\r\\n                                                                        <a class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" href=\\\"javascript:void(0);\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                                                                            <img alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/unassign.jpg\\\"/>\\r\\n                                                                        </a>\\r\\n                                                                    </ng-template>\\r\\n                                                                </td>\\r\\n                                                                <td class=\\\"width-10-per\\\">{{'project_planner.title5' | translate}}</td>\\r\\n                                                                <td class=\\\"width-20-per\\\">{{sprint.start_date | dateTimeFormatFilter: loginUser.settings.date_format}}</td>\\r\\n                                                                <td class=\\\"width-20-per\\\">{{sprint.end_date | dateTimeFormatFilter: loginUser.settings.date_format}}</td>\\r\\n                                                                <td class=\\\"width-5-per\\\">{{sprint.hours}}</td>\\r\\n                                                                <td class=\\\"budges-status width-5-per\\\">\\r\\n                                                                    <ng-container *ngFor=\\\"let status of ('project_planner.sprint.status' | translate)\\\">\\r\\n                                                                        <span *ngIf=\\\"status.id == sprint.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                                                    </ng-container>\\r\\n                                                                </td>\\r\\n                                                                <td class=\\\"actions-dropdown width-5-per\\\">\\r\\n                                                                    <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                                        <button aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-1\\\" type=\\\"button\\\">\\r\\n                                                                            <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                                                                        <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                                                            <li *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'projectplanner_edit']\\\" role=\\\"menuitem\\\">\\r\\n                                                                                <a (click)=\\\"openEditSprintModal(sprint.project, sprint.id)\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\r\\n                                                                            </li>\\r\\n                                                                            <li *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'projectplanner_create']\\\" role=\\\"menuitem\\\">\\r\\n                                                                                <a (click)=\\\"openCreateSprintTaskModal(sprint, 'Task')\\\" class=\\\"dropdown-item btn btn-info btn-raised\\\" tooltip=\\\"{{'project_planner.title1' | translate}}\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\r\\n                                                                                <a (click)=\\\"openCreateSprintTaskModal(sprint, 'Story')\\\" class=\\\"dropdown-item btn btn-info btn-raised\\\" tooltip=\\\"{{'project_planner.title2' | translate}}\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\r\\n                                                                            </li>\\r\\n                                                                            <li *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'projectplanner_delete']\\\" role=\\\"menuitem\\\">\\r\\n                                                                                <a (click)=\\\"deleteSprint(sprint.id)\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                                                            </li>\\r\\n                                                                        </ul>\\r\\n                                                                    </div>\\r\\n                                                                </td>\\r\\n                                                            </tr>\\r\\n                                                            <!-- Sprint Tasks -->\\r\\n                                                            <ng-container *ngFor=\\\"let task of sprint.tasks; index as i\\\">\\r\\n                                                                <tr *ngIf=\\\"hideElementsChild[sprint.id]\\\">\\r\\n                                                                    <td class=\\\"p-0\\\" colspan=\\\"9\\\">\\r\\n                                                                        <div class=\\\"table-responsive-xl table-responsive-lg table-responsive-md table-responsive-sm table-responsive-xs\\\">\\r\\n                                                                            <table class=\\\"table table-sm table-bordered mb-0\\\">\\r\\n                                                                                <tbody>\\r\\n                                                                                <tr>\\r\\n                                                                                    <td class=\\\"width-5-per text-center\\\">{{i + 1}}</td>\\r\\n                                                                                    <td class=\\\"width-20-per\\\">{{task.name}}</td>\\r\\n                                                                                    <td class=\\\"width-20-per people-lists\\\">\\r\\n                                                                                        <ng-container *ngIf=\\\"task.task_members?.length; else elseBlock4\\\">\\r\\n                                                                                            <a *ngFor=\\\"let member of task.task_members; odd as isOdd; even as isEven\\\" [ngClass]=\\\"{'btn-profile-info popover-item': isOdd, 'btn-profile-danger': isEven}\\\" class=\\\"btn rounded-circle text-dark\\\" placement=\\\"top\\\" tooltip=\\\"{{member.firstname}} {{member.lastname}}\\\">\\r\\n                                                                                                <img *ngIf=\\\"member.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{member.avatar}}\\\"/>\\r\\n                                                                                                <img *ngIf=\\\"!member.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                                                            </a>\\r\\n                                                                                        </ng-container>\\r\\n                                                                                        <ng-template #elseBlock4>\\r\\n                                                                                            <a class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" href=\\\"javascript:void(0);\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                                                                                                <img alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/unassign.jpg\\\"/>\\r\\n                                                                                            </a>\\r\\n                                                                                        </ng-template>\\r\\n                                                                                    </td>\\r\\n                                                                                    <td class=\\\"width-10-per\\\">{{task.type}}</td>\\r\\n                                                                                    <td class=\\\"width-15-per\\\">{{task.start_date | dateTimeFormatFilter: loginUser.settings.date_format}}</td>\\r\\n                                                                                    <td class=\\\"width-15-per\\\">{{task.end_date | dateTimeFormatFilter: loginUser.settings.date_format}}</td>\\r\\n                                                                                    <td class=\\\"width-5-per\\\">{{task.estimated_hours}}</td>\\r\\n                                                                                    <td class=\\\"budges-status width-5-per\\\">\\r\\n                                                                                        <ng-container *ngIf='task.type == \\\"Story\\\"; else elseBlock5'>\\r\\n                                                                                            <ng-container *ngFor=\\\"let status of ('project_planner.sprint_task.story_status' | translate)\\\">\\r\\n                                                                                                <span *ngIf=\\\"status.id == task.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                                                                            </ng-container>\\r\\n                                                                                        </ng-container>\\r\\n                                                                                        <ng-template #elseBlock5>\\r\\n                                                                                            <ng-container *ngFor=\\\"let status of ('project_planner.sprint_task.task_status' | translate)\\\">\\r\\n                                                                                                <span *ngIf=\\\"status.id == task.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                                                                            </ng-container>\\r\\n                                                                                        </ng-template>\\r\\n                                                                                    </td>\\r\\n                                                                                    <td class=\\\"actions-dropdown width-5-per\\\">\\r\\n                                                                                        <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                                                            <button aria-controls=\\\"dropdown-basic-2\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-2\\\" type=\\\"button\\\">\\r\\n                                                                                                <i class=\\\"fa fa-ellipsis-v\\\"></i>\\r\\n                                                                                            </button>\\r\\n                                                                                            <ul *dropdownMenu aria-labelledby=\\\"button-basic-2\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-2\\\" role=\\\"menu\\\">\\r\\n                                                                                                <li *ngxPermissionsOnly=\\\"['admin', 'super_admin','projectplanner_edit']\\\" role=\\\"menuitem\\\">\\r\\n                                                                                                    <a (click)=\\\"openEditSprintTaskModal(sprint, task.id)\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\r\\n                                                                                                </li>\\r\\n                                                                                                <li role=\\\"menuitem\\\">\\r\\n                                                                                                    <ng-container *ngIf='task.type == \\\"Task\\\"; else elseBlock1'>\\r\\n                                                                                                        <a (click)=\\\"openMoveTaskModal(task.id, sprint.id)\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin','projectplanner_edit']\\\" class=\\\"dropdown-item btn btn-move btn-raised\\\" tooltip=\\\"{{'common.move' | translate}}\\\"><i class=\\\"fa fa-arrows-alt\\\"></i></a>\\r\\n                                                                                                        <a (click)=\\\"deleteTask(task.id)\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin','projectplanner_delete']\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                                                                                    </ng-container>\\r\\n                                                                                                    <ng-template #elseBlock1>\\r\\n                                                                                                        <a (click)=\\\"deleteStory(task.id)\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin','projectplanner_delete']\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                                                                                    </ng-template>\\r\\n                                                                                                </li>\\r\\n                                                                                            </ul>\\r\\n                                                                                        </div>\\r\\n                                                                                    </td>\\r\\n                                                                                </tr>\\r\\n                                                                                </tbody>\\r\\n                                                                            </table>\\r\\n                                                                        </div>\\r\\n                                                                    </td>\\r\\n                                                                </tr>\\r\\n                                                            </ng-container>\\r\\n                                                        </ng-container>\\r\\n                                                        </tbody>\\r\\n                                                        <tfoot *ngIf=\\\"sprints.sprint_tasks?.length == 0\\\">\\r\\n                                                        <tr>\\r\\n                                                            <td class=\\\"text-center\\\" colspan=\\\"9\\\">\\r\\n                                                                <img src=\\\"assets/img/norecord-img.png\\\" width=\\\"50\\\">\\r\\n                                                                <p class=\\\"mt-1\\\">{{'common.empty_message.sprints' | translate}}</p>\\r\\n                                                            </td>\\r\\n                                                        </tr>\\r\\n                                                        </tfoot>\\r\\n                                                    </table>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <!-- Task -->\\r\\n                                            <div class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 description-detail mb-3 card-separator\\\">\\r\\n                                                <div class=\\\"card-header p-0\\\">\\r\\n                                                    <h4 class=\\\"sub-title\\\">\\r\\n                                                        <span>{{'project_planner.sprint_task.title4' | translate}}</span>\\r\\n                                                    </h4>\\r\\n                                                    <div class=\\\"card-buttons pb-2\\\">\\r\\n                                                        <button (click)=\\\"openCreateTaskModal(project, 'Task')\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'projectplanner_create']\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'project_planner.title1' | translate}}\\\">\\r\\n                                                            <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl overflow-x-auto\\\">\\r\\n                                                    <table [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"table table-bordered table-hover b4-datatable\\\" datatable id=\\\"task_datatable\\\" width=\\\"100%\\\">\\r\\n                                                        <thead>\\r\\n                                                        <tr>\\r\\n                                                            <th>{{'project_planner.columns.name' | translate}}</th>\\r\\n                                                            <th>{{'project_planner.columns.responsible' | translate}}</th>\\r\\n                                                            <th>{{'project_planner.columns.start_date' | translate}} </th>\\r\\n                                                            <th>{{'project_planner.columns.end_date' | translate}}</th>\\r\\n                                                            <th>{{'project_planner.columns.hours' | translate}}</th>\\r\\n                                                            <th>{{'project_planner.columns.status' | translate}}</th>\\r\\n                                                            <th>{{'project_planner.columns.actions' | translate}}</th>\\r\\n                                                        </tr>\\r\\n                                                        </thead>\\r\\n                                                        <tbody>\\r\\n                                                        <tr *ngFor=\\\"let task_story of sprints.non_sprint_tasks\\\">\\r\\n                                                            <td>{{task_story.name}}</td>\\r\\n                                                            <td class=\\\"people-lists\\\">\\r\\n                                                                <ng-container *ngIf=\\\"task_story.task_members?.length; else elseBlock12\\\">\\r\\n                                                                    <a *ngFor=\\\"let member of task_story.task_members; odd as isOdd; even as isEven\\\" [ngClass]=\\\"{'btn-profile-info popover-item': isOdd, 'btn-profile-danger': isEven}\\\" class=\\\"btn rounded-circle text-dark\\\" placement=\\\"top\\\" tooltip=\\\"{{member.firstname}} {{member.lastname}}\\\">\\r\\n                                                                        <img *ngIf=\\\"member.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{member.avatar}}\\\"/>\\r\\n                                                                        <img *ngIf=\\\"!member.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                                    </a>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock12>\\r\\n                                                                    <a class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" href=\\\"javascript:void(0);\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                                                                        <img alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/unassign.jpg\\\"/>\\r\\n                                                                    </a>\\r\\n                                                                </ng-template>\\r\\n                                                            </td>\\r\\n                                                            <td>{{task_story.start_date | dateTimeFormatFilter: loginUser.settings.date_format }}</td>\\r\\n                                                            <td>{{task_story.end_date | dateTimeFormatFilter: loginUser.settings.date_format }}</td>\\r\\n                                                            <td>{{task_story.estimated_hours}}</td>\\r\\n                                                            <td class=\\\"budges-status\\\">\\r\\n                                                                <ng-container *ngFor=\\\"let status of ('project_planner.sprint_task.task_status' | translate)\\\">\\r\\n                                                                    <span *ngIf=\\\"status.id == task_story.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                                                </ng-container>\\r\\n                                                            </td>\\r\\n                                                            <td class=\\\"actions-dropdown\\\">\\r\\n                                                                <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                                    <button aria-controls=\\\"dropdown-basic-3\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-3\\\" type=\\\"button\\\">\\r\\n                                                                        <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                                                                    <ul *dropdownMenu aria-labelledby=\\\"button-basic-3\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-3\\\" role=\\\"menu\\\">\\r\\n                                                                        <li *ngxPermissionsOnly=\\\"['admin', 'super_admin','projectplanner_edit']\\\" role=\\\"menuitem\\\">\\r\\n                                                                            <a (click)=\\\"openEditTaskModal(project, task_story.id)\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\r\\n                                                                        </li>\\r\\n                                                                        <li *ngxPermissionsOnly=\\\"['admin', 'super_admin','projectplanner_edit']\\\" role=\\\"menuitem\\\">\\r\\n                                                                            <a (click)=\\\"openMoveTaskModal(task_story.id)\\\" class=\\\"dropdown-item btn btn-move btn-raised\\\" tooltip=\\\"{{'common.move' | translate}}\\\"><i class=\\\"fa fa-arrows-alt\\\"></i></a>\\r\\n                                                                        </li>\\r\\n                                                                        <li *ngxPermissionsOnly=\\\"['admin', 'super_admin','projectplanner_delete']\\\" role=\\\"menuitem\\\">\\r\\n                                                                            <a (click)=\\\"deleteTask(task_story.id)\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                                                        </li>\\r\\n                                                                    </ul>\\r\\n                                                                </div>\\r\\n                                                            </td>\\r\\n                                                        </tr>\\r\\n                                                        </tbody>\\r\\n                                                    </table>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <!-- Story -->\\r\\n                                            <div class=\\\"col-lg-12 col-md-12 col-xs-12 col-sm-12 description-detail mb-3 card-separator\\\">\\r\\n                                                <div class=\\\"card-header p-0\\\">\\r\\n                                                    <h4 class=\\\"sub-title\\\">\\r\\n                                                        <span>{{'project_planner.sprint_task.title5' | translate}}</span>\\r\\n                                                    </h4>\\r\\n                                                    <div class=\\\"card-buttons pb-2\\\">\\r\\n                                                        <button (click)=\\\"openCreateTaskModal(project, 'Story')\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'projectplanner_create']\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'project_planner.title2' | translate}}\\\">\\r\\n                                                            <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl overflow-x-auto\\\">\\r\\n                                                    <table [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"table table-bordered table-hover b4-datatable \\\" datatable id=\\\"story_datatable\\\" width=\\\"100%\\\">\\r\\n                                                        <thead>\\r\\n                                                        <tr>\\r\\n                                                            <th>{{'project_planner.columns.name' | translate}}</th>\\r\\n                                                            <th>{{'project_planner.columns.responsible' | translate}}</th>\\r\\n                                                            <th>{{'project_planner.columns.start_date' | translate}} </th>\\r\\n                                                            <th>{{'project_planner.columns.end_date' | translate}}</th>\\r\\n                                                            <th>{{'project_planner.columns.hours' | translate}}</th>\\r\\n                                                            <th>{{'project_planner.columns.status' | translate}}</th>\\r\\n                                                            <th>{{'project_planner.columns.actions' | translate}}</th>\\r\\n                                                        </tr>\\r\\n                                                        </thead>\\r\\n                                                        <tbody>\\r\\n                                                        <tr *ngFor=\\\"let task_story of sprints.non_sprint_story\\\">\\r\\n                                                            <td>{{task_story.name}}</td>\\r\\n                                                            <td class=\\\"people-lists\\\">\\r\\n                                                                <ng-container *ngIf=\\\"task_story.task_members?.length; else elseBlock12\\\">\\r\\n                                                                    <a *ngFor=\\\"let member of task_story.task_members; odd as isOdd; even as isEven\\\" [ngClass]=\\\"{'btn-profile-info popover-item': isOdd, 'btn-profile-danger': isEven}\\\" class=\\\"btn rounded-circle text-dark\\\" placement=\\\"top\\\" tooltip=\\\"{{member.firstname}} {{member.lastname}}\\\">\\r\\n                                                                        <img *ngIf=\\\"member.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{member.avatar}}\\\"/>\\r\\n                                                                        <img *ngIf=\\\"!member.avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                                                    </a>\\r\\n                                                                </ng-container>\\r\\n                                                                <ng-template #elseBlock12>\\r\\n                                                                    <a class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" href=\\\"javascript:void(0);\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                                                                        <img alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/unassign.jpg\\\"/>\\r\\n                                                                    </a>\\r\\n                                                                </ng-template>\\r\\n                                                            </td>\\r\\n                                                            <td>{{task_story.start_date | dateTimeFormatFilter: loginUser.settings.date_format }}</td>\\r\\n                                                            <td>{{task_story.end_date | dateTimeFormatFilter: loginUser.settings.date_format }}</td>\\r\\n                                                            <td>{{task_story.estimated_hours}}</td>\\r\\n                                                            <td class=\\\"budges-status\\\">\\r\\n                                                                <ng-container *ngFor=\\\"let status of ('project_planner.sprint_task.story_status' | translate)\\\">\\r\\n                                                                    <span *ngIf=\\\"status.id == task_story.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                                                </ng-container>\\r\\n                                                            </td>\\r\\n                                                            <td class=\\\"actions-dropdown\\\">\\r\\n                                                                <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                                    <button aria-controls=\\\"dropdown-basic-4\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-4\\\" type=\\\"button\\\">\\r\\n                                                                        <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                                                                    <ul *dropdownMenu aria-labelledby=\\\"button-basic-4\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-4\\\" role=\\\"menu\\\">\\r\\n                                                                        <li *ngxPermissionsOnly=\\\"['admin', 'super_admin','projectplanner_edit']\\\" role=\\\"menuitem\\\">\\r\\n                                                                            <a (click)=\\\"openEditTaskModal(project, task_story.id)\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\r\\n                                                                        </li>\\r\\n                                                                        <li *ngxPermissionsOnly=\\\"['admin', 'super_admin','projectplanner_delete']\\\" role=\\\"menuitem\\\">\\r\\n                                                                            <a (click)=\\\"deleteTask(task_story.id)\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                                                        </li>\\r\\n                                                                    </ul>\\r\\n                                                                </div>\\r\\n                                                            </td>\\r\\n                                                        </tr>\\r\\n                                                        </tbody>\\r\\n                                                    </table>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","export default \"<section *ngIf=\\\"isPageLoaded\\\" class=\\\"project_planner\\\">\\r\\n    <div class=\\\"card pl-2 pr-2\\\">\\r\\n        <!-- Card header -->\\r\\n        <div class=\\\"card-header pl-0 pr-0\\\">\\r\\n            <h4 class=\\\"main-title mt-2\\\"><span>{{'project_planner.title' | translate}}</span></h4>\\r\\n            <div class=\\\"card-buttons\\\">\\r\\n                <button (click)=\\\"openCreateProjectModal()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'projects_create']\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'common.create' | translate}}\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- Filter buttons -->\\r\\n    <div class=\\\"row btn-filters mb-3 ng-star-inserted\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <button (click)=\\\"filterByStatus(1)\\\" [ngClass]=\\\"{ 'active': statusfilterId == 1 }\\\" class=\\\"btn btn-raised open\\\" type=\\\"button\\\">\\r\\n                <p>{{'common.status.open' | translate}}</p>\\r\\n                <span class=\\\"badge badge-light\\\">\\r\\n                    {{projectPlanners.statusCount.open}}\\r\\n                </span>\\r\\n            </button>\\r\\n            <button (click)=\\\"filterByStatus(2)\\\" [ngClass]=\\\"{ 'active': statusfilterId ==2  }\\\" class=\\\"btn btn-raised in_progress\\\" type=\\\"button\\\">\\r\\n                <p>{{'common.status.in_progress' | translate}}</p>\\r\\n                <span class=\\\"badge badge-light\\\">\\r\\n                    {{projectPlanners.statusCount.inProgress}}\\r\\n                </span>\\r\\n            </button>\\r\\n            <button (click)=\\\"filterByStatus(3)\\\" [ngClass]=\\\"{ 'active': statusfilterId == 3 }\\\" class=\\\"btn btn-raised on_hold\\\" type=\\\"button\\\">\\r\\n                <p>{{'common.status.on_hold' | translate}}</p>\\r\\n                <span class=\\\"badge badge-light\\\">\\r\\n                    {{projectPlanners.statusCount.onHold}}\\r\\n                </span>\\r\\n            </button>\\r\\n            <button (click)=\\\"filterByStatus(4)\\\" [ngClass]=\\\"{ 'active': statusfilterId == 4 }\\\" class=\\\"btn btn-raised cancel\\\" type=\\\"button\\\">\\r\\n                <p>{{'common.status.cancel' | translate}}</p>\\r\\n                <span class=\\\"badge badge-light\\\">\\r\\n                    {{projectPlanners.statusCount.cancel}}\\r\\n                </span>\\r\\n            </button>\\r\\n            <button (click)=\\\"filterByStatus(5)\\\" [ngClass]=\\\"{ 'active': statusfilterId == 5 }\\\" class=\\\"btn btn-raised completed\\\" type=\\\"button\\\">\\r\\n                <p>{{'common.status.completed' | translate}}</p>\\r\\n                <span class=\\\"badge badge-light\\\">\\r\\n                    {{projectPlanners.statusCount.completed}}\\r\\n                </span>\\r\\n            </button>\\r\\n            <button (click)=\\\"filterByStatus(0)\\\" [ngClass]=\\\"{ 'active': statusfilterId == 0 }\\\" class=\\\"btn btn-raised btn-secondary\\\" type=\\\"button\\\">\\r\\n                <p>{{'common.status.total' | translate}}</p>\\r\\n                <span class=\\\"badge badge-light\\\">\\r\\n                    {{projectPlanners.statusCount.all}}\\r\\n                </span>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- Button filter end -->\\r\\n    <div class=\\\"row project-planner-list\\\">\\r\\n        <ng-container *ngFor=\\\"let project of projectPlanners.projects; let i = index\\\">\\r\\n            <div class=\\\"col-lg-6 \\\">\\r\\n                <div class=\\\"card list-details\\\">\\r\\n                    <div class=\\\"card-body p-2\\\">\\r\\n                        <div class=\\\"card-header-action\\\">\\r\\n                            <div class=\\\"dropdown card-widgets\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\" task-name d-lg-flex d-md-flex\\\">\\r\\n                            <h4 class=\\\"task-id\\\">\\r\\n                                <a [routerLink]=\\\"['/projects-planner/detail', project.id]\\\" tooltip=\\\"{{'common.view' | translate}}\\\"><span>#{{project.generated_id}}</span></a>\\r\\n                            </h4>\\r\\n                            <p class=\\\"task-title ml-lg-2\\\"> - {{project.project_name}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"text-size d-lg-flex d-md-flex justify-content-between mt-2 mb-2\\\">\\r\\n                            <div class=\\\"d-flex \\\">\\r\\n                                <div class=\\\"mb-lg-0 mb-2\\\">\\r\\n                                    <strong>{{'project_planner.columns.start_date' | translate}}:</strong></div>\\r\\n                                <div class=\\\"ml-2 mr-2\\\">\\r\\n                                    <span>{{ project.start_date | dateTimeFormatFilter: loginUser.settings.date_format }}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex\\\">\\r\\n                                <div class=\\\"mb-lg-0 mb-2\\\">\\r\\n                                    <strong>{{'project_planner.columns.end_date' | translate}}:</strong></div>\\r\\n                                <div class=\\\"ml-2 mr-2\\\">\\r\\n                                    <span>{{ project.end_date | dateTimeFormatFilter: loginUser.settings.date_format }}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <p class=\\\"mb-2 text-size\\\">\\r\\n                            <span class=\\\"pr-2 text-nowrap mb-2 d-inline-block\\\">\\r\\n                                <i class=\\\"fa fa-indent mr-1 text-muted\\\"></i>\\r\\n                                <b>{{project.sprints_count}}</b> {{'project_planner.columns.sprint' | translate}}\\r\\n                            </span>\\r\\n                            <span class=\\\"pr-2 text-nowrap mb-2 d-inline-block\\\">\\r\\n                                <i class=\\\"fa fa-tasks mr-1 text-muted\\\"></i>\\r\\n                                <b>{{project.sprintTaskCount}}</b> {{'project_planner.sprint_task.title4' | translate}}\\r\\n                            </span>\\r\\n                            <span class=\\\"text-nowrap mb-2 d-inline-block\\\">\\r\\n                                <i class=\\\"fa fa-list mr-1 text-muted\\\"></i>\\r\\n                                <b>{{project.sprintStoryCount}}</b> {{'project_planner.sprint_task.title5' | translate}}\\r\\n                            </span>\\r\\n                        </p>\\r\\n                        <div class=\\\"d-lg-flex d-md-flex d-sm-table justify-content-between align-items-center\\\">\\r\\n                            <div class=\\\" py-1\\\">\\r\\n                                <div class=\\\"people-lists ml-2 mb-1\\\">\\r\\n                                    <ng-container *ngIf=\\\"project.assign_members == 'Unassign' || project.assign_members == '' || project.assign_members == null; else elseBlock2\\\">\\r\\n                                        <a class=\\\"btn btn-profile-danger rounded-circle text-dark\\\" href=\\\"javascript:void(0);\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.unassigned' | translate}}\\\">\\r\\n                                            <img alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/unassign.jpg\\\"/>\\r\\n                                        </a>\\r\\n                                    </ng-container>\\r\\n                                    <ng-template #elseBlock2>\\r\\n                                        <ng-container *ngFor=\\\"let user_id of project.assign_members | stringToArrayFilter index as i; odd as isOdd; even as isEven\\\">\\r\\n                                            <a *ngIf=\\\"userLists[user_id]\\\" [ngClass]=\\\"{'btn-profile-info': isOdd, 'btn-profile-danger': isEven}\\\" [routerLink]=\\\"['/users/profile', user_id]\\\" class=\\\"btn rounded-circle popover-item text-dark\\\" tooltip=\\\"{{userLists[user_id].firstname}} {{userLists[user_id].lastname}}\\\">\\r\\n                                                <img *ngIf=\\\"userLists[user_id].avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"{{apiUrl}}/uploads/profile/{{userLists[user_id].avatar}}\\\"/>\\r\\n                                                <img *ngIf=\\\"!userLists[user_id].avatar\\\" alt=\\\"Profile\\\" class=\\\"img-sm rounded-circle\\\" src=\\\"../assets/img/profile_small.jpg\\\"/>\\r\\n                                            </a>\\r\\n                                        </ng-container>\\r\\n                                    </ng-template>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"budges-status mb-1\\\">\\r\\n                                <ng-container *ngFor=\\\"let status of ('projects.status' | translate)\\\">\\r\\n                                    <span *ngIf=\\\"status.id == project.status\\\" class=\\\"{{status.class}}\\\">{{status.label}}</span>\\r\\n                                </ng-container>\\r\\n                            </div>\\r\\n                            <div class=\\\"\\\">\\r\\n                                <a [routerLink]=\\\"['/projects-planner/detail', project.id]\\\" class=\\\"btn btn-view mb-0\\\" tooltip=\\\"{{'common.view' | translate}}\\\"><i class=\\\"fa fa-eye\\\"></i> {{'common.view_more' | translate}}\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n        <div *ngIf=\\\"projectPlanners.projects?.length == 0\\\" class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"card-content pt-2\\\">\\r\\n                        <div class=\\\"text-center\\\">\\r\\n                            <img src=\\\"assets/img/norecord-img.png\\\" width=\\\"50\\\">\\r\\n                            <p class=\\\"mt-1\\\">{{'common.empty_message.projects' | translate}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {Client} from '../../shared/models/client.model';\r\n\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ClientService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<Client[]>(`${this.apiUrl}/api/clients`);\r\n    }\r\n\r\n    getClientsWithTrashed() {\r\n        return this.http.get<Client[]>(`${this.apiUrl}/api/clients/withtrashed`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/clients/${id}`);\r\n    }\r\n\r\n    create(client: Client) {\r\n        return this.http.post(`${this.apiUrl}/api/clients`, client);\r\n    }\r\n\r\n    update(client: Client) {\r\n        return this.http.put(`${this.apiUrl}/api/clients/${client.id}`, client);\r\n    }\r\n\r\n    delete(id: number, params: any) {\r\n        return this.http.post(`${this.apiUrl}/api/clients/delete/${id}`, params);\r\n    }\r\n\r\n    setActiveDeactiveUser(client: Client) {\r\n        return this.http.put(`${this.apiUrl}/api/clients/status-change/${client.id}`, client);\r\n    }\r\n\r\n    sendInviteUserMail(id) {\r\n        return this.http.get(`${this.apiUrl}/api/users/invite/${id}`);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {ProjectPlanner} from '../../shared/models/project-planner.model';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ProjectPlannerSprintService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll(params: any) {\r\n        return this.http.post(`${this.apiUrl}/api/projects/projectsprinttasks`, params);\r\n    }\r\n\r\n    create(projectPlanner: ProjectPlanner) {\r\n        return this.http.post(`${this.apiUrl}/api/projectplannersprint`, projectPlanner);\r\n    }\r\n\r\n    createTask(projectPlanner: ProjectPlanner) {\r\n        return this.http.post(`${this.apiUrl}/api/projectsprinttask`, projectPlanner);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${this.apiUrl}/api/projectplannersprint/${id}`);\r\n    }\r\n\r\n    deleteTask(id: number) {\r\n        return this.http.delete(`${this.apiUrl}/api/projectsprinttask/${id}`);\r\n    }\r\n\r\n    update(projectPlanner: ProjectPlanner) {\r\n        return this.http.put(`${this.apiUrl}/api/projectplannersprint/${projectPlanner.id}`, projectPlanner);\r\n    }\r\n\r\n    updateTask(projectPlanner: ProjectPlanner) {\r\n        return this.http.put(`${this.apiUrl}/api/projectsprinttask/${projectPlanner.id}`, projectPlanner);\r\n    }\r\n\r\n    getProjectSprintById(id: number) {\r\n        return this.http.get<ProjectPlanner[]>(`${this.apiUrl}/api/projectplannersprint/${id}`);\r\n    }\r\n\r\n    getSprintTaskById(id: number) {\r\n        return this.http.get<ProjectPlanner[]>(`${this.apiUrl}/api/projectsprinttask/${id}`);\r\n    }\r\n\r\n    moveTask(projectPlanner: ProjectPlanner) {\r\n        return this.http.put(`${this.apiUrl}/api/projectsprinttask/move/${projectPlanner.task_id}`, projectPlanner);\r\n    }\r\n\r\n    getSprintByProject(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/projectplannersprint/sprintbyproject/${id}`);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {Project} from '../../shared/models/project.model';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ProjectService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<Project[]>(`${this.apiUrl}/api/projects`);\r\n    }\r\n\r\n    getMyProjects() {\r\n        return this.http.get<Project[]>(`${this.apiUrl}/api/projects/my`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/projects/${id}`);\r\n    }\r\n\r\n    getProjectById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/projects/getbyid/${id}`);\r\n    }\r\n\r\n    create(project: Project) {\r\n        return this.http.post(`${this.apiUrl}/api/projects`, project);\r\n    }\r\n\r\n    update(project: Project) {\r\n        return this.http.put(`${this.apiUrl}/api/projects/${project.id}`, project);\r\n    }\r\n\r\n    delete(id: number, params: any) {\r\n        return this.http.post(`${this.apiUrl}/api/projects/delete/${id}`, params);\r\n    }\r\n\r\n    updateNotes(project: Project) {\r\n        return this.http.put(`${this.apiUrl}/api/projects/notes/${project.id}`, project);\r\n    }\r\n\r\n    changeStatus(project: any) {\r\n        return this.http.post(`${this.apiUrl}/api/projects/${project.ids}/change-status`, {'status': project.status});\r\n    }\r\n\r\n    getReleasePlanner() {\r\n        return this.http.get(`${this.apiUrl}/api/projects/release-planner`);\r\n    }\r\n\r\n    getProject() {\r\n        return this.http.get(`${this.apiUrl}/api/projects/projectmembers`, {});\r\n    }\r\n\r\n    getProjectPermission(id) {\r\n        return this.http.get(`${this.apiUrl}/api/projects/${id}/permission`, {});\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vcHJvamVjdC1wbGFubmVyL2NvbXBvbmVudHMvY3JlYXRlLXByb2plY3QtbW9kYWwvY3JlYXRlLXByb2plY3QtbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ElementRef, EventEmitter, OnInit, ViewChild} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\nimport {Options} from 'ng5-slider';\r\n\r\nimport {ProjectService} from '../../../../../core/services/project.service';\r\nimport {ClientService} from '../../../../../core/services/client.service';\r\nimport {TeamService} from '../../../../../core/services/team.service';\r\nimport {CustomFieldsService} from '../../../../../core/services/custom-fields.service';\r\n\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\n\r\nimport {ProjectLogos} from '../../../../../core/helpers/pm-helper';\r\nimport {environment} from '../../../../../../environments/environment';\r\n\r\nimport * as Dropzone from 'dropzone';\r\n\r\n@Component({\r\n    selector: 'app-create-project-modal',\r\n    templateUrl: './create-project-modal.component.html',\r\n    styleUrls: ['./create-project-modal.component.scss']\r\n})\r\n\r\nexport class CreateProjectModalComponent implements OnInit {\r\n    public apiUrl = environment.apiUrl;\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    createProjectForm: FormGroup;\r\n    customFields: any = {length: 0};\r\n    selected: any;\r\n    loginUser: any;\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n    client_id = null;\r\n    clients = [];\r\n    teams = [];\r\n    teamsMembers = [];\r\n    teamMemberId = [];\r\n    teamMemberIds = [];\r\n    logos = ProjectLogos;\r\n    progressOptions: Options = {\r\n        floor: 0,\r\n        ceil: 100\r\n    };\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n\r\n    @ViewChild('logodropzone', {static: false}) logodropzone: ElementRef;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public datepipe: DatePipe,\r\n        public bsCreateProjectModalRef: BsModalRef,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private projectService: ProjectService,\r\n        private clientService: ClientService,\r\n        private teamService: TeamService,\r\n        private customFieldsService: CustomFieldsService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    get projectControl() {\r\n        return this.createProjectForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        if (this.loginUser.is_client) {\r\n            this.client_id = this.loginUser.id;\r\n        } else {\r\n            this.getClients();\r\n        }\r\n        this.getTeams();\r\n        this.loadForms();\r\n        this.getCustomFieldByForm();\r\n    }\r\n\r\n    loadForms() {\r\n        let that = this;\r\n        this.createProjectForm = this.formBuilder.group({\r\n            project_name: ['', [Validators.required, Validators.maxLength(255)]],\r\n            project_version: ['1.0', [Validators.required, Validators.pattern(/^[0-9]{1,2}(?:\\.[0-9]{1,2})?$/)]],\r\n            client_id: [this.client_id],\r\n            demo_url: ['', Validators.pattern(/[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/)],\r\n            start_date: [new Date(), Validators.required],\r\n            end_date: [new Date(), Validators.required],\r\n            billing_type: [null],\r\n            price_rate: ['', [Validators.minLength(0.1), Validators.pattern(/^[0-9]+(\\.[0-9]{1,2})?$/)]],\r\n            status: [1, Validators.required],\r\n            estimated_hours: ['', [Validators.pattern(/^[0-9]+\\:[0-5][0-9]$/)]],\r\n            assign_to: [null],\r\n            assign_members: [null],\r\n            progress: [0],\r\n            project_hours: [false],\r\n            project_logo: [''],\r\n            description: [''],\r\n            users: [],\r\n            custom_field: this.formBuilder.array([]),\r\n            custom_fields: [null]\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.loadDropzone();\r\n        });\r\n    }\r\n\r\n    setLogos(project_logo) {\r\n        if (project_logo === this.selected) {\r\n            this.selected = null;\r\n        } else {\r\n            this.selected = project_logo;\r\n        }\r\n        this.createProjectForm.patchValue({project_logo: this.selected});\r\n    }\r\n\r\n    isActive(avatar) {\r\n        return this.selected === avatar;\r\n    };\r\n\r\n    loadDropzone() {\r\n        let that = this;\r\n        new Dropzone(this.logodropzone.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            maxFiles: 1,\r\n            clickable: true,\r\n            acceptedFiles: 'image/*',\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>' + that.translate.instant('common.remove_file') + '</button>');\r\n                    const _this = this;\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file);\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            that.createProjectForm.patchValue({project_logo: reader.result});\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n\r\n                this.on('removedfile', function (file) {\r\n                    that.createProjectForm.patchValue({project_logo: null});\r\n                });\r\n\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    loadCustomFields() {\r\n        let arr = this.createProjectForm.value.custom_field;\r\n        let obj = {};\r\n        let iRow = 0;\r\n        let that = this;\r\n        arr.forEach(function (item) {\r\n            let key = Object.keys(item)[0];\r\n            obj[key] = item[key];\r\n            if (that.customFields[iRow++].field_type == 'date') {\r\n                obj[key] = that.datepipe.transform(item[key], 'yyyy-MM-dd');\r\n            }\r\n        });\r\n\r\n        this.createProjectForm.patchValue({custom_fields: obj});\r\n    }\r\n\r\n    getCustomFieldByForm() {\r\n        this.customFieldsService.getCustomFieldByForm(1)\r\n            .subscribe(\r\n                data => {\r\n                    this.customFields = data;\r\n                    if (this.customFields.length > 0) {\r\n                        this.addDynamicField(this.customFields);\r\n                    }\r\n                });\r\n    }\r\n\r\n    addDynamicField(fieldList) {\r\n        fieldList.forEach(element => {\r\n            let control = <FormArray>this.createProjectForm.controls.custom_field;\r\n            let validators = null;\r\n            if (element.is_required == 1) {\r\n                validators = [Validators.required];\r\n            }\r\n\r\n            control.push(\r\n                this.formBuilder.group({\r\n                    [element.field_column]: [null, validators]\r\n                })\r\n            );\r\n        });\r\n    }\r\n\r\n    getClients() {\r\n        this.clientService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.clients = data;\r\n                });\r\n    }\r\n\r\n    getTeams() {\r\n        this.teamService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.teams = data;\r\n                });\r\n    }\r\n\r\n    startDateChange(event: any) {\r\n        this.createProjectForm.patchValue({end_date: event});\r\n    }\r\n\r\n    assignGroupChange(event: any) {\r\n        this.teamsMembers = null;\r\n        this.teamMemberIds = [];\r\n        this.createProjectForm.patchValue({assign_members: null});\r\n        if (event) {\r\n            this.teamsMembers = event.members;\r\n            for (let i = 0; i < this.teamsMembers.length; i++) {\r\n                this.teamMemberId = this.teamsMembers[i].id;\r\n                this.teamMemberIds.push(this.teamMemberId);\r\n            }\r\n        }\r\n        this.createProjectForm.patchValue({users: this.teamMemberIds});\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.createProjectForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        if (this.customFields.length > 0) {\r\n            this.loadCustomFields();\r\n        }\r\n\r\n        this.projectService.create(this.createProjectForm.value).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('projects.messages.create'), this.translate.instant('projects.title'));\r\n            this.event.emit({data});\r\n            this.onCancel();\r\n        });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsCreateProjectModalRef.hide();\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vcHJvamVjdC1wbGFubmVyL2NvbXBvbmVudHMvY3JlYXRlLXNwcmludC1tb2RhbC9jcmVhdGUtc3ByaW50LW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {ProjectPlannerSprintService} from './../../../.././../core/services/project-planner-sprint.service';\r\nimport {UserService} from './../../../.././../core/services/user.service';\r\n\r\n@Component({\r\n    selector: 'app-create-sprint-modal',\r\n    templateUrl: './create-sprint-modal.component.html',\r\n    styleUrls: ['./create-sprint-modal.component.scss']\r\n})\r\n\r\nexport class CreateSprintModalComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    createProjectSprintForm: FormGroup;\r\n    project: any;\r\n    projectStartDate: Date;\r\n    projectEndDate: Date;\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n    isHoursValid = false;\r\n    users = [];\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsCreateProjectSprintModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private projectPlannerSprintService: ProjectPlannerSprintService,\r\n        private userService: UserService\r\n    ) {\r\n    }\r\n\r\n    get projectSprintControl() {\r\n        return this.createProjectSprintForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.loadForms();\r\n        this.getProjectUsers();\r\n    }\r\n\r\n    loadForms() {\r\n        this.projectStartDate = new Date(this.project.start_date);\r\n        this.projectEndDate = new Date(this.project.end_date);\r\n\r\n        this.createProjectSprintForm = this.formBuilder.group({\r\n            project_id: [this.project.id],\r\n            sprint_name: ['', [Validators.required, Validators.maxLength(255)]],\r\n            sprint_members: [null],\r\n            start_date: [null],\r\n            end_date: [null],\r\n            status: [1, Validators.required],\r\n            hours: ['', Validators.pattern(/^[0-9]+\\:[0-5][0-9]$/)],\r\n            description: ['']\r\n        });\r\n        this.isPageLoaded = true;\r\n    }\r\n\r\n    getProjectUsers() {\r\n        if (this.project.assign_members == 'Unassign' || this.project.assign_members == null) {\r\n\r\n        } else {\r\n            let userArr = this.project.assign_members.split(',');\r\n            for (let iRow in userArr) {\r\n                for (let jRow in this.project.users) {\r\n                    if (this.project.users[jRow].id == userArr[iRow]) {\r\n                        this.users.push(this.project.users[jRow]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    startDateChange(event: any) {\r\n        this.createProjectSprintForm.patchValue({end_date: event});\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        this.isHoursValid = false;\r\n        if (this.createProjectSprintForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        if (this.createProjectSprintForm.value.hours && this.project.estimated_hours) {\r\n            let projectHours = this.project.estimated_hours.replace(/:/g, '.'),\r\n                sprintHours = this.createProjectSprintForm.value.hours.replace(/:/g, '.');\r\n            if (parseInt(projectHours) < parseInt(sprintHours)) {\r\n                this.isHoursValid = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.projectPlannerSprintService.create(this.createProjectSprintForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('project_planner.sprint.messages.create'), this.translate.instant('project_planner.sprint.title'));\r\n                    this.event.emit({data});\r\n                    this.onCancel();\r\n                });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsCreateProjectSprintModalRef.hide();\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vcHJvamVjdC1wbGFubmVyL2NvbXBvbmVudHMvY3JlYXRlLXNwcmludC10YXNrLW1vZGFsL2NyZWF0ZS1zcHJpbnQtdGFzay1tb2RhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {ProjectPlannerSprintService} from './../../../.././../core/services/project-planner-sprint.service';\r\n\r\n@Component({\r\n    selector: 'app-create-sprint-task-modal',\r\n    templateUrl: './create-sprint-task-modal.component.html',\r\n    styleUrls: ['./create-sprint-task-modal.component.scss']\r\n})\r\nexport class CreateSprintTaskModalComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    createProjectSprintTaskForm: FormGroup;\r\n    sprint: any;\r\n    sprintStartDate: Date;\r\n    sprintEndDate: Date;\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n    isHoursValid = false;\r\n    users = [];\r\n    statusLists = [];\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsCreateProjectSprintTaskModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private projectPlannerSprintService: ProjectPlannerSprintService\r\n    ) {\r\n    }\r\n\r\n    get projectSprintTaskControl() {\r\n        return this.createProjectSprintTaskForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.setStatus();\r\n        this.loadForms();\r\n        this.getUsers();\r\n    }\r\n\r\n    loadForms() {\r\n\r\n        if (this.sprint.start_date) {\r\n            this.sprintStartDate = new Date(this.sprint.start_date);\r\n        }\r\n        if (this.sprint.end_date) {\r\n            this.sprintEndDate = new Date(this.sprint.end_date);\r\n        }\r\n\r\n        this.createProjectSprintTaskForm = this.formBuilder.group({\r\n            project_sprint_id: [this.sprint.id],\r\n            type: [this.sprint.type],\r\n            name: ['', [Validators.required, Validators.maxLength(255)]],\r\n            assign_to: [null],\r\n            start_date: [null],\r\n            end_date: [null],\r\n            status: [1, Validators.required],\r\n            estimated_hours: ['', Validators.pattern(/^[0-9]+\\:[0-5][0-9]$/)],\r\n            description: ['']\r\n        });\r\n        this.isPageLoaded = true;\r\n    }\r\n\r\n    setStatus() {\r\n        if (this.sprint.type == 'Story') {\r\n            this.statusLists = [\r\n                {id: 1, name: this.translate.instant('common.status.open')},\r\n                {id: 2, name: this.translate.instant('common.status.in_progress')},\r\n                {id: 3, name: this.translate.instant('common.status.closed')}\r\n            ];\r\n        } else {\r\n            this.statusLists = [\r\n                {id: 1, name: this.translate.instant('common.status.open')},\r\n                {id: 2, name: this.translate.instant('common.status.on_hold')},\r\n                {id: 3, name: this.translate.instant('common.status.closed')}\r\n            ];\r\n        }\r\n    }\r\n\r\n    getUsers() {\r\n        this.users = this.sprint.sprint_members;\r\n    }\r\n\r\n    startDateChange(event: any) {\r\n        this.createProjectSprintTaskForm.patchValue({end_date: event});\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        this.isHoursValid = false;\r\n        if (this.createProjectSprintTaskForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        // --\r\n        // Hours validation\r\n        if (this.createProjectSprintTaskForm.value.estimated_hours && this.sprint.hours) {\r\n            let projectHours = this.sprint.hours.replace(/:/g, '.'),\r\n                sprintHours = this.createProjectSprintTaskForm.value.estimated_hours.replace(/:/g, '.');\r\n            if (parseInt(projectHours) < parseInt(sprintHours)) {\r\n                this.isHoursValid = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.projectPlannerSprintService.createTask(this.createProjectSprintTaskForm.value).subscribe(data => {\r\n            this.toastr.success(this.createProjectSprintTaskForm.value.type + this.translate.instant('project_planner.sprint_task.messages.create'), this.translate.instant('project_planner.title'));\r\n            this.event.emit({data});\r\n            this.onCancel();\r\n        });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsCreateProjectSprintTaskModalRef.hide();\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vcHJvamVjdC1wbGFubmVyL2NvbXBvbmVudHMvY3JlYXRlLXRhc2stbW9kYWwvY3JlYXRlLXRhc2stbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {ProjectPlannerSprintService} from './../../../.././../core/services/project-planner-sprint.service';\r\n\r\n@Component({\r\n    selector: 'app-create-task-modal',\r\n    templateUrl: './create-task-modal.component.html',\r\n    styleUrls: ['./create-task-modal.component.scss']\r\n})\r\n\r\nexport class CreateTaskModalComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    createProjectSprintTaskForm: FormGroup;\r\n    project: any;\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n    users = [];\r\n    statusLists = [];\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsCreateProjectSprintTaskModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private projectPlannerSprintService: ProjectPlannerSprintService\r\n    ) {\r\n    }\r\n\r\n    get projectSprintTaskControl() {\r\n        return this.createProjectSprintTaskForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.setStatus();\r\n        this.loadForms();\r\n        this.getUsers();\r\n    }\r\n\r\n    loadForms() {\r\n        // if (this.sprint.start_date) {\r\n        // \tthis.sprintStartDate = new Date(this.sprint.start_date);\r\n        // }\r\n        // if (this.sprint.end_date) {\r\n        // \tthis.sprintEndDate = new Date(this.sprint.end_date);\r\n        // }\r\n\r\n        this.createProjectSprintTaskForm = this.formBuilder.group({\r\n            project_id: [this.project.id],\r\n            type: [this.project.type],\r\n            name: ['', [Validators.required, Validators.maxLength(255)]],\r\n            assign_to: [null],\r\n            start_date: [null],\r\n            end_date: [null],\r\n            status: [1, Validators.required],\r\n            estimated_hours: ['', Validators.pattern(/^[0-9]+\\:[0-5][0-9]$/)],\r\n            description: ['']\r\n        });\r\n        this.isPageLoaded = true;\r\n    }\r\n\r\n    setStatus() {\r\n        if (this.project.type == 'Story') {\r\n            this.statusLists = [\r\n                {id: 1, name: this.translate.instant('common.status.open')},\r\n                {id: 2, name: this.translate.instant('common.status.in_progress')},\r\n                {id: 3, name: this.translate.instant('common.status.closed')}\r\n            ];\r\n        } else {\r\n            this.statusLists = [\r\n                {id: 1, name: this.translate.instant('common.status.open')},\r\n                {id: 2, name: this.translate.instant('common.status.on_hold')},\r\n                {id: 3, name: this.translate.instant('common.status.closed')}\r\n            ];\r\n        }\r\n    }\r\n\r\n    getUsers() {\r\n        if (this.project.assign_members == 'Unassign' || this.project.assign_members == null) {\r\n\r\n        } else {\r\n            let userArr = this.project.assign_members.split(',');\r\n            for (let iRow in userArr) {\r\n                for (let jRow in this.project.users) {\r\n                    if (this.project.users[jRow].id == userArr[iRow]) {\r\n                        this.users.push(this.project.users[jRow]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    startDateChange(event: any) {\r\n        this.createProjectSprintTaskForm.patchValue({end_date: event});\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.createProjectSprintTaskForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.projectPlannerSprintService.createTask(this.createProjectSprintTaskForm.value).subscribe(data => {\r\n            this.toastr.success(this.createProjectSprintTaskForm.value.type + this.translate.instant('project_planner.sprint_task.messages.create'), this.translate.instant('project_planner.title'));\r\n            this.event.emit({data});\r\n            this.onCancel();\r\n        });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsCreateProjectSprintTaskModalRef.hide();\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vcHJvamVjdC1wbGFubmVyL2NvbXBvbmVudHMvZWRpdC1wcm9qZWN0LW1vZGFsL2VkaXQtcHJvamVjdC1tb2RhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, ElementRef, EventEmitter, OnInit, ViewChild} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\nimport {Options} from 'ng5-slider';\r\n\r\nimport {ProjectService} from '../../../../../core/services/project.service';\r\nimport {ClientService} from '../../../../../core/services/client.service';\r\nimport {TeamService} from '../../../../../core/services/team.service';\r\nimport {CustomFieldsService} from '../../../../../core/services/custom-fields.service';\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\n\r\nimport {ProjectLogos} from '../../../../../core/helpers/pm-helper';\r\nimport {environment} from '../../../../../../environments/environment';\r\n\r\nimport * as Dropzone from 'dropzone';\r\n\r\n@Component({\r\n    selector: 'app-edit-project-modal',\r\n    templateUrl: './edit-project-modal.component.html',\r\n    styleUrls: ['./edit-project-modal.component.scss']\r\n})\r\n\r\nexport class EditProjectModalComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    editProjectForm: FormGroup;\r\n    project: any;\r\n    projectId: number;\r\n    oldVersion: any;\r\n    currentVersion: any;\r\n    loginUser: any;\r\n    selected: any;\r\n    customFields: any = {length: 0};\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n    isLogoLoaded = true;\r\n    clients = [];\r\n    teams = [];\r\n    teamsMembers = [];\r\n    teamMemberId = [];\r\n    teamMemberIds = [];\r\n    logos = ProjectLogos;\r\n    progressOptions: Options = {\r\n        floor: 0,\r\n        ceil: 100\r\n    };\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n    @ViewChild('logodropzone', {static: false}) logodropzone: ElementRef;\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private toastr: ToastrService,\r\n        public datepipe: DatePipe,\r\n        public bsEditProjectModalRef: BsModalRef,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private formBuilder: FormBuilder,\r\n        private projectService: ProjectService,\r\n        private clientService: ClientService,\r\n        private teamService: TeamService,\r\n        private customFieldsService: CustomFieldsService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    get projectPlannerControl() {\r\n        return this.editProjectForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getProjectById(this.projectId);\r\n        this.onClose = new Subject();\r\n        if (!this.loginUser.is_client) {\r\n            this.getClients();\r\n        }\r\n    }\r\n\r\n    loadForms() {\r\n        this.editProjectForm = this.formBuilder.group({\r\n            id: [this.project.id],\r\n            generated_id: [this.project.generated_id],\r\n            project_name: [this.project.project_name, [Validators.required, Validators.maxLength(255)]],\r\n            project_version: [this.project.project_version, [Validators.required, Validators.pattern(/^[0-9]{1,2}(?:\\.[0-9]{1,2})?$/)]],\r\n            client_id: [this.project.client_id],\r\n            demo_url: [this.project.demo_url, Validators.pattern(/[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/)],\r\n            start_date: [new Date(this.project.start_date), Validators.required],\r\n            end_date: [new Date(this.project.end_date), Validators.required],\r\n            billing_type: [this.project.billing_type],\r\n            price_rate: [this.project.price_rate, [Validators.minLength(0.1), Validators.pattern(/^[0-9]+(\\.[0-9]{1,2})?$/)]],\r\n            status: [this.project.status, Validators.required],\r\n            estimated_hours: [this.project.estimated_hours, [Validators.pattern(/^[0-9]+\\:[0-5][0-9]$/)]],\r\n            assign_to: [this.project.assign_to],\r\n            assign_members: [this.project.assign_members],\r\n            progress: [this.project.progress],\r\n            project_hours: [this.project.project_hours],\r\n            project_logo: [this.project.project_logo],\r\n            description: [this.project.description],\r\n            users: [],\r\n            custom_field: this.formBuilder.array([]),\r\n            custom_fields: [null]\r\n        });\r\n        this.getCustomFieldByForm();\r\n        this.setLogos(this.project.project_logo);\r\n        this.isPageLoaded = true;\r\n    }\r\n\r\n    loadDropzone() {\r\n        let that = this;\r\n        new Dropzone(this.logodropzone.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            maxFiles: 1,\r\n            clickable: true,\r\n            acceptedFiles: 'image/*',\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>Remove file</button>');\r\n                    const _this = this;\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file);\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            that.editProjectForm.patchValue({project_logo: reader.result});\r\n                            this.isLogoLoaded = false;\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n\r\n                this.on('removedfile', function (file) {\r\n                    that.editProjectForm.patchValue({project_logo: null});\r\n                });\r\n\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    setLogos(project_logo) {\r\n        if (project_logo === this.selected) {\r\n            this.selected = null;\r\n        } else {\r\n            this.selected = project_logo;\r\n        }\r\n        this.editProjectForm.patchValue({project_logo: this.selected});\r\n    }\r\n\r\n    isActive(avatar) {\r\n        return this.selected === avatar;\r\n    };\r\n\r\n    getClients() {\r\n        this.clientService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.clients = data;\r\n                });\r\n    }\r\n\r\n    getTeams() {\r\n        this.teamService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.teams = data;\r\n\r\n                    this.setTeamMembers();\r\n                });\r\n    }\r\n\r\n    setTeamMembers() {\r\n        this.teamMemberIds = [];\r\n        for (let iRow in this.teams) {\r\n            if (this.teams[iRow].id == this.project.assign_to) {\r\n                for (let jRow in this.teams[iRow].members) {\r\n                    this.teamMemberIds.push({'id': this.teams[iRow].members[jRow].id});\r\n                }\r\n            }\r\n        }\r\n\r\n        this.editProjectForm.patchValue({users: this.teamMemberIds});\r\n    }\r\n\r\n    getCustomFieldByForm() {\r\n        this.customFieldsService.getCustomFieldByForm(1)\r\n            .subscribe(\r\n                data => {\r\n                    this.customFields = data;\r\n                    if (this.customFields.length > 0) {\r\n                        this.addDynamicField(this.customFields);\r\n                    }\r\n                });\r\n    }\r\n\r\n    addDynamicField(fieldList) {\r\n        fieldList.forEach(element => {\r\n            let control = <FormArray>this.editProjectForm.controls.custom_field;\r\n            let validators = null;\r\n            if (element.is_required == 1) {\r\n                validators = [Validators.required];\r\n            }\r\n            if (element.field_type == 'date' && this.project[element.field_column] != null) {\r\n                control.push(\r\n                    this.formBuilder.group({\r\n                        [element.field_column]: [new Date(this.project[element.field_column]), validators]\r\n                    })\r\n                );\r\n            } else {\r\n                control.push(\r\n                    this.formBuilder.group({\r\n                        [element.field_column]: [this.project[element.field_column], validators]\r\n                    })\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    getProjectById(projectID) {\r\n        this.projectService.getById(projectID).subscribe(data => {\r\n            this.project = data;\r\n            let projectAllVersion = this.project.project_version;\r\n            let lastIndex = projectAllVersion.lastIndexOf(',');\r\n            this.oldVersion = projectAllVersion.substring(0, lastIndex);\r\n            this.currentVersion = projectAllVersion.substring(lastIndex + 1);\r\n            this.project.project_version = this.currentVersion;\r\n            this.loadForms();\r\n\r\n            setTimeout(() => {\r\n                this.loadDropzone();\r\n            });\r\n\r\n            this.getTeams();\r\n        });\r\n    }\r\n\r\n    removeDropzoneImage() {\r\n        this.isLogoLoaded = false;\r\n        this.editProjectForm.patchValue({project_logo: null});\r\n    }\r\n\r\n    startDateChange(event: any) {\r\n        this.editProjectForm.patchValue({end_date: this.editProjectForm.controls.start_date.value});\r\n    }\r\n\r\n    assignGroupChange(event: any) {\r\n        this.teamsMembers = null;\r\n        this.teamMemberIds = [];\r\n        this.editProjectForm.patchValue({assign_members: null});\r\n        if (event) {\r\n            this.teamsMembers = event.members;\r\n            for (let i = 0; i < this.teamsMembers.length; i++) {\r\n                this.teamMemberIds.push({'id': this.teamsMembers[i].id});\r\n            }\r\n        }\r\n        this.editProjectForm.patchValue({users: this.teamMemberIds});\r\n    }\r\n\r\n    loadCustomFields() {\r\n        let arr = this.editProjectForm.value.custom_field;\r\n        let obj = {};\r\n        let iRow = 0;\r\n        let that = this;\r\n        arr.forEach(function (item) {\r\n            let key = Object.keys(item)[0];\r\n            obj[key] = item[key];\r\n            if (that.customFields[iRow++].field_type == 'date') {\r\n                obj[key] = that.datepipe.transform(item[key], 'yyyy-MM-dd');\r\n            }\r\n        });\r\n        this.editProjectForm.patchValue({custom_fields: obj});\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.editProjectForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        if (this.customFields.length > 0) {\r\n            this.loadCustomFields();\r\n        }\r\n\r\n        this.editProjectForm.patchValue({start_date: this.datepipe.transform(this.editProjectForm.value.start_date, 'yyyy-MM-dd')});\r\n        this.editProjectForm.patchValue({end_date: this.datepipe.transform(this.editProjectForm.value.end_date, 'yyyy-MM-dd')});\r\n        this.editProjectForm.value.ProjectLogos = this.logos;\r\n        this.projectService.update(this.editProjectForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('projects.messages.update'), this.translate.instant('projects.title'));\r\n                    this.event.emit({data});\r\n                    this.onCancel();\r\n                });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsEditProjectModalRef.hide();\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vcHJvamVjdC1wbGFubmVyL2NvbXBvbmVudHMvZWRpdC1zcHJpbnQtbW9kYWwvZWRpdC1zcHJpbnQtbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {ProjectPlannerSprintService} from './../../../.././../core/services/project-planner-sprint.service';\r\n\r\n@Component({\r\n    selector: 'app-edit-sprint-modal',\r\n    templateUrl: './edit-sprint-modal.component.html',\r\n    styleUrls: ['./edit-sprint-modal.component.scss']\r\n})\r\n\r\nexport class EditSprintModalComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    editProjectSprintForm: FormGroup;\r\n    project: any;\r\n    sprint: any;\r\n    sprintId: any;\r\n    projectStartDate: Date;\r\n    projectEndDate: Date;\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n    isHoursValid = false;\r\n    users = [];\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsEditProjectSprintModalRef: BsModalRef,\r\n        public datepipe: DatePipe,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private projectPlannerSprintService: ProjectPlannerSprintService\r\n    ) {\r\n    }\r\n\r\n    get projectSprintControl() {\r\n        return this.editProjectSprintForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.getProjectSprintById(this.sprintId);\r\n    }\r\n\r\n    loadForms() {\r\n        this.projectStartDate = new Date(this.project.start_date);\r\n        this.projectEndDate = new Date(this.project.end_date);\r\n        this.setDateFormat();\r\n        this.editProjectSprintForm = this.formBuilder.group({\r\n            id: [this.sprint.id],\r\n            project_id: [this.sprint.project_id],\r\n            sprint_name: [this.sprint.sprint_name, [Validators.required, Validators.maxLength(255)]],\r\n            sprint_members: [this.sprint.sprint_members],\r\n            start_date: [this.sprint.start_date],\r\n            end_date: [this.sprint.end_date],\r\n            status: [this.sprint.status, Validators.required],\r\n            hours: [this.sprint.hours, Validators.pattern(/^[0-9]+\\:[0-5][0-9]$/)],\r\n            description: [this.sprint.description]\r\n        });\r\n\r\n        this.getProjectUsers();\r\n        this.isPageLoaded = true;\r\n    }\r\n\r\n    setDateFormat() {\r\n        if (this.sprint.start_date) {\r\n            this.sprint.start_date = new Date(this.sprint.start_date);\r\n        }\r\n        if (this.sprint.end_date) {\r\n            this.sprint.end_date = new Date(this.sprint.end_date);\r\n        }\r\n    }\r\n\r\n    getProjectUsers() {\r\n        if (this.project.assign_members == 'Unassign' || this.project.assign_members == null) {\r\n        } else {\r\n            let userArr = this.project.assign_members.split(',');\r\n            for (let iRow in userArr) {\r\n                for (let jRow in this.project.users) {\r\n                    if (this.project.users[jRow].id == userArr[iRow]) {\r\n                        this.users.push(this.project.users[jRow]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    startDateChange(event: any) {\r\n        this.editProjectSprintForm.patchValue({end_date: this.editProjectSprintForm.value.start_date});\r\n    }\r\n\r\n    getProjectSprintById(sprintID) {\r\n        this.projectPlannerSprintService.getProjectSprintById(sprintID)\r\n            .subscribe(data => {\r\n                this.sprint = data;\r\n                this.loadForms();\r\n            });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        this.isHoursValid = false;\r\n        if (this.editProjectSprintForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        // --\r\n        // Hours validation\r\n        if (this.editProjectSprintForm.value.hours && this.project.estimated_hours) {\r\n            let projectHours = this.project.estimated_hours.replace(/:/g, '.'),\r\n                sprintHours = this.editProjectSprintForm.value.hours.replace(/:/g, '.');\r\n            if (parseInt(projectHours) < parseInt(sprintHours)) {\r\n                this.isHoursValid = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        // --\r\n        // Date format\r\n        this.editProjectSprintForm.value.start_date = this.datepipe.transform(this.editProjectSprintForm.value.start_date, 'yyyy-MM-dd');\r\n        this.editProjectSprintForm.value.end_date = this.datepipe.transform(this.editProjectSprintForm.value.end_date, 'yyyy-MM-dd');\r\n        this.projectPlannerSprintService.update(this.editProjectSprintForm.value).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('project_planner.sprint.messages.update'), this.translate.instant('project_planner.sprint.title'));\r\n            this.editProjectSprintForm.patchValue({sprint_members: this.editProjectSprintForm.value.sprint});\r\n            this.event.emit({data});\r\n            this.onCancel();\r\n        });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsEditProjectSprintModalRef.hide();\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vcHJvamVjdC1wbGFubmVyL2NvbXBvbmVudHMvZWRpdC1zcHJpbnQtdGFzay1tb2RhbC9lZGl0LXNwcmludC10YXNrLW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {DatePipe} from '@angular/common';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {ProjectPlannerSprintService} from './../../../.././../core/services/project-planner-sprint.service';\r\nimport {TaskService} from '../../../../../core/services/task.service';\r\n\r\n@Component({\r\n    selector: 'app-edit-sprint-task-modal',\r\n    templateUrl: './edit-sprint-task-modal.component.html',\r\n    styleUrls: ['./edit-sprint-task-modal.component.scss']\r\n})\r\n\r\nexport class EditSprintTaskModalComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    editProjectSprintTaskForm: FormGroup;\r\n    sprint: any;\r\n    taskId: any;\r\n    task: any;\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n    isHoursValid = false;\r\n    sprintStartDate: Date;\r\n    sprintEndDate: Date;\r\n    users = [];\r\n    statusLists = [];\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsEditProjectSprintTaskModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private projectPlannerSprintService: ProjectPlannerSprintService,\r\n        private taskService: TaskService,\r\n        public datepipe: DatePipe\r\n    ) {\r\n    }\r\n\r\n    get projectSprintTaskControl() {\r\n        return this.editProjectSprintTaskForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.getTaskById(this.taskId);\r\n    }\r\n\r\n    loadForms() {\r\n\r\n        this.setDateFormat();\r\n        this.users = this.sprint.sprint_members;\r\n\r\n        this.editProjectSprintTaskForm = this.formBuilder.group({\r\n            id: [this.taskId],\r\n            project_sprint_id: [this.task.project_sprint_id],\r\n            project_id: [this.sprint.project_id],\r\n            type: [this.task.type],\r\n            name: [this.task.name, [Validators.required, Validators.maxLength(255)]],\r\n            assign_to: [this.task.assign_to],\r\n            start_date: [this.task.start_date],\r\n            end_date: [this.task.end_date],\r\n            status: [this.task.status, Validators.required],\r\n            estimated_hours: [this.task.estimated_hours, Validators.pattern(/^[0-9]+\\:[0-5][0-9]$/)],\r\n            description: [this.task.description]\r\n        });\r\n        this.isPageLoaded = true;\r\n    }\r\n\r\n    setDateFormat() {\r\n        if (this.sprint.start_date) {\r\n            this.sprintStartDate = new Date(this.sprint.start_date);\r\n        }\r\n        if (this.sprint.end_date) {\r\n            this.sprintEndDate = new Date(this.sprint.end_date);\r\n        }\r\n\r\n        if (this.task.start_date) {\r\n            this.task.start_date = new Date(this.task.start_date);\r\n        }\r\n        if (this.task.end_date) {\r\n            this.task.end_date = new Date(this.task.end_date);\r\n        }\r\n    }\r\n\r\n    setStatus() {\r\n        if (this.task.type == 'Story') {\r\n            this.statusLists = [\r\n                {id: 1, name: this.translate.instant('common.status.open')},\r\n                {id: 2, name: this.translate.instant('common.status.in_progress')},\r\n                {id: 3, name: this.translate.instant('common.status.closed')}\r\n            ];\r\n        } else {\r\n            this.statusLists = [\r\n                {id: 1, name: this.translate.instant('common.status.open')},\r\n                {id: 2, name: this.translate.instant('common.status.on_hold')},\r\n                {id: 3, name: this.translate.instant('common.status.closed')},\r\n                {id: 4, name: this.translate.instant('common.status.released')}\r\n            ];\r\n        }\r\n    }\r\n\r\n    startDateChange(event: any) {\r\n        this.editProjectSprintTaskForm.patchValue({end_date: this.editProjectSprintTaskForm.value.start_date});\r\n    }\r\n\r\n    getTaskById(taskID) {\r\n        this.projectPlannerSprintService.getSprintTaskById(taskID).subscribe(data => {\r\n            this.task = data;\r\n            this.setStatus();\r\n            this.loadForms();\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        this.isHoursValid = false;\r\n        if (this.editProjectSprintTaskForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        // --\r\n        // Hours validation\r\n        if (this.editProjectSprintTaskForm.value.estimated_hours && this.sprint.hours) {\r\n            let projectHours = this.sprint.hours.replace(/:/g, '.'),\r\n                sprintHours = this.editProjectSprintTaskForm.value.estimated_hours.replace(/:/g, '.');\r\n            if (parseInt(projectHours) < parseInt(sprintHours)) {\r\n                this.isHoursValid = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        // --\r\n        // Date Format\r\n        this.editProjectSprintTaskForm.patchValue({start_date: this.datepipe.transform(this.editProjectSprintTaskForm.value.start_date, 'yyyy-MM-dd')});\r\n        this.editProjectSprintTaskForm.patchValue({end_date: this.datepipe.transform(this.editProjectSprintTaskForm.value.end_date, 'yyyy-MM-dd')});\r\n        // this.editProjectSprintTaskForm.patchValue({ task_members: this.editProjectSprintTaskForm.value.task_members });\r\n\r\n        if (this.editProjectSprintTaskForm.value.status == 4) {\r\n            this.projectPlannerSprintService.updateTask(this.editProjectSprintTaskForm.value).subscribe(data => {\r\n            });\r\n            this.taskService.convertSprintTaskToTask(this.editProjectSprintTaskForm.value).subscribe(data => {\r\n                this.toastr.success(this.translate.instant('project_planner.sprint_task.messages.released'), this.translate.instant('project_planner.title'));\r\n                this.event.emit({data});\r\n                this.onCancel();\r\n            });\r\n        } else {\r\n            this.projectPlannerSprintService.updateTask(this.editProjectSprintTaskForm.value).subscribe(data => {\r\n                this.toastr.success(this.editProjectSprintTaskForm.value.type + this.translate.instant('project_planner.sprint_task.messages.update'), this.translate.instant('project_planner.title'));\r\n                this.event.emit({data});\r\n                this.onCancel();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsEditProjectSprintTaskModalRef.hide();\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vcHJvamVjdC1wbGFubmVyL2NvbXBvbmVudHMvZWRpdC10YXNrLW1vZGFsL2VkaXQtdGFzay1tb2RhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {DatePipe} from '@angular/common';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {ProjectPlannerSprintService} from './../../../.././../core/services/project-planner-sprint.service';\r\nimport {TaskService} from '../../../../../core/services/task.service';\r\n\r\n@Component({\r\n    selector: 'app-edit-task-modal',\r\n    templateUrl: './edit-task-modal.component.html',\r\n    styleUrls: ['./edit-task-modal.component.scss']\r\n})\r\n\r\nexport class EditTaskModalComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    editProjectSprintTaskForm: FormGroup;\r\n    taskId: any;\r\n    task: any;\r\n    project: any;\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n    users = [];\r\n    statusLists = [];\r\n    datepickerConfig = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsEditProjectSprintTaskModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private projectPlannerSprintService: ProjectPlannerSprintService,\r\n        private taskService: TaskService,\r\n        public datepipe: DatePipe\r\n    ) {\r\n    }\r\n\r\n    get projectSprintTaskControl() {\r\n        return this.editProjectSprintTaskForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.getTaskById(this.taskId);\r\n    }\r\n\r\n    loadForms() {\r\n\r\n        this.setDateFormat();\r\n\r\n        this.editProjectSprintTaskForm = this.formBuilder.group({\r\n            id: [this.taskId],\r\n            project_id: [this.task.project_id],\r\n            type: [this.task.type],\r\n            name: [this.task.name, [Validators.required, Validators.maxLength(255)]],\r\n            assign_to: [this.task.assign_to],\r\n            start_date: [this.task.start_date],\r\n            end_date: [this.task.end_date],\r\n            status: [this.task.status, Validators.required],\r\n            estimated_hours: [this.task.estimated_hours, Validators.pattern(/^[0-9]+\\:[0-5][0-9]$/)],\r\n            description: [this.task.description]\r\n        });\r\n        this.isPageLoaded = true;\r\n    }\r\n\r\n    setDateFormat() {\r\n        if (this.task.start_date) {\r\n            this.task.start_date = new Date(this.task.start_date);\r\n        }\r\n        if (this.task.end_date) {\r\n            this.task.end_date = new Date(this.task.end_date);\r\n        }\r\n    }\r\n\r\n    setStatus() {\r\n        if (this.task.type == 'Story') {\r\n            this.statusLists = [\r\n                {id: 1, name: this.translate.instant('common.status.open')},\r\n                {id: 2, name: this.translate.instant('common.status.in_progress')},\r\n                {id: 3, name: this.translate.instant('common.status.closed')}\r\n            ];\r\n        } else {\r\n            this.statusLists = [\r\n                {id: 1, name: this.translate.instant('common.status.open')},\r\n                {id: 2, name: this.translate.instant('common.status.on_hold')},\r\n                {id: 3, name: this.translate.instant('common.status.closed')},\r\n                {id: 4, name: this.translate.instant('common.status.released')}\r\n            ];\r\n        }\r\n    }\r\n\r\n    startDateChange(event: any) {\r\n        this.editProjectSprintTaskForm.patchValue({end_date: this.editProjectSprintTaskForm.value.start_date});\r\n    }\r\n\r\n    getTaskById(taskID) {\r\n        this.projectPlannerSprintService.getSprintTaskById(taskID).subscribe(data => {\r\n            this.task = data;\r\n            this.getUsers();\r\n            this.setStatus();\r\n            this.loadForms();\r\n        });\r\n    }\r\n\r\n    getUsers() {\r\n        if (this.project.assign_members == 'Unassign' || this.project.assign_members == null) {\r\n\r\n        } else {\r\n            let userArr = this.project.assign_members.split(',');\r\n            for (let iRow in userArr) {\r\n                for (let jRow in this.project.users) {\r\n                    if (this.project.users[jRow].id == userArr[iRow]) {\r\n                        this.users.push(this.project.users[jRow]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.editProjectSprintTaskForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        // --\r\n        // Date Format\r\n        this.editProjectSprintTaskForm.patchValue({start_date: this.datepipe.transform(this.editProjectSprintTaskForm.value.start_date, 'yyyy-MM-dd')});\r\n        this.editProjectSprintTaskForm.patchValue({end_date: this.datepipe.transform(this.editProjectSprintTaskForm.value.end_date, 'yyyy-MM-dd')});\r\n\r\n        if (this.editProjectSprintTaskForm.value.status == 4) {\r\n            // this.editProjectSprintTaskForm.patchValue({ name: this.editProjectSprintTaskForm.value.task_name });\r\n            this.projectPlannerSprintService.updateTask(this.editProjectSprintTaskForm.value).subscribe(data => {\r\n            });\r\n            this.taskService.convertSprintTaskToTask(this.editProjectSprintTaskForm.value).subscribe(data => {\r\n                this.toastr.success(this.translate.instant('project_planner.sprint_task.messages.released'), this.translate.instant('project_planner.title'));\r\n                this.event.emit({data});\r\n                this.onCancel();\r\n            });\r\n        } else {\r\n            this.projectPlannerSprintService.updateTask(this.editProjectSprintTaskForm.value).subscribe(data => {\r\n                this.toastr.success(this.editProjectSprintTaskForm.value.type + this.translate.instant('project_planner.sprint_task.messages.update'), this.translate.instant('project_planner.title'));\r\n                this.event.emit({data});\r\n                this.onCancel();\r\n            });\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsEditProjectSprintTaskModalRef.hide();\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vcHJvamVjdC1wbGFubmVyL2NvbXBvbmVudHMvbW92ZS10YXNrLW1vZGFsL21vdmUtdGFzay1tb2RhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {ProjectPlannerSprintService} from './../../../../../core/services/project-planner-sprint.service';\r\n\r\n@Component({\r\n    selector: 'app-move-task-modal',\r\n    templateUrl: './move-task-modal.component.html',\r\n    styleUrls: ['./move-task-modal.component.scss']\r\n})\r\n\r\nexport class MoveTaskModalComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    moveTaskForm: FormGroup;\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n    taskId: any;\r\n    sprintId: any;\r\n    sprints: any;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsMoveTaskModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private projectPlannerService: ProjectPlannerSprintService\r\n    ) {\r\n    }\r\n\r\n    get projectPlannerControl() {\r\n        return this.moveTaskForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.loadForms();\r\n        this.isPageLoaded = true;\r\n    }\r\n\r\n    loadForms() {\r\n        this.moveTaskForm = this.formBuilder.group({\r\n            task_id: [this.taskId],\r\n            sprint_id: [this.sprintId, Validators.required]\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.moveTaskForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.projectPlannerService.moveTask(this.moveTaskForm.value).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('project_planner.move_sprint_task.messages.move'), this.translate.instant('project_planner.title'));\r\n            this.event.emit({data});\r\n            this.onCancel();\r\n        });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsMoveTaskModalRef.hide();\r\n    }\r\n\r\n}\r\n","export default \".width-3-per {\\n  width: 3%;\\n}\\n\\n.width-12-per {\\n  width: 12%;\\n}\\n\\n.width-8-per {\\n  width: 8%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wbS9wcm9qZWN0LXBsYW5uZXIvcGFnZXMvcHJvamVjdC1wbGFubmVyLWRldGFpbC9DOlxcVXNlcnNcXHRodWFuXFxPbmVEcml2ZVxcRGVza3RvcFxcZ2xhdmFsLXRodWFuZGluaC9zcmNcXGFwcFxcbW9kdWxlc1xccG1cXHByb2plY3QtcGxhbm5lclxccGFnZXNcXHByb2plY3QtcGxhbm5lci1kZXRhaWxcXHByb2plY3QtcGxhbm5lci1kZXRhaWwuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvcG0vcHJvamVjdC1wbGFubmVyL3BhZ2VzL3Byb2plY3QtcGxhbm5lci1kZXRhaWwvcHJvamVjdC1wbGFubmVyLWRldGFpbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFNBQUE7QUNDSjs7QURFQTtFQUNJLFVBQUE7QUNDSjs7QURFQTtFQUNJLFNBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcG0vcHJvamVjdC1wbGFubmVyL3BhZ2VzL3Byb2plY3QtcGxhbm5lci1kZXRhaWwvcHJvamVjdC1wbGFubmVyLWRldGFpbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53aWR0aC0zLXBlciB7XHJcbiAgICB3aWR0aDogMyU7XHJcbn1cclxuXHJcbi53aWR0aC0xMi1wZXIge1xyXG4gICAgd2lkdGg6IDEyJTtcclxufVxyXG5cclxuLndpZHRoLTgtcGVyIHtcclxuICAgIHdpZHRoOiA4JTtcclxufVxyXG4iLCIud2lkdGgtMy1wZXIge1xuICB3aWR0aDogMyU7XG59XG5cbi53aWR0aC0xMi1wZXIge1xuICB3aWR0aDogMTIlO1xufVxuXG4ud2lkdGgtOC1wZXIge1xuICB3aWR0aDogOCU7XG59Il19 */\"","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {NgxRolesService} from 'ngx-permissions';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {DataTableDirective} from 'angular-datatables';\r\nimport {Subject} from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {UserService} from '../../../../../core/services/user.service';\r\nimport {ClientService} from '../../../../../core/services/client.service';\r\nimport {ProjectService} from '../../../../../core/services/project.service';\r\nimport {ProjectPlannerSprintService} from './../../../.././../core/services/project-planner-sprint.service';\r\n\r\nimport {project_status_key_value} from './../../../../../core/helpers/pm-helper';\r\n\r\nimport {EditProjectModalComponent} from './../../components/edit-project-modal/edit-project-modal.component';\r\nimport {CreateSprintModalComponent} from './../../components/create-sprint-modal/create-sprint-modal.component';\r\nimport {EditSprintModalComponent} from './../../components/edit-sprint-modal/edit-sprint-modal.component';\r\nimport {CreateSprintTaskModalComponent} from './../../components/create-sprint-task-modal/create-sprint-task-modal.component';\r\nimport {EditSprintTaskModalComponent} from './../../components/edit-sprint-task-modal/edit-sprint-task-modal.component';\r\nimport {CreateTaskModalComponent} from './../../components/create-task-modal/create-task-modal.component';\r\nimport {EditTaskModalComponent} from './../../components/edit-task-modal/edit-task-modal.component';\r\nimport {MoveTaskModalComponent} from './../../components/move-task-modal/move-task-modal.component';\r\n\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\nimport {environment} from '../../../../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-project-planner-detail',\r\n    templateUrl: './project-planner-detail.component.html',\r\n    styleUrls: ['./project-planner-detail.component.scss']\r\n})\r\n\r\nexport class ProjectPlannerDetailComponent implements AfterViewInit, OnDestroy, OnInit {\r\n    public apiUrl = environment.apiUrl;\r\n    public modalRef: BsModalRef;\r\n    @ViewChild(DataTableDirective, {static: false})\r\n    dtElement: DataTableDirective;\r\n    dtTrigger: Subject<any> = new Subject();\r\n    loginUser: any;\r\n    projectId: any;\r\n    project: any;\r\n    sprints: any;\r\n    permissions: any = [];\r\n    hideElementsChild = [];\r\n    clients = [];\r\n    userLists = [];\r\n    projectstatusKeyValue = project_status_key_value;\r\n    dtOptions: any = {};\r\n    isPageLoaded = false;\r\n    datepickerConfigs = {\r\n        dateInputFormat: 'YYYY-MM-DD',\r\n        containerClass: 'theme-red'\r\n    };\r\n\r\n    constructor(\r\n        public ngxRolesService: NgxRolesService,\r\n        public translate: TranslateService,\r\n        private toastr: ToastrService,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private modalService: BsModalService,\r\n        private userService: UserService,\r\n        private clientService: ClientService,\r\n        private projectService: ProjectService,\r\n        private projectPlannerSprintService: ProjectPlannerSprintService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n        this.route.paramMap.subscribe(params => {\r\n            this.projectId = params.get('id');\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.loginUser.is_client) {\r\n            this.getClient();\r\n        }\r\n        this.getUserkeyBy();\r\n        this.getCheckPermission();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dtTrigger.next();\r\n    }\r\n\r\n    // rerender(): void {\r\n    // \tsetTimeout(() => {\r\n    // \t\tthis.dtTrigger.next();\r\n    // \t});\r\n    // }\r\n\r\n    // rerender(): void {\r\n    // \tthis.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n    // \t\tdtInstance.destroy();\r\n    // \t\tthis.dtTrigger.next();\r\n    // \t});\r\n    // }\r\n\r\n    getClient() {\r\n        let that = this;\r\n        that.clientService.getClientsWithTrashed().subscribe(data => {\r\n            for (let iRow in data) {\r\n                that.clients.push({\r\n                    label: data[iRow].firstname + ' ' + data[iRow].lastname,\r\n                    value: data[iRow].id\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    getUserkeyBy() {\r\n        this.userService.getUserkeyBy().subscribe(data => {\r\n            this.userLists = data;\r\n        });\r\n    }\r\n\r\n    getCheckPermission() {\r\n        let role = this.ngxRolesService.getRole('admin');\r\n        this.permissions['project_permission'] = false;\r\n\r\n        if ((role && role.name == 'admin') || this.loginUser.is_super_admin) {\r\n            this.permissions['project_permission'] = true;\r\n            this.permissions['edit_delete_permission'] = {\r\n                view: true,\r\n                edit: true,\r\n                delete: true\r\n            };\r\n        } else {\r\n            this.projectService.getProjectPermission(this.projectId).subscribe(res => {\r\n                this.permissions['edit_delete_permission'] = res;\r\n                if (!this.permissions.edit_delete_permission.view) {\r\n                    this.router.navigate(['projects-planner']);\r\n                }\r\n            }, error => {\r\n                this.router.navigate(['projects-planner']);\r\n            });\r\n        }\r\n        this.getProjectById(true);\r\n    }\r\n\r\n    getProjectById(isLoad = false) {\r\n        this.projectService.getProjectById(this.projectId).subscribe(data => {\r\n            this.project = data;\r\n            this.getSprintByProject(isLoad);\r\n        });\r\n    }\r\n\r\n    getSprintByProject(isLoad = false) {\r\n        this.projectPlannerSprintService.getSprintByProject(this.projectId).subscribe(data => {\r\n            this.sprints = data;\r\n            if (isLoad) {\r\n                this.loadDatatable();\r\n            }\r\n\r\n            this.isPageLoaded = true;\r\n        });\r\n    }\r\n\r\n    loadDatatable() {\r\n        let that = this;\r\n        this.dtOptions = {\r\n            pagingType: 'full_numbers',\r\n            paging: true,\r\n            pageLength: that.loginUser.settings.tables_pagination_limit,\r\n            responsive: false,\r\n            autoWidth: false,\r\n            order: [0],\r\n            language: {\r\n                'sEmptyTable': this.translate.instant('common.datatable.sEmptyTable'),\r\n                'sInfo': this.translate.instant('common.datatable.sInfo'),\r\n                'sInfoEmpty': this.translate.instant('common.datatable.sInfoEmpty'),\r\n                'sSearch': '',\r\n                'sInfoPostFix': this.translate.instant('common.datatable.sInfoPostFix'),\r\n                'sInfoThousands': this.translate.instant('common.datatable.sInfoThousands'),\r\n                'sLengthMenu': this.translate.instant('common.datatable.sLengthMenu'),\r\n                'sLoadingRecords': this.translate.instant('common.datatable.sLoadingRecords'),\r\n                'sProcessing': this.translate.instant('common.datatable.sProcessing'),\r\n                'sZeroRecords': this.translate.instant('common.datatable.sZeroRecords'),\r\n                'sSearchPlaceholder': this.translate.instant('common.datatable.sSearchPlaceholder'),\r\n                'oPaginate': {\r\n                    'sFirst': this.translate.instant('common.datatable.oPaginate.sFirst'),\r\n                    'sLast': this.translate.instant('common.datatable.oPaginate.sLast'),\r\n                    'sNext': this.translate.instant('common.datatable.oPaginate.sNext'),\r\n                    'sPrevious': this.translate.instant('common.datatable.oPaginate.sPrevious')\r\n                },\r\n                'oAria': {\r\n                    'sSortAscending': this.translate.instant('common.datatable.oAria.sSortAscending'),\r\n                    'sSortDescending': this.translate.instant('common.datatable.oAria.sSortDescending')\r\n                }\r\n            },\r\n            columnDefs: [\r\n                {width: '30%', targets: [0]},\r\n                {width: '20%', targets: [1]},\r\n                {width: '10%', targets: [2]},\r\n                {width: '10%', targets: [3]},\r\n                {width: '10%', targets: [4]},\r\n                {width: '10%', targets: [5]},\r\n                {width: '10%', targets: [6], sortable: false}\r\n            ]\r\n        };\r\n\r\n        setTimeout(() => {\r\n            this.dtTrigger.next();\r\n        });\r\n    }\r\n\r\n    getTranslateStatus(statusKey) {\r\n        return this.projectstatusKeyValue[statusKey];\r\n    }\r\n\r\n    changeProjectStatus(projectIDs: any, status: any) {\r\n        let changeProject = {\r\n            ids: projectIDs,\r\n            status: status.id\r\n        };\r\n        this.projectService.changeStatus(changeProject).subscribe(data => {\r\n            this.getProjectById();\r\n            this.toastr.success(this.translate.instant('projects.messages.status'), this.translate.instant('projects.title'));\r\n        });\r\n    }\r\n\r\n    saveProjectDetail(name, value) {\r\n        this.project[name] = value;\r\n        if (name == 'start_date' && this.project.end_date < this.project.start_date) {\r\n            this.project.end_date = new Date(value);\r\n        }\r\n        this.projectService.update(this.project).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('projects.messages.update'), this.translate.instant('projects.title'));\r\n            this.getProjectById();\r\n        });\r\n    }\r\n\r\n    changeSprintId(index) {\r\n        this.hideElementsChild[index] = !this.hideElementsChild[index];\r\n    }\r\n\r\n    openEditProjectModal(projectID) {\r\n        let modalConfigs = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-lg animated fadeIn',\r\n            initialState: {\r\n                projectId: projectID,\r\n            }\r\n        };\r\n        this.modalRef = this.modalService.show(EditProjectModalComponent, modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getProjectById();\r\n        });\r\n    }\r\n\r\n    openCreateSprintModal() {\r\n        let modalConfigs = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-lg animated fadeIn',\r\n            initialState: {\r\n                project: this.project,\r\n            }\r\n        };\r\n        this.modalRef = this.modalService.show(CreateSprintModalComponent, modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getSprintByProject();\r\n        });\r\n    }\r\n\r\n    openEditSprintModal(project, sprintID: number) {\r\n        let modalConfigs = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-lg animated fadeIn',\r\n            initialState: {\r\n                project: project,\r\n                sprintId: sprintID,\r\n            }\r\n        };\r\n        this.modalRef = this.modalService.show(EditSprintModalComponent, modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getSprintByProject();\r\n        });\r\n    }\r\n\r\n    deleteSprint(sprintId) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text') + ' ' + this.translate.instant('project_planner.sprint.title').toLowerCase(),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.projectPlannerSprintService.delete(sprintId).subscribe(data => {\r\n                    this.toastr.success(this.translate.instant('project_planner.sprint.messages.delete'), this.translate.instant('project_planner.sprint.title'));\r\n                    this.getSprintByProject();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    openCreateSprintTaskModal(sprintData, type) {\r\n        sprintData.type = type;\r\n        let modalConfigs = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-lg animated fadeIn',\r\n            initialState: {\r\n                sprint: sprintData\r\n            }\r\n        };\r\n        this.modalRef = this.modalService.show(CreateSprintTaskModalComponent, modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getSprintByProject();\r\n        });\r\n    }\r\n\r\n    openEditSprintTaskModal(sprint, taskID) {\r\n        let modalConfigs = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-lg animated fadeIn',\r\n            initialState: {\r\n                sprint: sprint,\r\n                taskId: taskID,\r\n            }\r\n        };\r\n        this.modalRef = this.modalService.show(EditSprintTaskModalComponent, modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getSprintByProject();\r\n        });\r\n    }\r\n\r\n    openCreateTaskModal(project, type) {\r\n        project.type = type;\r\n        let modalConfigs = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-lg animated fadeIn',\r\n            initialState: {\r\n                project: project\r\n            }\r\n        };\r\n        this.modalRef = this.modalService.show(CreateTaskModalComponent, modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getSprintByProject();\r\n        });\r\n    }\r\n\r\n    openEditTaskModal(project, taskID) {\r\n        let modalConfigs = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-lg animated fadeIn',\r\n            initialState: {\r\n                taskId: taskID,\r\n                project: project\r\n            }\r\n        };\r\n        this.modalRef = this.modalService.show(EditTaskModalComponent, modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getSprintByProject();\r\n        });\r\n    }\r\n\r\n    openMoveTaskModal(taskID, sprintID) {\r\n        let modalConfigs = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-md animated fadeIn',\r\n            initialState: {\r\n                taskId: taskID,\r\n                sprintId: sprintID,\r\n                sprints: this.sprints.sprint_tasks\r\n            }\r\n        };\r\n        this.modalRef = this.modalService.show(MoveTaskModalComponent, modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getSprintByProject();\r\n        });\r\n    }\r\n\r\n    deleteTask(taskId) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text') + ' ' + this.translate.instant('project_planner.sprint_task.title4').toLowerCase(),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.projectPlannerSprintService.deleteTask(taskId).subscribe(data => {\r\n                    this.toastr.success(this.translate.instant('project_planner.sprint_task.messages.task_delete'), this.translate.instant('project_planner.sprint_task.title'));\r\n                    this.getSprintByProject();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteStory(taskId) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text') + ' ' + this.translate.instant('project_planner.sprint_task.title5').toLowerCase(),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.projectPlannerSprintService.deleteTask(taskId).subscribe(data => {\r\n                    this.toastr.success(this.translate.instant('project_planner.sprint_task.messages.story_delete'), this.translate.instant('project_planner.sprint_task.title'));\r\n                    this.getSprintByProject();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","export default \".width-3-per {\\n  width: 3%;\\n}\\n\\n.width-12-per {\\n  width: 12%;\\n}\\n\\n.width-8-per {\\n  width: 8%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wbS9wcm9qZWN0LXBsYW5uZXIvcGFnZXMvcHJvamVjdC1wbGFubmVyLWxpc3QvQzpcXFVzZXJzXFx0aHVhblxcT25lRHJpdmVcXERlc2t0b3BcXGdsYXZhbC10aHVhbmRpbmgvc3JjXFxhcHBcXG1vZHVsZXNcXHBtXFxwcm9qZWN0LXBsYW5uZXJcXHBhZ2VzXFxwcm9qZWN0LXBsYW5uZXItbGlzdFxccHJvamVjdC1wbGFubmVyLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvcG0vcHJvamVjdC1wbGFubmVyL3BhZ2VzL3Byb2plY3QtcGxhbm5lci1saXN0L3Byb2plY3QtcGxhbm5lci1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksU0FBQTtBQ0NKOztBREVBO0VBQ0ksVUFBQTtBQ0NKOztBREVBO0VBQ0ksU0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wbS9wcm9qZWN0LXBsYW5uZXIvcGFnZXMvcHJvamVjdC1wbGFubmVyLWxpc3QvcHJvamVjdC1wbGFubmVyLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIud2lkdGgtMy1wZXIge1xyXG4gICAgd2lkdGg6IDMlO1xyXG59XHJcblxyXG4ud2lkdGgtMTItcGVyIHtcclxuICAgIHdpZHRoOiAxMiU7XHJcbn1cclxuXHJcbi53aWR0aC04LXBlciB7XHJcbiAgICB3aWR0aDogOCU7XHJcbn1cclxuIiwiLndpZHRoLTMtcGVyIHtcbiAgd2lkdGg6IDMlO1xufVxuXG4ud2lkdGgtMTItcGVyIHtcbiAgd2lkdGg6IDEyJTtcbn1cblxuLndpZHRoLTgtcGVyIHtcbiAgd2lkdGg6IDglO1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {NgxRolesService} from 'ngx-permissions';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {ProjectPlannerSprintService} from './../../../.././../core/services/project-planner-sprint.service';\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\nimport {ProjectService} from './../../../.././../core/services/project.service';\r\nimport {UserService} from '../../../../../core/services/user.service';\r\n\r\nimport {CreateProjectModalComponent} from './../../components/create-project-modal/create-project-modal.component';\r\nimport {EditProjectModalComponent} from './../../components/edit-project-modal/edit-project-modal.component';\r\n\r\nimport {ProjectLogos} from '../../../../../core/helpers/pm-helper';\r\nimport {environment} from '../../../../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-project-planner-list',\r\n    templateUrl: './project-planner-list.component.html',\r\n    styleUrls: ['./project-planner-list.component.scss']\r\n})\r\n\r\nexport class ProjectPlannerListComponent implements OnInit {\r\n    public modalRef: BsModalRef;\r\n    projectPlanners: any;\r\n    userLists = [];\r\n    loginUser: any;\r\n    isPageLoaded = false;\r\n    statusfilterId = 0;\r\n    logos = ProjectLogos;\r\n    modalConfigs = {\r\n        animated: true,\r\n        keyboard: true,\r\n        backdrop: true,\r\n        ignoreBackdropClick: false,\r\n        class: 'inmodal modal-dialog-centered modal-lg animated fadeIn'\r\n    };\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private toastr: ToastrService,\r\n        public ngxRolesService: NgxRolesService,\r\n        private modalService: BsModalService,\r\n        private http: HttpClient,\r\n        private projectPlannerService: ProjectPlannerSprintService,\r\n        private userService: UserService,\r\n        private projectService: ProjectService,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getUserkeyBy();\r\n        this.getAllProjectPlanner();\r\n    }\r\n\r\n    getCheckPermission(project, action) {\r\n        let role = this.ngxRolesService.getRole('admin');\r\n        if ((role && role.name == 'admin') || this.loginUser.is_super_admin) {\r\n            return true;\r\n        }\r\n\r\n        if (project.pivot[action]) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getAllProjectPlanner() {\r\n        this.projectPlannerService.getAll({'statusId': this.statusfilterId}).subscribe(data => {\r\n            this.projectPlanners = data;\r\n            this.isPageLoaded = true;\r\n        });\r\n    }\r\n\r\n    filterByStatus(statusfilterId) {\r\n        this.statusfilterId = statusfilterId;\r\n        this.getAllProjectPlanner();\r\n    }\r\n\r\n    getUserkeyBy() {\r\n        this.userService.getUserkeyBy().subscribe(data => {\r\n            this.userLists = data;\r\n        });\r\n    }\r\n\r\n    openCreateProjectModal() {\r\n        this.modalRef = this.modalService.show(CreateProjectModalComponent, this.modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getAllProjectPlanner();\r\n        });\r\n    }\r\n\r\n    openEditProjectModal(projectID) {\r\n        let modalConfigs = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered modal-lg animated fadeIn',\r\n            initialState: {\r\n                projectId: projectID,\r\n            }\r\n        };\r\n        this.modalRef = this.modalService.show(EditProjectModalComponent, modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.getAllProjectPlanner();\r\n        });\r\n    }\r\n\r\n    deleteProject(projectId) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text4'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.projectService.delete(projectId, {'ProjectLogos': this.logos}).subscribe(data => {\r\n                    this.toastr.success(this.translate.instant('projects.messages.delete'), this.translate.instant('project_planner.title'));\r\n                    this.getAllProjectPlanner();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NgxPermissionsGuard} from 'ngx-permissions';\r\n\r\nimport {ProjectPlannerListComponent} from './pages/project-planner-list/project-planner-list.component';\r\nimport {ProjectPlannerDetailComponent} from './pages/project-planner-detail/project-planner-detail.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ProjectPlannerListComponent\r\n    },\r\n    {\r\n        path: 'detail/:id',\r\n        canActivate: [NgxPermissionsGuard],\r\n        component: ProjectPlannerDetailComponent,\r\n        data: {\r\n            breadcrumbs: {\r\n                text: 'common.detail',\r\n                icon: 'fa fa-product-hunt',\r\n                hasParams: true,\r\n                show: true,\r\n                isHome: true\r\n            },\r\n            permissions: {\r\n                only: ['admin', 'super_admin', 'projects_view']\r\n            }\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class ProjectPlannerRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {BsDatepickerModule, BsDropdownModule, DatepickerModule, ModalModule, TooltipModule} from 'ngx-bootstrap';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport {ExportAsModule} from 'ngx-export-as';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\nimport {Ng5SliderModule} from 'ng5-slider';\r\nimport {NgxEditorModule} from 'ngx-editor';\r\nimport {ProgressbarModule} from 'ngx-bootstrap/progressbar';\r\nimport {NgxPermissionsModule} from 'ngx-permissions';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\n\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport {ProjectPlannerRoutingModule} from './project-planner-routing.module';\r\n\r\nimport {CreateProjectModalComponent} from './components/create-project-modal/create-project-modal.component';\r\nimport {EditProjectModalComponent} from './components/edit-project-modal/edit-project-modal.component';\r\nimport {CreateSprintModalComponent} from './components/create-sprint-modal/create-sprint-modal.component';\r\nimport {ProjectPlannerListComponent} from './pages/project-planner-list/project-planner-list.component';\r\nimport {CreateTaskModalComponent} from './components/create-task-modal/create-task-modal.component';\r\nimport {EditSprintModalComponent} from './components/edit-sprint-modal/edit-sprint-modal.component';\r\nimport {EditTaskModalComponent} from './components/edit-task-modal/edit-task-modal.component';\r\nimport {MoveTaskModalComponent} from './components/move-task-modal/move-task-modal.component';\r\nimport {ProjectPlannerDetailComponent} from './pages/project-planner-detail/project-planner-detail.component';\r\nimport {CreateSprintTaskModalComponent} from './components/create-sprint-task-modal/create-sprint-task-modal.component';\r\nimport {EditSprintTaskModalComponent} from './components/edit-sprint-task-modal/edit-sprint-task-modal.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CreateProjectModalComponent,\r\n        EditProjectModalComponent,\r\n        CreateSprintModalComponent,\r\n        ProjectPlannerListComponent,\r\n        CreateTaskModalComponent,\r\n        EditSprintModalComponent,\r\n        EditTaskModalComponent,\r\n        MoveTaskModalComponent,\r\n        ProjectPlannerDetailComponent,\r\n        CreateSprintTaskModalComponent,\r\n        EditSprintTaskModalComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ProjectPlannerRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgSelectModule,\r\n        BsDropdownModule,\r\n        DataTablesModule,\r\n        ExportAsModule,\r\n        Ng5SliderModule,\r\n        NgxEditorModule,\r\n        NgxPermissionsModule,\r\n        TooltipModule.forRoot(),\r\n        DatepickerModule.forRoot(),\r\n        BsDatepickerModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n        ProgressbarModule.forRoot(),\r\n        TranslateModule.forChild({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (HttpLoaderFactory),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        SharedModule\r\n    ],\r\n    entryComponents: [\r\n        CreateProjectModalComponent,\r\n        EditProjectModalComponent,\r\n        CreateSprintModalComponent,\r\n        CreateSprintTaskModalComponent,\r\n        EditSprintTaskModalComponent,\r\n        CreateTaskModalComponent,\r\n        EditSprintModalComponent,\r\n        EditTaskModalComponent,\r\n        MoveTaskModalComponent\r\n    ]\r\n})\r\n\r\nexport class ProjectPlannerModule {\r\n}\r\n\r\n// Required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n"],"sourceRoot":"webpack:///"}