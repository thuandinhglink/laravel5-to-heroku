{"version":3,"sources":["./src/app/modules/settings/components/company-detail/company-detail.component.html","./src/app/modules/settings/components/cronjob-settings/cronjob-settings.component.html","./src/app/modules/settings/components/custom-field-create/custom-field-create.component.html","./src/app/modules/settings/components/custom-field-edit/custom-field-edit.component.html","./src/app/modules/settings/components/custom-fields/custom-fields.component.html","./src/app/modules/settings/components/dashboard-settings/dashboard-settings.component.html","./src/app/modules/settings/components/database-backup/database-backup.component.html","./src/app/modules/settings/components/email-notifications/email-notifications.component.html","./src/app/modules/settings/components/email-settings/email-settings.component.html","./src/app/modules/settings/components/email-templates/email-templates.component.html","./src/app/modules/settings/components/estimate-settings/estimate-settings.component.html","./src/app/modules/settings/components/invoice-settings/invoice-settings.component.html","./src/app/modules/settings/components/menu-allocation/menu-allocation.component.html","./src/app/modules/settings/components/paypal-gateway/paypal-gateway.component.html","./src/app/modules/settings/components/slack-settings/slack-settings.component.html","./src/app/modules/settings/components/system-settings/system-settings.component.html","./src/app/modules/settings/components/theme-settings/theme-settings.component.html","./src/app/modules/settings/components/translations-settings/components/create-translation/create-translation.component.html","./src/app/modules/settings/components/translations-settings/components/edit-translation/edit-translation.component.html","./src/app/modules/settings/components/translations-settings/translations-settings.component.html","./src/app/modules/settings/pages/settings/settings.component.html","./src/app/core/services/custom-fields.service.ts","./src/app/core/services/database-backup.service.ts","./src/app/core/services/email-template.service.ts","./src/app/core/services/invoice-setting.service.ts","./src/app/modules/settings/components/company-detail/company-detail.component.scss","./src/app/modules/settings/components/company-detail/company-detail.component.ts","./src/app/modules/settings/components/cronjob-settings/cronjob-settings.component.scss","./src/app/modules/settings/components/cronjob-settings/cronjob-settings.component.ts","./src/app/modules/settings/components/custom-field-create/custom-field-create.component.scss","./src/app/modules/settings/components/custom-field-create/custom-field-create.component.ts","./src/app/modules/settings/components/custom-field-edit/custom-field-edit.component.scss","./src/app/modules/settings/components/custom-field-edit/custom-field-edit.component.ts","./src/app/modules/settings/components/custom-fields/custom-fields.component.scss","./src/app/modules/settings/components/custom-fields/custom-fields.component.ts","./src/app/modules/settings/components/dashboard-settings/dashboard-settings.component.scss","./src/app/modules/settings/components/dashboard-settings/dashboard-settings.component.ts","./src/app/modules/settings/components/database-backup/database-backup.component.scss","./src/app/modules/settings/components/database-backup/database-backup.component.ts","./src/app/modules/settings/components/email-notifications/email-notifications.component.scss","./src/app/modules/settings/components/email-notifications/email-notifications.component.ts","./src/app/modules/settings/components/email-settings/email-settings.component.scss","./src/app/modules/settings/components/email-settings/email-settings.component.ts","./src/app/modules/settings/components/email-templates/email-templates.component.scss","./src/app/modules/settings/components/email-templates/email-templates.component.ts","./src/app/modules/settings/components/estimate-settings/estimate-settings.component.scss","./src/app/modules/settings/components/estimate-settings/estimate-settings.component.ts","./src/app/modules/settings/components/invoice-settings/invoice-settings.component.scss","./src/app/modules/settings/components/invoice-settings/invoice-settings.component.ts","./src/app/modules/settings/components/menu-allocation/menu-allocation.component.scss","./src/app/modules/settings/components/menu-allocation/menu-allocation.component.ts","./src/app/modules/settings/components/paypal-gateway/paypal-gateway.component.scss","./src/app/modules/settings/components/paypal-gateway/paypal-gateway.component.ts","./src/app/modules/settings/components/slack-settings/slack-settings.component.scss","./src/app/modules/settings/components/slack-settings/slack-settings.component.ts","./src/app/modules/settings/components/system-settings/system-settings.component.scss","./src/app/modules/settings/components/system-settings/system-settings.component.ts","./src/app/modules/settings/components/theme-settings/theme-settings.component.scss","./src/app/modules/settings/components/theme-settings/theme-settings.component.ts","./src/app/modules/settings/components/translations-settings/components/create-translation/create-translation.component.scss","./src/app/modules/settings/components/translations-settings/components/create-translation/create-translation.component.ts","./src/app/modules/settings/components/translations-settings/components/edit-translation/edit-translation.component.scss","./src/app/modules/settings/components/translations-settings/components/edit-translation/edit-translation.component.ts","./src/app/modules/settings/components/translations-settings/translations-settings.component.scss","./src/app/modules/settings/components/translations-settings/translations-settings.component.ts","./src/app/modules/settings/pages/settings/settings.component.scss","./src/app/modules/settings/pages/settings/settings.component.ts","./src/app/modules/settings/settings-routing.module.ts","./src/app/modules/settings/settings.module.ts"],"names":[],"mappings":"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","file":"modules-settings-settings-module.js","sourcesContent":["export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.company_details.title' | translate}}</span></h4>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"settingsForm\\\">\\r\\n    <div class=\\\"form-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"company_name\\\">{{'settings.company_details.create.fields.company_name' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && companyDetail.company_name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"company_name\\\" id=\\\"company_name\\\" placeholder=\\\"{{'settings.company_details.create.placeholders.placeholder1' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && companyDetail.company_name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"companyDetail.company_name.errors.required\\\">{{'settings.company_details.create.error_messages.message1' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"company_legal_name\\\">{{'settings.company_details.create.fields.legal_name' | translate}}</label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && companyDetail.company_legal_name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"company_legal_name\\\" id=\\\"company_legal_name\\\" placeholder=\\\"{{'settings.company_details.create.placeholders.placeholder2' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && companyDetail.company_legal_name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"companyDetail.company_legal_name.errors.required\\\">{{'settings.company_details.create.error_messages.message2' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"company_short_name\\\">{{'settings.company_details.create.fields.short_name' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && companyDetail.company_short_name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"company_short_name\\\" id=\\\"company_short_name\\\" placeholder=\\\"{{'settings.company_details.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && companyDetail.company_short_name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"companyDetail.company_short_name.errors.required\\\">{{'settings.company_details.create.error_messages.message3' | translate}}</div>\\r\\n                        <div *ngIf=\\\"companyDetail.company_short_name.errors.maxlength\\\">{{'settings.company_details.create.error_messages.message4' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"company_email\\\">{{'settings.company_details.create.fields.company_email' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && companyDetail.company_email.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"company_email\\\" id=\\\"company_email\\\" placeholder=\\\"{{'settings.company_details.create.placeholders.placeholder4' | translate}}\\\" type=\\\"email\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && companyDetail.company_email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"companyDetail.company_email.errors.required\\\">{{'settings.company_details.create.error_messages.message5' | translate}}</div>\\r\\n                        <div *ngIf=\\\"companyDetail.company_email.errors.email\\\">{{'settings.company_details.create.error_messages.message6' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"company_phone\\\">{{'settings.company_details.create.fields.company_phone' | translate}}</label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && companyDetail.company_phone.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"company_phone\\\" id=\\\"company_phone\\\" placeholder=\\\"{{'settings.company_details.create.placeholders.placeholder5' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && companyDetail.company_phone.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"companyDetail.company_phone.errors.pattern\\\">{{'settings.company_details.create.error_messages.message7' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"company_website\\\">{{'settings.company_details.create.fields.company_website' | translate}}</label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && companyDetail.company_website.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"company_website\\\" id=\\\"company_website\\\" placeholder=\\\"{{'settings.company_details.create.placeholders.placeholder6' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && companyDetail.company_website.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"companyDetail.company_website.errors.pattern\\\">{{'settings.company_details.create.error_messages.message8' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"company_country\\\">{{'settings.company_details.create.fields.company_country' | translate}}</label>\\r\\n                    <ng-select [items]=\\\"countries\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"company_country\\\" labelForId=\\\"country\\\" placeholder=\\\"{{'settings.company_details.create.placeholders.placeholder7' | translate}}\\\"></ng-select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"company_city\\\">{{'settings.company_details.create.fields.city' | translate}}</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"company_city\\\" id=\\\"company_city\\\" placeholder=\\\"{{'settings.company_details.create.placeholders.placeholder8' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"company_zipcode\\\">{{'settings.company_details.create.fields.company_zipcode' | translate}}</label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && companyDetail.company_zipcode.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"company_zipcode\\\" id=\\\"company_zipcode\\\" placeholder=\\\"{{'settings.company_details.create.placeholders.placeholder9' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && companyDetail.company_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"companyDetail.company_zipcode.errors.required\\\">{{'settings.company_details.create.error_messages.message9' | translate}}</div>\\r\\n                        <div *ngIf=\\\"companyDetail.company_zipcode.errors.pattern\\\">{{'settings.company_details.create.error_messages.message10' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"contact_person\\\">{{'settings.company_details.create.fields.contact_person' | translate}}</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"contact_person\\\" id=\\\"contact_person\\\" placeholder=\\\"{{'settings.company_details.create.placeholders.placeholder10' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"company_address\\\">{{'settings.company_details.create.fields.company_address' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <textarea [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && companyDetail.company_address.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"company_address\\\" id=\\\"company_address\\\" placeholder=\\\"{{'settings.company_details.create.placeholders.placeholder11' | translate}}\\\"></textarea>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && companyDetail.company_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"companyDetail.company_address.errors.required\\\">{{'settings.company_details.create.error_messages.message11' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 text-right\\\">\\r\\n                <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-cancel\\\">{{'common.cancel' | translate}}</a>\\r\\n                <button *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'companydetail_create', 'companydetail_edit']\\\" class=\\\"btn btn-submit\\\" type=\\\"submit\\\">{{'common.save' | translate}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.cronjob.title' | translate}}</span></h4>\\r\\n</div>\\r\\n<form class=\\\"form\\\">\\r\\n    <div class=\\\"form-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"active_cronjob\\\">{{'settings.cronjob.create.fields.active_cronjob' | translate}}</label>\\r\\n                    <label class=\\\"checkbox-container d-block\\\">\\r\\n                        <input [(ngModel)]=\\\"settings.active_cronjob\\\" class=\\\"form-control\\\" id=\\\"active_cronjob\\\" name=\\\"active_cronjob\\\" type=\\\"checkbox\\\"/>\\r\\n                        <span class=\\\"checkbox-checkmark\\\"></span>\\r\\n                    </label><br/>\\r\\n                    <small>{{'settings.cronjob.create.messages.message1' | translate}}</small>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"automatic_backup\\\">{{'settings.cronjob.create.fields.automatic_backup' | translate}}</label>\\r\\n                    <label class=\\\"checkbox-container d-block\\\">\\r\\n                        <input [(ngModel)]=\\\"settings.automatic_backup\\\" class=\\\"form-control\\\" id=\\\"automatic_backup\\\" name=\\\"automatic_backup\\\" type=\\\"checkbox\\\"/>\\r\\n                        <span class=\\\"checkbox-checkmark\\\"></span>\\r\\n                    </label><br/>\\r\\n                    <small>{{'settings.cronjob.create.messages.message2' | translate}}</small>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"automatic_backup\\\">{{'settings.cronjob.create.fields.daily_report_emails' | translate}}</label>\\r\\n                    <input [(ngModel)]=\\\"settings.daily_report_emails\\\" class=\\\"form-control\\\" id=\\\"daily_report_emails\\\" name=\\\"daily_report_emails\\\" placeholder=\\\"{{'settings.cronjob.create.placeholders.placeholder1' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    <small>Ex. admin@demo.com,user@demo.com</small>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"last_cronjob_run\\\">{{'settings.cronjob.create.fields.last_cronjob_run' | translate}}</label><br>\\r\\n                    <small>{{settings.last_cronjob_run | dateTimeFormatFilter: loginUser.settings.date_time_format }}</small>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 text-right\\\">\\r\\n                <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-cancel\\\">{{'common.cancel' | translate}}</a>\\r\\n                <button (click)=\\\"saveCronjobSettings()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'cronjob_create', 'cronjob_edit']\\\" class=\\\"btn btn-submit\\\" type=\\\"button\\\">{{'common.save' | translate}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-list-alt\\\"></i>&nbsp;{{'settings.custom_fields.title' | translate}}</h2>\\r\\n    <button (click)=\\\"bsModalRef.hide()\\\" aria-label=\\\"Close\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"createCustomFieldForm\\\" class=\\\"bs4-forms\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && customFieldControl.form_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"form_id\\\">{{'settings.custom_fields.create.fields.custom_field_for' | translate}}</label>&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                        <ng-select [items]=\\\"formTables\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"form_id\\\" placeholder=\\\"{{'settings.custom_fields.create.placeholders.placeholder1' | translate}}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && customFieldControl.form_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"customFieldControl.form_id.errors.required\\\">{{'settings.custom_fields.create.error_messages.message1' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field_label\\\">{{'settings.custom_fields.create.fields.field_label' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && customFieldControl.field_label.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"field_label\\\" id=\\\"field_label\\\" placeholder=\\\"{{'settings.custom_fields.create.placeholders.placeholder2' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && customFieldControl.field_label.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"customFieldControl.field_label.errors.required\\\">{{'settings.custom_fields.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"help_text\\\">{{'settings.custom_fields.create.fields.help_text' | translate}}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && customFieldControl.help_text.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"help_text\\\" id=\\\"help_text\\\" placeholder=\\\"{{'settings.custom_fields.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && customFieldControl.help_text.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"customFieldControl.help_text.errors.required\\\">{{'settings.custom_fields.create.error_messages.message3' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"createCustomFieldForm.get('field_type').value != 'checkbox'\\\" class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"is_required\\\">{{'settings.custom_fields.create.fields.is_required_field' | translate}}</label>\\r\\n                        <div>\\r\\n                            <label class=\\\"checkbox-container col-form-label\\\">\\r\\n                                <input class=\\\"form-control\\\" formControlName=\\\"is_required\\\" id=\\\"is_required\\\" type=\\\"checkbox\\\"/>\\r\\n                                <span class=\\\"checkbox-checkmark\\\"></span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"show_on_details\\\">{{'settings.custom_fields.create.fields.show_on_detail' | translate}}</label>\\r\\n                        <div>\\r\\n                            <label class=\\\"checkbox-container col-form-label\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"form-control\\\" formControlName=\\\"show_on_details\\\" id=\\\"show_on_details\\\" />\\r\\n                                <span class=\\\"checkbox-checkmark\\\"></span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && customFieldControl.field_type.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field_type\\\">{{'settings.custom_fields.create.fields.field_type' | translate}}</label>&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                        <ng-select (change)=\\\"onChange($event)\\\" [items]=\\\"('customFieldsType' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" formControlName=\\\"field_type\\\" placeholder=\\\"{{'settings.custom_fields.create.placeholders.placeholder4' | translate}}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && customFieldControl.field_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"customFieldControl.field_type.errors.required\\\">{{'settings.custom_fields.create.error_messages.message4' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"createCustomFieldForm.get('field_type').value == 'dropdown'\\\" class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                        <ng-container formArrayName=\\\"select_options\\\">\\r\\n                            <table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"table table-bordered table-hover b4-datatable\\\" width=\\\"100%\\\">\\r\\n                                <thead>\\r\\n                                <tr>\\r\\n                                    <th colspan=\\\"3\\\" text-align=\\\"center\\\">{{'settings.custom_fields.headings.head1' | translate}}</th>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <th class=\\\"width-200\\\">{{'settings.custom_fields.columns.label' | translate}}</th>\\r\\n                                    <th class=\\\"width-200\\\">{{'settings.custom_fields.columns.value' | translate}}</th>\\r\\n                                    <th>\\r\\n                                        <button (click)=\\\"addOption()\\\" class=\\\"btn btn-raised mint-gradient white mb-0\\\" type=\\\"button\\\">\\r\\n                                            <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                                </thead>\\r\\n                                <tbody *ngIf=\\\"createCustomFieldForm.get('select_options').controls?.length != 0\\\">\\r\\n                                <tr *ngFor=\\\"let option of createCustomFieldForm.get('select_options').controls; let j = index\\\">\\r\\n                                    <ng-container [formGroupName]=\\\"j\\\">\\r\\n                                        <td>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && customFieldControl.select_options.controls[j].controls.label.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"label\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted &&  customFieldControl.select_options.controls[j].controls.label.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"customFieldControl.select_options.controls[j].controls.label.errors.required\\\">{{'settings.custom_fields.create.error_messages.message5' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && customFieldControl.select_options.controls[j].controls.value.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"value\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted &&  customFieldControl.select_options.controls[j].controls.value.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"customFieldControl.select_options.controls[j].controls.value.errors.required\\\">{{'settings.custom_fields.create.error_messages.message6' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <a (click)=\\\"deleteOption(j)\\\" class=\\\"btn btn-raised mint-gradient white\\\"><i class=\\\"fa fa-close\\\"></i></a>\\r\\n                                        </td>\\r\\n                                    </ng-container>\\r\\n                                </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\"><span>{{'common.create' | translate}}</span></button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-list-alt\\\"></i>&nbsp;{{'settings.custom_fields.title' | translate}}</h2>\\r\\n    <button (click)=\\\"bsModalRef.hide()\\\" aria-label=\\\"Close\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"editCustomFieldForm\\\" class=\\\"bs4-forms\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && customFieldControl.form_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"form_id\\\">{{'settings.custom_fields.create.fields.custom_field_for' | translate}}</label>&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                        <ng-select [items]=\\\"formTables\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"form_id\\\" placeholder=\\\"{{'settings.custom_fields.create.placeholders.placeholder1' | translate}}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && customFieldControl.form_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"customFieldControl.form_id.errors.required\\\">{{'settings.custom_fields.create.error_messages.message1' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field_label\\\">{{'settings.custom_fields.create.fields.field_label' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && customFieldControl.field_label.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"field_label\\\" id=\\\"field_label\\\" placeholder=\\\"{{'settings.custom_fields.create.placeholders.placeholder2' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && customFieldControl.field_label.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"customFieldControl.field_label.errors.required\\\">{{'settings.custom_fields.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"help_text\\\">{{'settings.custom_fields.create.fields.help_text' | translate}}</label>\\r\\n                        <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && customFieldControl.help_text.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"help_text\\\" id=\\\"help_text\\\" placeholder=\\\"{{'settings.custom_fields.create.placeholders.placeholder3' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && customFieldControl.help_text.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"customFieldControl.help_text.errors.required\\\">{{'settings.custom_fields.create.error_messages.message3' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"editCustomFieldForm.get('field_type').value != 'checkbox'\\\" class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"is_required\\\">{{'settings.custom_fields.create.fields.is_required_field' | translate}}</label>\\r\\n                        <div>\\r\\n                            <label class=\\\"checkbox-container col-form-label\\\">\\r\\n                                <input class=\\\"form-control\\\" formControlName=\\\"is_required\\\" id=\\\"is_required\\\" type=\\\"checkbox\\\"/>\\r\\n                                <span class=\\\"checkbox-checkmark\\\"></span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"show_on_details\\\">{{'settings.custom_fields.create.fields.show_on_detail' | translate}}</label>\\r\\n                        <div>\\r\\n                            <label class=\\\"checkbox-container col-form-label\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"form-control\\\" formControlName=\\\"show_on_details\\\" id=\\\"show_on_details\\\" />\\r\\n                                <span class=\\\"checkbox-checkmark\\\"></span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && customFieldControl.field_type.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field_type\\\">{{'settings.custom_fields.create.fields.field_type' | translate}}</label>&nbsp;<span class=\\\"text-danger\\\">*</span>\\r\\n                        <ng-select (change)=\\\"onChange($event)\\\" [items]=\\\"('customFieldsType' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" formControlName=\\\"field_type\\\" placeholder=\\\"{{'settings.custom_fields.create.placeholders.placeholder4' | translate}}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && customFieldControl.field_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"customFieldControl.field_type.errors.required\\\">{{'settings.custom_fields.create.error_messages.message4' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"editCustomFieldForm.get('field_type').value == 'dropdown'\\\" class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                        <ng-container formArrayName=\\\"select_options\\\">\\r\\n                            <table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"table table-bordered table-hover b4-datatable\\\" width=\\\"100%\\\">\\r\\n                                <thead>\\r\\n                                <tr>\\r\\n                                    <th colspan=\\\"3\\\" text-align=\\\"center\\\">{{'settings.custom_fields.headings.head1' | translate}}</th>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <th class=\\\"width-200\\\">{{'settings.custom_fields.columns.label' | translate}}</th>\\r\\n                                    <th class=\\\"width-200\\\">{{'settings.custom_fields.columns.value' | translate}}</th>\\r\\n                                    <th>\\r\\n                                        <button (click)=\\\"addOption()\\\" class=\\\"btn btn-raised mint-gradient white mb-0\\\" type=\\\"button\\\">\\r\\n                                            <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                                </thead>\\r\\n                                <tbody *ngIf=\\\"editCustomFieldForm.get('select_options').controls?.length != 0\\\">\\r\\n                                <tr *ngFor=\\\"let option of editCustomFieldForm.get('select_options').controls; let j = index\\\">\\r\\n                                    <ng-container [formGroupName]=\\\"j\\\">\\r\\n                                        <td>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && customFieldControl.select_options.controls[j].controls.label.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"label\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted &&  customFieldControl.select_options.controls[j].controls.label.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"customFieldControl.select_options.controls[j].controls.label.errors.required\\\">{{'settings.custom_fields.create.error_messages.message5' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && customFieldControl.select_options.controls[j].controls.value.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"value\\\" type=\\\"text\\\"/>\\r\\n                                            <div *ngIf=\\\"isFormSubmitted &&  customFieldControl.select_options.controls[j].controls.value.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"customFieldControl.select_options.controls[j].controls.value.errors.required\\\">{{'settings.custom_fields.create.error_messages.message6' | translate}}</div>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <a (click)=\\\"deleteOption(j)\\\" class=\\\"btn btn-raised mint-gradient white\\\"><i class=\\\"fa fa-close\\\"></i></a>\\r\\n                                        </td>\\r\\n                                    </ng-container>\\r\\n                                </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\"><span>{{'common.update' | translate}}</span></button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-3\\\"><span>{{'settings.custom_fields.title' | translate}}</span></h4>\\r\\n    <button (click)=\\\"openCustomFieldCreateModal()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'customfields_create']\\\" class=\\\"btn btn-create mb-0\\\" tooltip=\\\"{{'common.create' | translate}}\\\" type=\\\"button\\\">\\r\\n        <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n</div>\\r\\n<div class=\\\"card-content\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n            <table [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"table table-bordered table-hover b4-datatable\\\" datatable id=\\\"custom_field_table\\\" width=\\\"100%\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th>#</th>\\r\\n                    <th>{{'settings.custom_fields.columns.label' | translate}}</th>\\r\\n                    <th>{{'settings.custom_fields.columns.custom_field_for' | translate}}</th>\\r\\n                    <th>{{'settings.custom_fields.columns.type' | translate}}</th>\\r\\n                    <th>{{'settings.custom_fields.columns.status' | translate}}</th>\\r\\n                    <th>{{'settings.custom_fields.columns.actions' | translate}}</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody *ngIf=\\\"customFields?.length != 0\\\">\\r\\n                <tr *ngFor=\\\"let customField of customFields; index as i\\\">\\r\\n                    <td>{{i + 1}}</td>\\r\\n                    <td>{{customField.field_label}}</td>\\r\\n                    <td>{{formTables[customField.form_id]}}</td>\\r\\n                    <td>{{customField.field_type}}</td>\\r\\n                    <td>\\r\\n                        <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'customfields_edit']; else elseBlock1; then thenBlock1\\\"></div>\\r\\n                        <ng-template #elseBlock1>\\r\\n                            <div class=\\\"budges-status\\\">\\r\\n                                <span *ngIf=\\\"customField.status == '1'\\\" class=\\\"completed\\\">{{'common.status.active' | translate}}</span>\\r\\n                                <span *ngIf=\\\"customField.status == '0'\\\" class=\\\"cancel\\\">{{'common.status.inactive' | translate}}</span>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                        <ng-template #thenBlock1>\\r\\n                            <ui-switch (valueChange)=\\\"changeStatus($event, customField.id)\\\" [checked]=\\\"customField.status == '1' ? true : false\\\"></ui-switch>\\r\\n                        </ng-template>\\r\\n                    </td>\\r\\n                    <td class=\\\"actions-dropdown\\\">\\r\\n                        <div class=\\\"btn-group\\\" dropdown>\\r\\n                            <button aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-1\\\" type=\\\"button\\\">\\r\\n                                <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                            <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                <li *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'customfields_edit']\\\" role=\\\"menuitem\\\">\\r\\n                                    <a (click)=\\\"openCustomFieldEditModal(customField)\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\r\\n                                </li>\\r\\n                                <li *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'customfields_delete']\\\" role=\\\"menuitem\\\">\\r\\n                                    <a (click)=\\\"removeCustomField(customField.id)\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n                <tfoot *ngIf=\\\"customFields?.length == 0\\\" class=\\\"tfoot_dt\\\">\\r\\n                <tr>\\r\\n                    <td class=\\\"no-data-available text-center\\\" colspan=\\\"6\\\">{{'common.datatable.sEmptyTable' | translate}}</td>\\r\\n                </tr>\\r\\n                </tfoot>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.dashboard_settings.title' | translate}}</span></h4>\\r\\n</div>\\r\\n<form class=\\\"form\\\">\\r\\n    <div class=\\\"form-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                    <table class=\\\"table table-bordered table-hover\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th>{{'settings.dashboard_settings.columns.settings' | translate}}</th>\\r\\n                            <th class=\\\"width-100\\\"></th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                            <td>{{'settings.dashboard_settings.title1' | translate}}</td>\\r\\n                            <td>\\r\\n                                <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'dashboardsettings_create', 'dashboardsettings_edit']\\\" class=\\\"onoffswitch\\\">\\r\\n                                    <input (change)=\\\"saveDashboardSettings()\\\" [(ngModel)]=\\\"settings.is_announcement_dashboard\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"is_announcement_dashboard\\\" name=\\\"is_announcement_dashboard\\\" type=\\\"checkbox\\\"/>\\r\\n                                    <label class=\\\"onoffswitch-label m-b-none\\\" for=\\\"is_announcement_dashboard\\\">\\r\\n                                        <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n                                        <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'settings.dashboard_settings.title2' | translate}}</td>\\r\\n                            <td>\\r\\n                                <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'dashboardsettings_create', 'dashboardsettings_edit']\\\" class=\\\"onoffswitch\\\">\\r\\n                                    <input (change)=\\\"saveDashboardSettings()\\\" [(ngModel)]=\\\"settings.is_activities_dashboard\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"is_activities_dashboard\\\" name=\\\"is_activities_dashboard\\\" type=\\\"checkbox\\\"/>\\r\\n                                    <label class=\\\"onoffswitch-label m-b-none\\\" for=\\\"is_activities_dashboard\\\">\\r\\n                                        <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n                                        <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'settings.dashboard_settings.title3' | translate}}</td>\\r\\n                            <td>\\r\\n                                <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'dashboardsettings_create', 'dashboardsettings_edit']\\\" class=\\\"onoffswitch\\\">\\r\\n                                    <input (change)=\\\"saveDashboardSettings()\\\" [(ngModel)]=\\\"settings.is_todos_dashboard\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"is_todos_dashboard\\\" name=\\\"is_todos_dashboard\\\" type=\\\"checkbox\\\"/>\\r\\n                                    <label class=\\\"onoffswitch-label m-b-none\\\" for=\\\"is_todos_dashboard\\\">\\r\\n                                        <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n                                        <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'settings.dashboard_settings.title4' | translate}}</td>\\r\\n                            <td>\\r\\n                                <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'dashboardsettings_create', 'dashboardsettings_edit']\\\" class=\\\"onoffswitch\\\">\\r\\n                                    <input (change)=\\\"saveDashboardSettings()\\\" [(ngModel)]=\\\"settings.is_meetings_dashboard\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"is_meetings_dashboard\\\" name=\\\"is_meetings_dashboard\\\" type=\\\"checkbox\\\"/>\\r\\n                                    <label class=\\\"onoffswitch-label m-b-none\\\" for=\\\"is_meetings_dashboard\\\">\\r\\n                                        <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n                                        <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'settings.dashboard_settings.title5' | translate}}</td>\\r\\n                            <td>\\r\\n                                <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'dashboardsettings_create', 'dashboardsettings_edit']\\\" class=\\\"onoffswitch\\\">\\r\\n                                    <input (change)=\\\"saveDashboardSettings()\\\" [(ngModel)]=\\\"settings.is_projects_dashboard\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"is_projects_dashboard\\\" name=\\\"is_projects_dashboard\\\" type=\\\"checkbox\\\"/>\\r\\n                                    <label class=\\\"onoffswitch-label m-b-none\\\" for=\\\"is_projects_dashboard\\\">\\r\\n                                        <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n                                        <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'settings.dashboard_settings.title6' | translate}}</td>\\r\\n                            <td>\\r\\n                                <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'dashboardsettings_create', 'dashboardsettings_edit']\\\" class=\\\"onoffswitch\\\">\\r\\n                                    <input (change)=\\\"saveDashboardSettings()\\\" [(ngModel)]=\\\"settings.is_tasks_dashboard\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"is_tasks_dashboard\\\" name=\\\"is_tasks_dashboard\\\" type=\\\"checkbox\\\"/>\\r\\n                                    <label class=\\\"onoffswitch-label m-b-none\\\" for=\\\"is_tasks_dashboard\\\">\\r\\n                                        <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n                                        <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'settings.dashboard_settings.title7' | translate}}</td>\\r\\n                            <td>\\r\\n                                <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'dashboardsettings_create', 'dashboardsettings_edit']\\\" class=\\\"onoffswitch\\\">\\r\\n                                    <input (change)=\\\"saveDashboardSettings()\\\" [(ngModel)]=\\\"settings.is_defects_dashboard\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"is_defects_dashboard\\\" name=\\\"is_defects_dashboard\\\" type=\\\"checkbox\\\"/>\\r\\n                                    <label class=\\\"onoffswitch-label m-b-none\\\" for=\\\"is_defects_dashboard\\\">\\r\\n                                        <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n                                        <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'settings.dashboard_settings.title8' | translate}}</td>\\r\\n                            <td>\\r\\n                                <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'dashboardsettings_create', 'dashboardsettings_edit']\\\" class=\\\"onoffswitch\\\">\\r\\n                                    <input (change)=\\\"saveDashboardSettings()\\\" [(ngModel)]=\\\"settings.is_incidents_dashboard\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"is_incidents_dashboard\\\" name=\\\"is_incidents_dashboard\\\" type=\\\"checkbox\\\"/>\\r\\n                                    <label class=\\\"onoffswitch-label m-b-none\\\" for=\\\"is_incidents_dashboard\\\">\\r\\n                                        <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n                                        <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.database_backups.title' | translate}}</span></h4>\\r\\n    <a (click)=\\\"backupDatabase()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'backupdatabase_create']\\\" class=\\\"btn btn-create mb-0\\\" placement=\\\"top\\\" tooltip=\\\"{{'settings.database_backups.title2' | translate}}\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n            <table class=\\\"table table-bordered table-hover b4-datatable\\\" id=\\\"database_table\\\" width=\\\"100%\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th>{{'settings.database_backups.columns.date' | translate}}</th>\\r\\n                    <th>{{'settings.database_backups.columns.file_name' | translate}}</th>\\r\\n                    <th class=\\\"width-50\\\">{{'settings.database_backups.columns.actions' | translate}}</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody *ngIf=\\\"databases?.length != 0\\\">\\r\\n                <tr *ngFor=\\\"let database of databases; index as i\\\">\\r\\n                    <td>{{database.created_at | dateTimeFormatFilter: loginUser.settings.date_time_format }}</td>\\r\\n                    <td>{{database.file_name}}</td>\\r\\n                    <td class=\\\"actions-dropdown\\\">\\r\\n                        <div class=\\\"btn-group\\\" dropdown>\\r\\n                            <button aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-1\\\" type=\\\"button\\\">\\r\\n                                <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                            <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                <li *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'backupdatabase_view']\\\" role=\\\"menuitem\\\">\\r\\n                                    <a class=\\\"dropdown-item btn btn-download btn-raised\\\" download=\\\"{{database.file_name}}\\\" href=\\\"{{apiUrl}}/database_backup/{{database.file_name}}\\\" target=\\\"_blank\\\" tooltip=\\\"{{'common.download' | translate}}\\\"><i class=\\\"fa fa-download\\\"></i></a>\\r\\n                                </li>\\r\\n                                <li *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'backupdatabase_edit']\\\" role=\\\"menuitem\\\">\\r\\n                                    <a (click)=\\\"restoreDatabase(database)\\\" class=\\\"dropdown-item btn btn-restore btn-raised\\\" tooltip=\\\"{{'common.restore' | translate}}\\\"><i class=\\\"fa fa-undo\\\"></i></a>\\r\\n                                </li>\\r\\n                                <li *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'backupdatabase_delete']\\\" role=\\\"menuitem\\\">\\r\\n                                    <a (click)=\\\"deleteDatatabase(database.id)\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n                <tfoot *ngIf=\\\"databases?.length == 0\\\" class=\\\"tfoot_dt\\\">\\r\\n                <tr>\\r\\n                    <td class=\\\"text-center\\\" colspan=\\\"3\\\">\\r\\n                        <img src=\\\"assets/img/norecord-img.png\\\" width=\\\"50\\\">\\r\\n                        <p class=\\\"mt-1\\\">{{'common.empty_message.database_backups' | translate}}</p>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tfoot>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.email_notification.title' | translate}}</span></h4>\\r\\n</div>\\r\\n<form class=\\\"form\\\">\\r\\n    <div class=\\\"form-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                    <table class=\\\"table table-bordered table-hover\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th>{{'settings.email_notification.columns.notification' | translate}}</th>\\r\\n                            <th class=\\\"width-100\\\"></th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                            <td>{{'settings.email_notification.title1' | translate}}</td>\\r\\n                            <td>\\r\\n                                <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'emailnotifications_create', 'emailnotifications_edit']\\\">\\r\\n                                    <div class=\\\"onoffswitch\\\">\\r\\n                                        <input (change)=\\\"saveNotification()\\\" [(ngModel)]=\\\"settings.is_announcement_notification\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"is_announcement_notification\\\" name=\\\"is_announcement_notification\\\" type=\\\"checkbox\\\"/>\\r\\n                                        <label class=\\\"onoffswitch-label m-b-none\\\" for=\\\"is_announcement_notification\\\">\\r\\n                                            <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n                                            <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </ng-container>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.email_settings.title' | translate}}</span></h4>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"settingsForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"form-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"company_from_email\\\">{{'settings.email_settings.create.fields.company_email' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isSubmitted && emailSettings.company_from_email.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"company_from_email\\\" id=\\\"company_from_email\\\" placeholder=\\\"{{'settings.email_settings.create.placeholders.placeholder1' | translate}}\\\" type=\\\"email\\\"/>\\r\\n                    <div *ngIf=\\\"isSubmitted && emailSettings.company_from_email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"emailSettings.company_from_email.errors.required\\\">{{'settings.email_settings.create.error_messages.message1' | translate}}</div>\\r\\n                        <div *ngIf=\\\"emailSettings.company_from_email.errors.email\\\">{{'settings.email_settings.create.error_messages.message2' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <div [ngClass]=\\\"{ 'is-invalid': isSubmitted && emailSettings.smtp_protocol.errors }\\\" class=\\\"form-group\\\">\\r\\n                    <label for=\\\"smtp_protocol\\\">{{'settings.email_settings.create.fields.email_protocol' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <ng-select [items]=\\\"smtpHosts\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindValue=\\\"value\\\" formControlName=\\\"smtp_protocol\\\" labelForId=\\\"smtp_protocol\\\" placeholder=\\\"{{'settings.email_settings.create.placeholders.placeholder2' | translate}}\\\"></ng-select>\\r\\n                    <div *ngIf=\\\"isSubmitted && emailSettings.smtp_protocol.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"emailSettings.smtp_protocol.errors.required\\\">{{'settings.email_settings.create.error_messages.message3' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"smtp_host\\\">{{'settings.email_settings.create.fields.smtp_host' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isSubmitted && emailSettings.smtp_host.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"smtp_host\\\" id=\\\"smtp_host\\\" placeholder=\\\"smtp.domain.com\\\" type=\\\"text\\\"/>\\r\\n                    <div *ngIf=\\\"isSubmitted && emailSettings.smtp_host.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"emailSettings.smtp_host.errors.required\\\">{{'settings.email_settings.create.error_messages.message4' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"smtp_user\\\">{{'settings.email_settings.create.fields.smtp_user' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isSubmitted && emailSettings.smtp_user.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"smtp_user\\\" id=\\\"smtp_user\\\" placeholder=\\\"info@gmail.com\\\" type=\\\"email\\\"/>\\r\\n                    <div *ngIf=\\\"isSubmitted && emailSettings.smtp_user.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"emailSettings.smtp_user.errors.required\\\">{{'settings.email_settings.create.error_messages.message5' | translate}}</div>\\r\\n                        <div *ngIf=\\\"emailSettings.smtp_user.errors.email\\\">{{'settings.email_settings.create.error_messages.message6' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"smtp_password\\\">{{'settings.email_settings.create.fields.smtp_password' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isSubmitted && emailSettings.smtp_password.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"smtp_password\\\" id=\\\"smtp_password\\\" placeholder=\\\"{{'settings.email_settings.create.placeholders.placeholder3' | translate}}\\\" type=\\\"password\\\"/>\\r\\n                    <div *ngIf=\\\"isSubmitted && emailSettings.smtp_password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"emailSettings.smtp_password.errors.required\\\">{{'settings.email_settings.create.error_messages.message7' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"smtp_port\\\">{{'settings.email_settings.create.fields.smtp_port' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isSubmitted && emailSettings.smtp_port.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"smtp_port\\\" id=\\\"smtp_port\\\" placeholder=\\\"587\\\" type=\\\"text\\\"/>\\r\\n                    <div *ngIf=\\\"isSubmitted && emailSettings.smtp_port.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"emailSettings.smtp_port.errors.required\\\">{{'settings.email_settings.create.error_messages.message8' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"smtp_encryption\\\">{{'settings.email_settings.create.fields.email_encryption' | translate}}</label>\\r\\n                    <ng-select [items]=\\\"mailEncryption\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindValue=\\\"value\\\" formControlName=\\\"smtp_encryption\\\" labelForId=\\\"smtp_encryption\\\" placeholder=\\\"{{'settings.email_settings.create.placeholders.placeholder4' | translate}}\\\"></ng-select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"settingsForm.value.smtp_protocol == 'sparkpost'\\\" class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"sparkpost_secret\\\">{{'settings.email_settings.create.fields.sparkpost_secret' | translate}}</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"sparkpost_secret\\\" id=\\\"sparkpost_secret\\\" placeholder=\\\"{{'settings.email_settings.create.placeholders.placeholder5' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n            <ng-container *ngIf=\\\"settingsForm.value.smtp_protocol == 'mailgun'\\\">\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"mailgun_domain\\\">{{'settings.email_settings.create.fields.mailgun_domain' | translate}}</label>\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"mailgun_domain\\\" id=\\\"mailgun_domain\\\" placeholder=\\\"{{'settings.email_settings.create.placeholders.placeholder6' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"mailgun_secret\\\">{{'settings.email_settings.create.fields.mailgun_secret' | translate}}</label>\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"mailgun_secret\\\" id=\\\"mailgun_secret\\\" placeholder=\\\"{{'settings.email_settings.create.placeholders.placeholder7' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n            <div *ngIf=\\\"settingsForm.value.smtp_protocol == 'mandrill'\\\" class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"mandrill_secret\\\">{{'settings.email_settings.create.fields.mandrill_secret' | translate}}</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"mandrill_secret\\\" id=\\\"mandrill_secret\\\" placeholder=\\\"{{'settings.email_settings.create.placeholders.placeholder8' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 text-right\\\">\\r\\n                <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-cancel\\\">{{'common.cancel' | translate}}</a>\\r\\n                <button *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'emailsettings_create', 'emailsettings_edit']\\\" class=\\\"btn btn-submit\\\" type=\\\"submit\\\">{{'common.save' | translate}}</button>\\r\\n                <button (click)=\\\"sendTestEmail();\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'emailsettings_create', 'emailsettings_edit']\\\" class=\\\"btn btn-submit\\\" type=\\\"button\\\">{{'common.test' | translate}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.email_templates.title' | translate}}</span></h4>\\r\\n    <div class=\\\"width-300 mt-2\\\">\\r\\n        <ng-select [(ngModel)]=\\\"email_group_id\\\" [items]=\\\"emailGroups\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"email_group_name\\\" bindValue=\\\"id\\\" labelForId=\\\"email_group_id\\\" placeholder=\\\"{{'settings.email_templates.create.placeholders.placeholder1' | translate}}\\\"></ng-select>\\r\\n    </div>\\r\\n</div>\\r\\n<form class=\\\"form\\\">\\r\\n    <div class=\\\"form-body\\\">\\r\\n        <div class=\\\"row email-templates-navs\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <tabset class=\\\"email-templates-tab\\\">\\r\\n                    <tab *ngFor=\\\"let emailTemplate of emailGroupTemplates[email_group_id];\\\" heading=\\\"{{emailTemplate.template_name | translate}}\\\" id=\\\"tab-{{emailTemplate.id}}\\\">\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"subject_{{emailTemplate.id}}\\\">{{'settings.email_templates.create.fields.subject' | translate}}</label>\\r\\n                                        <input [(ngModel)]=\\\"emailTemplate.template_subject\\\" class=\\\"form-control\\\" id=\\\"subject_{{emailTemplate.id}}\\\" name=\\\"subject_{{emailTemplate.id}}\\\" placeholder=\\\"{{'settings.email_templates.create.placeholders.placeholder2' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"description_{{emailTemplate.template_body}}\\\">{{'settings.email_templates.create.fields.body' | translate}}</label>\\r\\n                                        <app-ngx-editor [(ngModel)]=\\\"emailTemplate.template_body\\\" [placeholder]=\\\"''\\\" [spellcheck]=\\\"true\\\" height=\\\"200px\\\" id=\\\"description_{{emailTemplate.template_body}}\\\" minHeight=\\\"50px\\\" name=\\\"description_{{emailTemplate.template_body}}\\\"></app-ngx-editor>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-12 text-right\\\">\\r\\n                                    <button (click)=\\\"saveEmailtemplate(emailTemplate)\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'emailtemplates_create', 'emailtemplates_edit']\\\" class=\\\"btn btn-submit\\\" type=\\\"submit\\\">{{'common.save' | translate}}</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </tab>\\r\\n                </tabset>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.estimate_settings.title' | translate}}</span></h4>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isFormLoaded\\\" [formGroup]=\\\"estimateSettingsForm\\\">\\r\\n    <div class=\\\"form-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"estimate_prefix\\\">{{'settings.estimate_settings.create.fields.estimate_prefix' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && estimateSetting.estimate_prefix.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"estimate_prefix\\\" id=\\\"estimate_prefix\\\" placeholder=\\\"{{'settings.estimate_settings.create.placeholders.placeholder1' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && estimateSetting.estimate_prefix.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"estimateSetting.estimate_prefix.errors.required\\\">{{'settings.estimate_settings.create.error_messages.message1' | translate}}</div>\\r\\n                        <div *ngIf=\\\"estimateSetting.estimate_prefix.errors.maxlength\\\">{{'settings.estimate_settings.create.error_messages.message2' | translate }}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"due_after\\\">{{'settings.estimate_settings.create.fields.due_after' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && estimateSetting.due_after.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"due_after\\\" id=\\\"due_after\\\" placeholder=\\\"{{'settings.estimate_settings.create.placeholders.placeholder2' | translate}}\\\" type=\\\"number\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && estimateSetting.due_after.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"estimateSetting.due_after.errors.required\\\">{{'settings.estimate_settings.create.error_messages.message3' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 mb-2\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"auto_remind\\\">{{'settings.estimate_settings.create.fields.auto_remind' | translate}}</label>\\r\\n                    <label class=\\\"checkbox-container d-block\\\">\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"auto_remind\\\" id=\\\"auto_remind\\\" type=\\\"checkbox\\\"/>\\r\\n                        <span class=\\\"checkbox-checkmark\\\"></span>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"auto_remind_before\\\">{{'settings.estimate_settings.create.fields.auto_remind_before' | translate}}</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"auto_remind_before\\\" id=\\\"auto_remind_before\\\" placeholder=\\\"{{'settings.estimate_settings.create.placeholders.placeholder5' | translate}}\\\" type=\\\"number\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"client_note\\\">{{'settings.estimate_settings.create.fields.client_note' | translate}}</label>\\r\\n                    <textarea class=\\\"form-control\\\" formControlName=\\\"client_note\\\" id=\\\"client_note\\\" placeholder=\\\"{{'settings.estimate_settings.create.placeholders.placeholder3' | translate}}\\\" rows=\\\"3\\\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"terms_conditions\\\">{{'settings.estimate_settings.create.fields.terms_conditions' | translate}}</label>\\r\\n                    <textarea class=\\\"form-control\\\" formControlName=\\\"terms_conditions\\\" id=\\\"terms_conditions\\\" placeholder=\\\"{{'settings.estimate_settings.create.placeholders.placeholder4' | translate}}\\\" rows=\\\"3\\\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>{{'settings.estimate_settings.create.fields.estimate_logo' | translate }}</label>\\r\\n                    <input formControlName=\\\"estimate_logo\\\" type=\\\"hidden\\\">\\r\\n                    <div #logodropzone class=\\\"dropzone dz-clickable\\\">\\r\\n                        <div *ngIf=\\\"isLogoLoaded && setting.estimate_logo\\\" class=\\\"dz-preview dz-image-preview\\\">\\r\\n                            <div class=\\\"dz-image\\\">\\r\\n                                <img height=\\\"100\\\" src=\\\"{{apiUrl}}/uploads/estimate_logo/{{setting.estimate_logo}}\\\" width=\\\"100\\\"/>\\r\\n                            </div>\\r\\n                            <a (click)=\\\"removeDropzoneImage()\\\" class=\\\"btn btn-sm btn-block\\\">{{ 'common.remove_file' | translate }}</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"dz-default dz-message\\\">\\r\\n                            <span *ngIf=\\\"!setting.estimate_logo\\\"><strong>{{ 'settings.estimate_settings.create.error_messages.message4' | translate }}</strong></span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 text-right\\\">\\r\\n                <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-cancel\\\">{{'common.cancel' | translate}}</a>\\r\\n                <button *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'estimatesettings_edit']\\\" class=\\\"btn btn-submit\\\" type=\\\"submit\\\">{{'common.save' | translate}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.invoice_settings.title' | translate}}</span></h4>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isFormLoaded\\\" [formGroup]=\\\"invoiceSettingsForm\\\">\\r\\n    <div class=\\\"form-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"invoice_prefix\\\">{{'settings.invoice_settings.create.fields.invoice_prefix' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && invoiceSetting.invoice_prefix.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"invoice_prefix\\\" id=\\\"invoice_prefix\\\" placeholder=\\\"{{'settings.invoice_settings.create.placeholders.placeholder1' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && invoiceSetting.invoice_prefix.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"invoiceSetting.invoice_prefix.errors.required\\\">{{'settings.invoice_settings.create.error_messages.message1' | translate}}</div>\\r\\n                        <div *ngIf=\\\"invoiceSetting.invoice_prefix.errors.maxlength\\\">{{'settings.invoice_settings.create.error_messages.message2' | translate }}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"due_after\\\">{{'settings.invoice_settings.create.fields.due_after' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && invoiceSetting.due_after.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"due_after\\\" id=\\\"due_after\\\" placeholder=\\\"{{'settings.invoice_settings.create.placeholders.placeholder2' | translate}}\\\" type=\\\"number\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && invoiceSetting.due_after.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"invoiceSetting.due_after.errors.required\\\">{{'settings.invoice_settings.create.error_messages.message3' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 mb-2\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"auto_remind\\\">{{'settings.invoice_settings.create.fields.auto_remind' | translate}}</label>\\r\\n                    <label class=\\\"checkbox-container d-block\\\">\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"auto_remind\\\" id=\\\"auto_remind\\\" type=\\\"checkbox\\\"/>\\r\\n                        <span class=\\\"checkbox-checkmark\\\"></span>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"auto_remind_after\\\">{{'settings.invoice_settings.create.fields.auto_remind_after' | translate}}</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"auto_remind_after\\\" id=\\\"auto_remind_after\\\" placeholder=\\\"{{'settings.invoice_settings.create.placeholders.placeholder5' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 mb-2\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"show_gst_number\\\">{{'settings.invoice_settings.create.fields.show_gst_number' | translate}}</label>\\r\\n                    <label class=\\\"checkbox-container d-block\\\">\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"show_gst_number\\\" id=\\\"show_gst_number\\\" type=\\\"checkbox\\\"/>\\r\\n                        <span class=\\\"checkbox-checkmark\\\"></span>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"gst_number\\\">{{'settings.invoice_settings.create.fields.gst_number' | translate}}</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"gst_number\\\" id=\\\"gst_number\\\" placeholder=\\\"{{'settings.invoice_settings.create.placeholders.placeholder6' | translate}}\\\" type=\\\"text\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"client_note\\\">{{'settings.invoice_settings.create.fields.client_note' | translate}}</label>\\r\\n                    <textarea class=\\\"form-control\\\" formControlName=\\\"client_note\\\" id=\\\"client_note\\\" placeholder=\\\"{{'settings.invoice_settings.create.placeholders.placeholder3' | translate}}\\\" rows=\\\"3\\\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"terms_conditions\\\">{{'settings.invoice_settings.create.fields.terms_conditions' | translate}}</label>\\r\\n                    <textarea class=\\\"form-control\\\" formControlName=\\\"terms_conditions\\\" id=\\\"terms_conditions\\\" placeholder=\\\"{{'settings.invoice_settings.create.placeholders.placeholder4' | translate}}\\\" rows=\\\"3\\\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>{{'settings.invoice_settings.create.fields.invoice_logo' | translate }}</label>\\r\\n                    <input formControlName=\\\"invoice_logo\\\" type=\\\"hidden\\\">\\r\\n                    <div #logodropzone class=\\\"dropzone dz-clickable d-flex justify-content-center\\\">\\r\\n                        <div *ngIf=\\\"isLogoLoaded && setting.invoice_logo\\\" class=\\\"dz-preview dz-image-preview\\\">\\r\\n                            <div class=\\\"dz-image\\\">\\r\\n                                <img height=\\\"100\\\" src=\\\"{{apiUrl}}/uploads/invoice_logo/{{setting.invoice_logo}}\\\" width=\\\"100\\\"/>\\r\\n                            </div>\\r\\n                            <a (click)=\\\"removeDropzoneImage()\\\" class=\\\"btn btn-sm btn-block\\\">{{ 'common.remove_file' | translate }}</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"dz-default dz-message\\\">\\r\\n                            <span *ngIf=\\\"!setting.invoice_logo\\\"><strong>{{ 'settings.invoice_settings.create.error_messages.message4' | translate }}</strong></span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 text-right\\\">\\r\\n                <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-cancel\\\">{{'common.cancel' | translate}}</a>\\r\\n                <button *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'invoicesettings_edit']\\\" class=\\\"btn btn-submit\\\" type=\\\"submit\\\">{{'common.save' | translate}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.menu_allocation.title' | translate}}</span></h4>\\r\\n</div>\\r\\n<form class=\\\"form\\\">\\r\\n    <div class=\\\"form-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <div id=\\\"nestable-menu\\\">\\r\\n                    <button (click)=\\\"expandAll()\\\" class=\\\"btn btn-outline-info mr-1 btn-round\\\" type=\\\"button\\\">{{'settings.menu_allocation.title1' | translate}}</button>\\r\\n                    <button (click)=\\\"collapseAll()\\\" class=\\\"btn btn-outline-info mr-1 btn-round\\\" type=\\\"button\\\">{{'settings.menu_allocation.title2' | translate}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <div class=\\\"ibox \\\">\\r\\n                    <div class=\\\"ibox-title\\\">\\r\\n                        <h5>{{'common.status.active' | translate}}</h5>\\r\\n                    </div>\\r\\n                    <div class=\\\"ibox-content\\\">\\r\\n                        <div class=\\\"dd\\\" id=\\\"nestable\\\">\\r\\n                            <div *ngIf=\\\"activeInactiveMenu.active_menu?.length == 0\\\" class=\\\"dd-empty\\\"></div>\\r\\n                            <ol *ngIf=\\\"activeInactiveMenu.active_menu?.length > 0\\\" class=\\\"dd-list\\\">\\r\\n                                <li *ngFor=\\\"let active_menu of activeInactiveMenu.active_menu\\\" [attr.data-id]=\\\"active_menu.id\\\" class=\\\"dd-item dd-nochildren\\\">\\r\\n                                    <ng-container *ngIf=\\\"!active_menu.children\\\">\\r\\n                                        <div class=\\\"dd-handle\\\">\\r\\n                                            <i class=\\\"fa fa-folder\\\"></i>&nbsp;{{active_menu.text | translate}}</div>\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\\"active_menu.children?.length > 0\\\">\\r\\n                                        <div class=\\\"dd-handle\\\">\\r\\n                                            <i class=\\\"fa fa-folder\\\"></i>&nbsp;{{active_menu.text | translate}}</div>\\r\\n                                        <ol class=\\\"dd-list\\\">\\r\\n                                            <li *ngFor=\\\"let children of active_menu.children\\\" [attr.data-id]=\\\"children.id\\\" class=\\\"dd-item\\\">\\r\\n                                                <div class=\\\"dd-handle\\\">&nbsp;{{children.text | translate}}</div>\\r\\n                                            </li>\\r\\n                                        </ol>\\r\\n                                    </ng-container>\\r\\n                                </li>\\r\\n                            </ol>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <div class=\\\"ibox\\\">\\r\\n                    <div class=\\\"ibox-title\\\">\\r\\n                        <h5>{{'common.status.inactive' | translate}}</h5>\\r\\n                    </div>\\r\\n                    <div class=\\\"ibox-content\\\">\\r\\n                        <div class=\\\"dd\\\" id=\\\"nestable2\\\">\\r\\n                            <div *ngIf=\\\"activeInactiveMenu.inactive_menu?.length == 0\\\" class=\\\"dd-empty\\\"></div>\\r\\n                            <ol *ngIf=\\\"activeInactiveMenu.inactive_menu?.length > 0\\\" class=\\\"dd-list\\\">\\r\\n                                <li *ngFor=\\\"let inactive_menu of activeInactiveMenu.inactive_menu\\\" [attr.data-id]=\\\"inactive_menu.id\\\" class=\\\"dd-item dd-nochildren\\\">\\r\\n                                    <ng-container *ngIf=\\\"!inactive_menu.children\\\">\\r\\n                                        <div class=\\\"dd-handle\\\">\\r\\n                                            <i class=\\\"fa fa-folder\\\"></i>&nbsp;{{inactive_menu.text | translate}}</div>\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\\"inactive_menu.children?.length > 0\\\">\\r\\n                                        <div class=\\\"dd-handle\\\">\\r\\n                                            <i class=\\\"fa fa-folder\\\"></i>&nbsp;{{inactive_menu.text | translate}}</div>\\r\\n                                        <ol class=\\\"dd-list\\\">\\r\\n                                            <li *ngFor=\\\"let children of inactive_menu.children\\\" [attr.data-id]=\\\"children.id\\\" class=\\\"dd-item\\\">\\r\\n                                                <div class=\\\"dd-handle\\\">&nbsp;{{children.text | translate}}</div>\\r\\n                                            </li>\\r\\n                                        </ol>\\r\\n                                    </ng-container>\\r\\n                                </li>\\r\\n                            </ol>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"d-none\\\" id=\\\"nestable-output\\\"></div>\\r\\n            <div class=\\\"d-none\\\" id=\\\"nestable2-output\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 text-right\\\">\\r\\n                <button (click)=\\\"saveMenu()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'menuallocation_create', 'menuallocation_edit']\\\" class=\\\"btn btn-submit\\\" type=\\\"submit\\\">{{'common.save' | translate}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.payment_gateway_settings.title' | translate}}</span></h4>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isFormLoad\\\" [formGroup]=\\\"settingsForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"form-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"paypal_checkout_label\\\">{{'settings.paypal_settings.create.fields.paypal_checkout_label' | translate}}&nbsp;&nbsp;</label>\\r\\n                    <span><a href=\\\"https://developer.paypal.com/docs/platforms/checkout/reference/style-guide/\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-lightbulb-o fa-1\\\" placement=\\\"top\\\" tooltip=\\\"{{'settings.custom_fields.create.fields.help_text' | translate}}\\\"></i></a></span>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"paypal_checkout_label\\\" id=\\\"paypal_checkout_label\\\" placeholder=\\\"{{'settings.paypal_settings.create.placeholders.placeholder1' | translate}}\\\" type=\\\"input\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"paypal_checkout_client_id\\\">{{'settings.paypal_settings.create.fields.paypal_checkout_client_id' | translate}}</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"paypal_checkout_client_id\\\" id=\\\"paypal_checkout_client_id\\\" placeholder=\\\"{{'settings.paypal_settings.create.placeholders.placeholder2' | translate}}\\\" type=\\\"input\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>{{'settings.paypal_settings.create.fields.paypal_checkout_status' | translate}}</label>\\r\\n                    <div class=\\\"onoffswitch\\\">\\r\\n                        <input class=\\\"onoffswitch-checkbox\\\" formControlName=\\\"paypal_checkout_status\\\" id=\\\"paypal_checkout_status\\\" name=\\\"paypal_checkout_status\\\" type=\\\"checkbox\\\"/>\\r\\n                        <label class=\\\"onoffswitch-label m-b-none\\\" for=\\\"paypal_checkout_status\\\">\\r\\n                            <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n                            <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row border-top pt-2\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"stripe_label\\\">{{'settings.stripe_settings.create.fields.stripe_label' | translate}}</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"stripe_label\\\" id=\\\"stripe_label\\\" placeholder=\\\"{{'settings.stripe_settings.create.placeholders.placeholder1' | translate}}\\\" type=\\\"input\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"stripe_api_key\\\">{{'settings.stripe_settings.create.fields.stripe_api_key' | translate}}</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"stripe_api_key\\\" id=\\\"stripe_api_key\\\" placeholder=\\\"{{'settings.stripe_settings.create.placeholders.placeholder2' | translate}}\\\" type=\\\"input\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"stripe_secret_key\\\">{{'settings.stripe_settings.create.fields.stripe_secret_key' | translate}}</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"stripe_secret_key\\\" id=\\\"stripe_secret_key\\\" placeholder=\\\"{{'settings.stripe_settings.create.placeholders.placeholder3' | translate}}\\\" type=\\\"input\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>{{'settings.stripe_settings.create.fields.stripe_status' | translate}}</label>\\r\\n                    <div class=\\\"onoffswitch\\\">\\r\\n                        <input class=\\\"onoffswitch-checkbox\\\" formControlName=\\\"stripe_status\\\" id=\\\"stripe_status\\\" name=\\\"stripe_status\\\" type=\\\"checkbox\\\"/>\\r\\n                        <label class=\\\"onoffswitch-label m-b-none\\\" for=\\\"stripe_status\\\">\\r\\n                            <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n                            <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 text-right\\\">\\r\\n                <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-cancel\\\">{{'common.cancel' | translate}}</a>\\r\\n                <button *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'paymentgatewaysettings_create', 'paymentgatewaysettings_edit']\\\" class=\\\"btn btn-submit\\\" type=\\\"submit\\\">\\r\\n                    <span>{{'common.save' | translate}}</span></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.slack_settings.title' | translate}}</span></h4>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isFormLoad\\\" [formGroup]=\\\"slackSettingsForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"form-body\\\">\\r\\n        <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'slacksettings_create', 'slacksettings_edit']\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"slack_client_id\\\">{{'settings.slack_settings.create.fields.slack_client_id' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && slackSetting.slack_client_id.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"slack_client_id\\\" id=\\\"slack_client_id\\\" placeholder=\\\"{{'settings.slack_settings.create.placeholders.placeholder1' | translate}}\\\" type=\\\"input\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && slackSetting.slack_client_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"slackSetting.slack_client_id.errors.required\\\">{{'settings.slack_settings.create.error_messages.message1' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"slack_client_secret\\\">{{'settings.slack_settings.create.fields.slack_client_secret' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && slackSetting.slack_client_secret.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"slack_client_secret\\\" id=\\\"slack_client_secret\\\" placeholder=\\\"{{'settings.slack_settings.create.placeholders.placeholder2' | translate}}\\\" type=\\\"input\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && slackSetting.slack_client_secret.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"slackSetting.slack_client_secret.errors.required\\\">{{'settings.slack_settings.create.error_messages.message2' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"slack_redirect_URL\\\">{{'settings.slack_settings.create.fields.slack_redirect_url' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && slackSetting.slack_redirect_URL.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"slack_redirect_URL\\\" id=\\\"slack_redirect_URL\\\" placeholder=\\\"{{'settings.slack_settings.create.placeholders.placeholder3' | translate}}\\\" type=\\\"input\\\"/>\\r\\n                    <div *ngIf=\\\"isFormSubmitted && slackSetting.slack_redirect_URL.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"slackSetting.slack_redirect_URL.errors.required\\\">{{'settings.slack_settings.create.error_messages.message3' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>{{'settings.slack_settings.create.fields.slack_status' | translate}}</label>\\r\\n                    <div class=\\\"onoffswitch\\\">\\r\\n                        <input class=\\\"onoffswitch-checkbox\\\" formControlName=\\\"slack_status\\\" id=\\\"slack_status\\\" name=\\\"slack_status\\\" type=\\\"checkbox\\\"/>\\r\\n                        <label class=\\\"onoffswitch-label m-b-none\\\" for=\\\"slack_status\\\">\\r\\n                            <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n                            <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"slackSettingsForm.get('slack_client_id').value && slackSettingsForm.get('slack_client_secret').value && slackSettingsForm.get('slack_redirect_URL').value\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <a href=\\\"https://slack.com/oauth/v2/authorize?client_id={{slackSettingsForm.get('slack_client_id').value}}&scope=incoming-webhook&user_scope=admin,chat:write&redirect_uri={{slackSettingsForm.get('slack_redirect_URL').value}}&state={{loginUser.id}}\\\" target=\\\"_blank\\\"><img alt=\\\"Add to Sng servelack\\\" height=\\\"40\\\" src=\\\"https://platform.slack-edge.com/img/add_to_slack.png\\\" srcSet=\\\"https://platform.slack-edge.com/img/add_to_slack.png 1x, https://platform.slack-edge.com/img/add_to_slack@2x.png 2x\\\" width=\\\"139\\\"/></a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 text-right\\\">\\r\\n                <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-cancel\\\">{{'common.cancel' | translate}}</a>\\r\\n                <button *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'slacksettings_create', 'slacksettings_edit']\\\" class=\\\"btn btn-submit\\\" type=\\\"submit\\\">\\r\\n                    <span>{{'common.save' | translate}}</span></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.system_settings.title' | translate}}</span></h4>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"isFormLoaded\\\" [formGroup]=\\\"settingsForm\\\" class=\\\"form\\\">\\r\\n    <div class=\\\"form-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"timezone\\\">{{'settings.system_settings.create.fields.timezone' | translate}}\\r\\n                        <span class=\\\"text-danger\\\"></span></label>\\r\\n                    <ng-select [items]=\\\"timezones\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"value\\\" bindValue=\\\"key\\\" formControlName=\\\"timezone\\\" labelForId=\\\"timezone\\\" placeholder=\\\"{{'settings.system_settings.create.placeholders.placeholder3' | translate}}\\\"></ng-select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div [ngClass]=\\\"{ 'is-invalid': isSubmitted && systemSetting.default_language.errors }\\\" class=\\\"form-group\\\">\\r\\n                    <label for=\\\"default_language\\\">{{'settings.system_settings.create.fields.default_language' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <ng-select [items]=\\\"languages\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"language\\\" formControlName=\\\"default_language\\\" labelForId=\\\"default_language\\\" placeholder=\\\"{{'settings.system_settings.create.placeholders.placeholder1' | translate}}\\\"></ng-select>\\r\\n                    <div *ngIf=\\\"isSubmitted && systemSetting.default_language.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"systemSetting.default_language.errors.required\\\">{{'settings.system_settings.create.error_messages.message5' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div [ngClass]=\\\"{ 'is-invalid': isSubmitted && systemSetting.currency_id.errors }\\\" class=\\\"form-group\\\">\\r\\n                    <label for=\\\"currency_id\\\">{{'settings.system_settings.create.fields.default_currency' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <ng-select [items]=\\\"currencies\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"currency_id\\\" labelForId=\\\"currency_id\\\" placeholder=\\\"{{'settings.system_settings.create.placeholders.placeholder7' | translate}}\\\">\\r\\n                        <ng-template let-item=\\\"item\\\" ng-option-tmp>\\r\\n                            {{item.symbol}} - {{item.name}}\\r\\n                        </ng-template>\\r\\n                    </ng-select>\\r\\n                    <div *ngIf=\\\"isSubmitted && systemSetting.currency_id.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"systemSetting.currency_id.errors.required\\\">{{'settings.system_settings.create.error_messages.message4' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"tables_pagination_limit\\\">{{'settings.system_settings.create.fields.tables_pagination_limit' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <input [ngClass]=\\\"{ 'is-invalid': isSubmitted && systemSetting.tables_pagination_limit.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"tables_pagination_limit\\\" id=\\\"tables_pagination_limit\\\" placeholder=\\\"{{'settings.system_settings.create.placeholders.placeholder4' | translate}}\\\" type=\\\"number\\\"/>\\r\\n                    <div *ngIf=\\\"isSubmitted && systemSetting.tables_pagination_limit.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"systemSetting.tables_pagination_limit.errors.required\\\">{{'settings.system_settings.create.error_messages.message1' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div [ngClass]=\\\"{ 'is-invalid': isSubmitted && systemSetting.date_format.errors }\\\" class=\\\"form-group\\\">\\r\\n                    <label for=\\\"date_format\\\">{{'settings.system_settings.create.fields.date_format' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <ng-select [items]=\\\"dateFormates\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindValue=\\\"value\\\" formControlName=\\\"date_format\\\" labelForId=\\\"date_format\\\" placeholder=\\\"{{'settings.system_settings.create.placeholders.placeholder5' | translate}}\\\"></ng-select>\\r\\n                    <div *ngIf=\\\"isSubmitted && systemSetting.date_format.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"systemSetting.date_format.errors.required\\\">{{'settings.system_settings.create.error_messages.message2' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div [ngClass]=\\\"{ 'is-invalid': isSubmitted && systemSetting.time_format.errors }\\\" class=\\\"form-group\\\">\\r\\n                    <label for=\\\"time_format\\\">{{'settings.system_settings.create.fields.time_format' | translate}}\\r\\n                        <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                    <ng-select [items]=\\\"timeFormates\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindValue=\\\"value\\\" formControlName=\\\"time_format\\\" labelForId=\\\"time_format\\\" placeholder=\\\"{{'settings.system_settings.create.placeholders.placeholder6' | translate}}\\\"></ng-select>\\r\\n                    <div *ngIf=\\\"isSubmitted && systemSetting.time_format.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"systemSetting.time_format.errors.required\\\">{{'settings.system_settings.create.error_messages.message3' | translate}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 mb-2\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"allowed_for_registration\\\">{{'settings.system_settings.create.fields.allowed_for_registration' | translate}}</label>\\r\\n                    <label class=\\\"checkbox-container d-block\\\">\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"allowed_for_registration\\\" id=\\\"allowed_for_registration\\\" type=\\\"checkbox\\\"/>\\r\\n                        <span class=\\\"checkbox-checkmark\\\"></span>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 text-right\\\">\\r\\n                <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-cancel\\\">{{'common.cancel' | translate}}</a>\\r\\n                <button *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'systemsettings_create', 'systemsettings_edit']\\\" class=\\\"btn btn-submit\\\" type=\\\"submit\\\">\\r\\n                    <span>{{'common.save' | translate}}</span></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.theme_settings.title' | translate}}</span></h4>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"compnay_logo\\\">{{'settings.theme_settings.create.fields.compnay_logo' | translate}}</label>\\r\\n            <div #logodropzone class=\\\"dropzone dz-clickable d-flex justify-content-center\\\">\\r\\n                <div *ngIf=\\\"settings.company_logo && isCompanyLogoUploaded\\\" class=\\\"dz-preview dz-image-preview\\\" id=\\\"logo_image\\\">\\r\\n                    <div class=\\\"dz-image\\\">\\r\\n                        <img src=\\\"{{apiUrl}}/uploads/company_logo/{{settings.company_logo}}\\\"/>\\r\\n                    </div>\\r\\n                    <a (click)=\\\"removeCompanyLogo()\\\" class=\\\"btn btn-sm btn-block\\\">{{'common.remove_file' | translate}}</a>\\r\\n                </div>\\r\\n                <div class=\\\"dz-default dz-message\\\">\\r\\n                    <span><strong>{{'settings.theme_settings.create.error_messages.message1' | translate}}</strong></span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"login_bg\\\">{{'settings.theme_settings.create.fields.login_background' | translate}}</label>\\r\\n            <div #loginbg class=\\\"dropzone dz-clickable d-flex justify-content-center\\\">\\r\\n                <div *ngIf=\\\"settings.login_background && isLoginBgUploaded\\\" class=\\\"dz-preview dz-image-preview\\\" id=\\\"bg_image\\\">\\r\\n                    <div class=\\\"dz-image\\\">\\r\\n                        <img src=\\\"{{apiUrl}}/uploads/login_bg/{{settings.login_background}}\\\"/>\\r\\n                    </div>\\r\\n                    <a (click)=\\\"removeLoginBg()\\\" class=\\\"btn btn-sm btn-block\\\">{{'common.remove_file' | translate}}</a>\\r\\n                </div>\\r\\n                <div class=\\\"dz-default dz-message\\\">\\r\\n                    <span><strong>{{'settings.theme_settings.create.error_messages.message1' | translate}}</strong></span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"compnay_sidebar_logo\\\">{{'settings.theme_settings.create.fields.compnay_sidebar_logo' | translate}}</label>\\r\\n            <div #sidebardropzone class=\\\"dropzone dz-clickable d-flex justify-content-center\\\">\\r\\n                <div *ngIf=\\\"settings.company_sidebar_logo && isCompanySidebarLogoUploaded\\\" class=\\\"dz-preview dz-image-preview\\\" id=\\\"company_sidebar_logo\\\">\\r\\n                    <div class=\\\"dz-image\\\">\\r\\n                        <img src=\\\"{{apiUrl}}/uploads/company_sidebar_logo/{{settings.company_sidebar_logo}}\\\"/>\\r\\n                    </div>\\r\\n                    <a (click)=\\\"removeCompanySidebarLogo()\\\" class=\\\"btn btn-sm btn-block\\\">{{'common.remove_file' | translate}}</a>\\r\\n                </div>\\r\\n                <div class=\\\"dz-default dz-message\\\">\\r\\n                    <span><strong>{{'settings.theme_settings.create.error_messages.message1' | translate}}</strong></span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"sidebar_background_images\\\">{{'settings.theme_settings.create.fields.sidebar_background_images' | translate}}</label>\\r\\n            <div #colorpaletts class=\\\"dropzone dz-clickable\\\">\\r\\n                <div *ngIf=\\\"settings.sidebar_background_images && settings.sidebar_background_images.length > 0 && isSidebarBgsUploaded\\\" class=\\\"dz-preview dz-image-preview d-flex\\\" id=\\\"sidebar_bg_images\\\">\\r\\n                    <ng-container *ngFor=\\\"let sidebarImg of settings.sidebar_background_images; index as i\\\">\\r\\n                        <div *ngIf=\\\"sidebarImg\\\" class=\\\"dz-image-custom\\\">\\r\\n                            <img src=\\\"{{apiUrl}}/uploads/sidebar_background_images/{{sidebarImg}}\\\"/>\\r\\n                            <button (click)=\\\"removeSidebarBgImage(sidebarImg)\\\" class=\\\"btn btn-sm btn-block\\\">{{'common.remove_file' | translate}}</button>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <div class=\\\"dz-default dz-message\\\">\\r\\n                    <span><strong>{{'settings.theme_settings.create.error_messages.message1' | translate}}</strong></span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"sidebar-width\\\">{{'theme_setting.header.head14' | translate}}</label>\\r\\n            <div>\\r\\n                <ng-select (change)=\\\"changeSidebarWidth($event)\\\" [(ngModel)]=\\\"settings.sidebar_width\\\" [items]=\\\"('theme_setting.width_options' | translate)\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"value\\\" bindValue=\\\"key\\\" labelForId=\\\"sidebarWidth\\\" placeholder=\\\"{{'theme_setting.placeholders.placeholder2' | translate}}\\\"></ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>{{'theme_setting.header.head13' | translate}}</label>\\r\\n            <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'dashboardsettings_create', 'dashboardsettings_edit']\\\" class=\\\"onoffswitch\\\">\\r\\n                <input (change)=\\\"changeCollapsedMenu($event)\\\" [(ngModel)]=\\\"settings.is_collapsed_menu\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"is_collapsed_menu\\\" name=\\\"is_collapsed_menu\\\" type=\\\"checkbox\\\"/>\\r\\n                <label class=\\\"onoffswitch-label m-b-none\\\" for=\\\"is_collapsed_menu\\\">\\r\\n                    <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n                    <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 text-right\\\">\\r\\n        <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-cancel\\\">{{'common.cancel' | translate}}</a>\\r\\n        <button (click)=\\\"onSubmit()\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'themesettings_create', 'themesettings_edit']\\\" class=\\\"btn btn-submit\\\" type=\\\"button\\\">\\r\\n            <span>{{'common.save' | translate}}</span></button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-language\\\"></i>&nbsp;{{'settings.translations.title' | translate}}</h2>\\r\\n    <button (click)=\\\"bsModalRef.hide()\\\" aria-label=\\\"Close\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"createTranslationForm\\\" class=\\\"bs4-forms\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && getTranslationControl.language.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"language\\\">{{'settings.translations.create.fields.language' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <ng-select [items]=\\\"languages\\\" [searchable]=\\\"true\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"code\\\" formControlName=\\\"language\\\" labelForId=\\\"language\\\" placeholder=\\\"{{'settings.translations.create.placeholders.placeholder1' | translate}}\\\"></ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && getTranslationControl.language.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"getTranslationControl.language.errors.required\\\">{{'settings.translations.create.error_messages.message1' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && getTranslationControl.icon.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"icon\\\">{{'settings.translations.create.fields.icon' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <input formControlName=\\\"icon\\\" type=\\\"hidden\\\">\\r\\n                        <div #translateDropzone class=\\\"dropzone dz-clickable\\\">\\r\\n                            <div class=\\\"dz-default dz-message\\\">\\r\\n                                <span><strong>{{'settings.translations.create.error_messages.message3' | translate}}</strong></span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && getTranslationControl.icon.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"getTranslationControl.icon.errors.required\\\">{{'settings.translations.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.cancel' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.create' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h2 class=\\\"modal-title font-weight-normal\\\">\\r\\n        <i aria-hidden=\\\"true\\\" class=\\\"fa fa-language\\\"></i>&nbsp;{{'settings.translations.title' | translate}}</h2>\\r\\n    <button (click)=\\\"bsModalRef.hide()\\\" aria-label=\\\"Close\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"editTranslationForm\\\" class=\\\"bs4-forms\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <!-- <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && getTranslationControl.language.errors }\\\">\\r\\n                        <label for=\\\"language\\\">{{'settings.translations.create.fields.language' | translate}}<span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <ng-select [searchable]=\\\"true\\\"\\r\\n                            [items]=\\\"languages\\\"\\r\\n                            [selectOnTab]=\\\"true\\\"\\r\\n                            bindLabel=\\\"name\\\"\\r\\n                            bindValue=\\\"code\\\"\\r\\n                            labelForId=\\\"language\\\"\\r\\n                            placeholder=\\\"{{'settings.translations.create.placeholders.placeholder1' | translate}}\\\"\\r\\n                            formControlName=\\\"language\\\">\\r\\n                        </ng-select>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && getTranslationControl.language.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"getTranslationControl.language.errors.required\\\">{{'settings.translations.create.error_messages.message1' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div [ngClass]=\\\"{ 'is-invalid': isFormSubmitted && getTranslationControl.icon.errors }\\\" class=\\\"form-group\\\">\\r\\n                        <label for=\\\"icon\\\">{{'settings.translations.create.fields.icon' | translate}}\\r\\n                            <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                        <input formControlName=\\\"icon\\\" type=\\\"hidden\\\">\\r\\n                        <div #translateDropzone class=\\\"dropzone dz-clickable\\\">\\r\\n                            <div *ngIf=\\\"isProfileUploded\\\" class=\\\"dz-default dz-message\\\">\\r\\n                                <span><strong></strong></span>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"isProfileLoaded && translation.icon\\\" class=\\\"dz-preview dz-image-preview\\\">\\r\\n                                <div class=\\\"dz-image\\\">\\r\\n                                    <img src=\\\"{{apiUrl}}/uploads/translation/{{translation.icon}}\\\"/>\\r\\n                                </div>\\r\\n                                <a (click)=\\\"removeDropzoneImage()\\\" class=\\\"btn btn-sm btn-block\\\">{{'common.remove_file' | translate}}</a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isFormSubmitted && getTranslationControl.icon.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"getTranslationControl.icon.errors.required\\\">{{'settings.translations.create.error_messages.message2' | translate}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onCancel()\\\" class=\\\"btn btn-cancel mb-0\\\" type=\\\"button\\\">{{'common.close' | translate}}</button>\\r\\n        <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.update' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","export default \"<!-- Card header -->\\r\\n<div class=\\\"card-header pl-0 pr-0 mb-3 border-bottom\\\">\\r\\n    <h4 class=\\\"sub-title mt-2\\\"><span>{{'settings.translations.title' | translate}}</span></h4>\\r\\n    <!-- <a class=\\\"btn btn-create mb-0\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'translations_create']\\\" (click)=\\\"openTranslationCreateModal()\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.create' | translate}}\\\"><i class=\\\"fa fa-plus\\\"></i></a> -->\\r\\n</div>\\r\\n<div class=\\\"card-content hide_empty_message\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n            <table [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"table table-bordered table-hover b4-datatable\\\" datatable id=\\\"translation_table\\\" width=\\\"100%\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th>{{'settings.translations.columns.icon' | translate}}</th>\\r\\n                    <th>{{'settings.translations.columns.language' | translate}}</th>\\r\\n                    <th>{{'settings.translations.columns.status' | translate}}</th>\\r\\n                    <th>{{'settings.translations.columns.actions' | translate}}</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody *ngIf=\\\"translations?.length != 0\\\">\\r\\n                <tr *ngFor=\\\"let translation of translations; index as i\\\">\\r\\n                    <td class=\\\"text-center\\\">\\r\\n                        <img height=\\\"30\\\" src=\\\"{{apiUrl}}/uploads/translation/{{translation.icon}}\\\" width=\\\"30\\\">\\r\\n                    </td>\\r\\n                    <td>{{translation.name}}</td>\\r\\n                    <td>\\r\\n                        <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'translations_edit']; else elseBlock1; then thenBlock1\\\"></ng-container>\\r\\n                        <ng-template #elseBlock1>\\r\\n                            <div class=\\\"budges-status\\\">\\r\\n                                <span *ngIf=\\\"translation.status == '1'\\\" class=\\\"completed\\\">{{'common.status.active' | translate}}</span>\\r\\n                                <span *ngIf=\\\"translation.status == '0'\\\" class=\\\"cancel\\\">{{'common.status.deactive' | translate}}</span>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                        <ng-template #thenBlock1>\\r\\n                            <ui-switch (valueChange)=\\\"setActiveInactiveTranslation($event, translation)\\\" [checked]=\\\"translation.status == '1' ? true : false\\\"></ui-switch>\\r\\n                        </ng-template>\\r\\n                    </td>\\r\\n                    <td class=\\\"actions-dropdown\\\">\\r\\n                        <div class=\\\"btn-group\\\" dropdown>\\r\\n                            <button aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-1\\\" type=\\\"button\\\">\\r\\n                                <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                            <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                <li role=\\\"menuitem\\\">\\r\\n                                    <a (click)=\\\"openTranslationEditModal(translation)\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'translations_edit']\\\" class=\\\"dropdown-item btn btn-edit btn-raised\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.edit' | translate}}\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\r\\n                                </li>\\r\\n                                <li role=\\\"menuitem\\\">\\r\\n                                    <a (click)=\\\"translationDelete(translation.id)\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'translations_delete']\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\" placement=\\\"top\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"><i class=\\\"fa fa-trash-o\\\"></i></a>\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n                <tfoot *ngIf=\\\"translations?.length == 0\\\" class=\\\"tfoot_dt\\\">\\r\\n                <tr>\\r\\n                    <td class=\\\"no-data-available text-center\\\" colspan=\\\"4\\\">{{'common.datatable.sEmptyTable' | translate}}</td>\\r\\n                </tr>\\r\\n                </tfoot>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<section>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card pl-2 pr-2\\\">\\r\\n                <div class=\\\"card-header pl-0 pr-0 border-bottom\\\">\\r\\n                    <h4 class=\\\"main-title mb-0 mt-0\\\"><span>{{'settings.title' | translate}}</span></h4>\\r\\n                </div>\\r\\n                <div class=\\\"card-content custom-nav-tabs mt-3\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <tabset #tabset [vertical]=\\\"false\\\" type=\\\"pills\\\">\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'companydetail_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.company_details.title' | translate}}\\\" id=\\\"1\\\">\\r\\n                                    <app-company-detail *ngIf=\\\"getActiveSettingTab('1') && isSettingsLoad\\\" [countries]=\\\"countries\\\" [settings]=\\\"settings\\\"></app-company-detail>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'systemsettings_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.system_settings.title' | translate}}\\\" id=\\\"2\\\">\\r\\n                                    <app-system-settings *ngIf=\\\"getActiveSettingTab('2')\\\" [loginUser]=\\\"loginUser\\\" [settings]=\\\"settings\\\"></app-system-settings>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'slacksettings_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.slack_settings.title' | translate}}\\\" id=\\\"3\\\">\\r\\n                                    <app-slack-settings *ngIf=\\\"getActiveSettingTab('3')\\\" [loginUser]=\\\"loginUser\\\"></app-slack-settings>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'emailsettings_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.email_settings.title' | translate}}\\\" id=\\\"4\\\">\\r\\n                                    <app-email-settings *ngIf=\\\"getActiveSettingTab('4')\\\" [settings]=\\\"settings\\\"></app-email-settings>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'emailtemplates_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.email_templates.title' | translate}}\\\" id=\\\"5\\\">\\r\\n                                    <app-email-templates *ngIf=\\\"getActiveSettingTab('5')\\\"></app-email-templates>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'emailnotifications_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.email_notification.title' | translate}}\\\" id=\\\"6\\\">\\r\\n                                    <app-email-notifications *ngIf=\\\"getActiveSettingTab('6')\\\" [settings]=\\\"settings\\\"></app-email-notifications>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'cronjob_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.cronjob.title' | translate}}\\\" id=\\\"7\\\">\\r\\n                                    <app-cronjob-settings *ngIf=\\\"getActiveSettingTab('7')\\\" [loginUser]=\\\"loginUser\\\" [settings]=\\\"settings\\\"></app-cronjob-settings>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'menuallocation_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.menu_allocation.title' | translate}}\\\" id=\\\"8\\\">\\r\\n                                    <app-menu-allocation *ngIf=\\\"getActiveSettingTab('8')\\\"></app-menu-allocation>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'themesettings_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.theme_settings.title' | translate}}\\\" id=\\\"9\\\">\\r\\n                                    <app-theme-settings *ngIf=\\\"getActiveSettingTab('9')\\\" [settings]=\\\"settings\\\"></app-theme-settings>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <!-- <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'dashboardsettings_view']\\\">\\r\\n                                <tab heading=\\\"{{'settings.dashboard_settings.title' | translate}}\\\" id=\\\"10\\\" (selectTab)=\\\"setSettingTab($event)\\\">\\r\\n                                    <app-dashboard-settings [settings]=\\\"settings\\\" *ngIf=\\\"getActiveSettingTab('10')\\\"></app-dashboard-settings>\\r\\n                                </tab>\\r\\n                            </ng-container> -->\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'backupdatabase_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.database_backups.title' | translate}}\\\" id=\\\"11\\\">\\r\\n                                    <app-database-backup *ngIf=\\\"getActiveSettingTab('11')\\\"></app-database-backup>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'customfields_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.custom_fields.title' | translate}}\\\" id=\\\"12\\\">\\r\\n                                    <app-custom-fields *ngIf=\\\"getActiveSettingTab('12')\\\"></app-custom-fields>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'translations_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.translations.title' | translate}}\\\" id=\\\"13\\\">\\r\\n                                    <app-translations-settings *ngIf=\\\"getActiveSettingTab('13')\\\"></app-translations-settings>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'estimatesettings_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.estimate_settings.title' | translate}}\\\" id=\\\"14\\\">\\r\\n                                    <app-estimate-settings *ngIf=\\\"getActiveSettingTab('14')\\\"></app-estimate-settings>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'invoicesettings_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.invoice_settings.title' | translate}}\\\" id=\\\"15\\\">\\r\\n                                    <app-invoice-settings *ngIf=\\\"getActiveSettingTab('15')\\\"></app-invoice-settings>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'paymentgatewaysettings_view']\\\">\\r\\n                                <tab (selectTab)=\\\"setSettingTab($event)\\\" heading=\\\"{{'settings.payment_gateway_settings.title' | translate}}\\\" id=\\\"16\\\">\\r\\n                                    <app-paypal-gateway *ngIf=\\\"getActiveSettingTab('16')\\\"></app-paypal-gateway>\\r\\n                                </tab>\\r\\n                            </ng-container>\\r\\n                        </tabset>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {CustomField} from '../../shared/models/custom-field.model';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CustomFieldsService {\r\n\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<CustomField[]>(`${this.apiUrl}/api/customfields`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/customfields/${id}`);\r\n    }\r\n\r\n    create(customField: CustomField) {\r\n        return this.http.post(`${this.apiUrl}/api/customfields`, customField);\r\n    }\r\n\r\n    update(customField: CustomField) {\r\n        return this.http.put(`${this.apiUrl}/api/customfields/${customField.id}`, customField);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${this.apiUrl}/api/customfields/${id}`);\r\n    }\r\n\r\n    changeStatus(customField: any) {\r\n        return this.http.post(`${this.apiUrl}/api/customfields/${customField.id}/change-status`, {status: customField.status});\r\n    }\r\n\r\n    getFormTables() {\r\n        return this.http.get(`${this.apiUrl}/api/customfields/form`);\r\n    }\r\n\r\n    public getCustomFieldByForm(formId: number): any {\r\n        return this.http.get(`${this.apiUrl}/api/customfields/form/${formId}`);\r\n    }\r\n\r\n    public getCustomFieldDetailByForm(formId: number, isView: number): any {\r\n        return this.http.get(`${this.apiUrl}/api/customfields/form/${formId}/1`);\r\n    }\r\n}\r\n\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {BackupDatabase} from '../../shared/models/backup-database.model';\r\n\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class DatabaseBackupService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<BackupDatabase[]>(`${this.apiUrl}/api/database-backups`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/database-backups/${id}`);\r\n    }\r\n\r\n    create(backupDatabase) {\r\n        return this.http.post(`${this.apiUrl}/api/database-backups`, backupDatabase);\r\n    }\r\n\r\n    update(backupDatabase: BackupDatabase) {\r\n        return this.http.put(`${this.apiUrl}/api/database-backups/${backupDatabase.id}`, backupDatabase);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${this.apiUrl}/api/database-backups/${id}`);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class EmailTemplateService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get(`${this.apiUrl}/api/email-templates`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/email-templates/${id}`);\r\n    }\r\n\r\n    create(emailTemplate) {\r\n        return this.http.post(`${this.apiUrl}/api/email-templates`, emailTemplate);\r\n    }\r\n\r\n    update(emailTemplate) {\r\n        return this.http.put(`${this.apiUrl}/api/email-templates/${emailTemplate.id}`, emailTemplate);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${this.apiUrl}/api/email-templates/${id}`);\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class InvoiceSettingService {\r\n\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get(`${this.apiUrl}/api/invoice-setting`);\r\n    }\r\n\r\n    create(params) {\r\n        return this.http.post(`${this.apiUrl}/api/invoice-setting`, params);\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9jb21wYW55LWRldGFpbC9jb21wYW55LWRldGFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {SettingService} from '../../../../core/services/setting.service';\r\n\r\n@Component({\r\n    selector: 'app-company-detail',\r\n    templateUrl: './company-detail.component.html',\r\n    styleUrls: ['./company-detail.component.scss']\r\n})\r\n\r\nexport class CompanyDetailComponent implements OnInit {\r\n    @Input() settings: any;\r\n    @Input() countries: any;\r\n    settingsForm: FormGroup;\r\n    isFormSubmitted = false;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private settingService: SettingService,\r\n    ) {\r\n    }\r\n\r\n    get companyDetail() {\r\n        return this.settingsForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadForm();\r\n    }\r\n\r\n    loadForm() {\r\n        this.settingsForm = this.formBuilder.group({\r\n            form_for: ['company_detail'],\r\n            company_name: [this.settings.company_name, [Validators.required, Validators.maxLength(50)]],\r\n            company_legal_name: [this.settings.company_legal_name, [Validators.maxLength(50)]],\r\n            company_short_name: [this.settings.company_short_name, [Validators.required, Validators.maxLength(10)]],\r\n            company_address: [this.settings.company_address, Validators.required],\r\n            company_country: [this.settings.company_country],\r\n            company_city: [this.settings.company_city],\r\n            company_zipcode: [this.settings.company_zipcode, [Validators.pattern(/^[0-9]{1,10}$/)]],\r\n            company_email: [this.settings.company_email, [Validators.required, Validators.email]],\r\n            company_website: [this.settings.company_website, Validators.pattern(/[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/)],\r\n            company_phone: [this.settings.company_phone, Validators.pattern(/^(?:[+])?(\\d[ -]?){1,15}$/)],\r\n            contact_person: [this.settings.contact_person],\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.settingsForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.settingService.create(this.settingsForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.messages.update'), this.translate.instant('settings.title'));\r\n                });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9jcm9uam9iLXNldHRpbmdzL2Nyb25qb2Itc2V0dGluZ3MuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {SettingService} from '../../../../core/services/setting.service';\r\n\r\nimport {environment} from '../../../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-cronjob-settings',\r\n    templateUrl: './cronjob-settings.component.html',\r\n    styleUrls: ['./cronjob-settings.component.scss']\r\n})\r\n\r\nexport class CronjobSettingsComponent implements OnInit {\r\n    public apiUrl = environment.apiUrl;\r\n    @Input() settings: any;\r\n    @Input() loginUser: any;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private toastr: ToastrService,\r\n        private settingService: SettingService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    saveCronjobSettings() {\r\n        this.settingService.create(this.settings)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.messages.update'), this.translate.instant('settings.title'));\r\n                });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9jdXN0b20tZmllbGQtY3JlYXRlL2N1c3RvbS1maWVsZC1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {CustomFieldsService} from '../../../../core/services/custom-fields.service';\r\nimport {HelperService} from '../../../../core/services/helper.service';\r\n\r\n@Component({\r\n    selector: 'app-custom-field-create',\r\n    templateUrl: './custom-field-create.component.html',\r\n    styleUrls: ['./custom-field-create.component.scss']\r\n})\r\n\r\nexport class CustomFieldCreateComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    formTables: any;\r\n    selectboxOptions: any;\r\n    createCustomFieldForm: FormGroup;\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private customFieldsService: CustomFieldsService,\r\n        private helperService: HelperService\r\n    ) {\r\n    }\r\n\r\n    get customFieldControl() {\r\n        return this.createCustomFieldForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n\r\n        this.loadForms();\r\n        this.getAllFormFields();\r\n    }\r\n\r\n    loadForms() {\r\n        this.createCustomFieldForm = this.formBuilder.group({\r\n            form_id: [null, Validators.required],\r\n            field_label: [null, Validators.required],\r\n            help_text: [null],\r\n            is_required: [false],\r\n            // show_on_details: [true],\r\n            field_type: [null, Validators.required],\r\n            default_value: [null],\r\n            select_options: this.formBuilder.array([]),\r\n            status: [true, Validators.required],\r\n        });\r\n    }\r\n\r\n    addOption() {\r\n        let control = <FormArray>this.createCustomFieldForm.controls.select_options;\r\n        control.push(\r\n            this.formBuilder.group({\r\n                value: [null, Validators.required],\r\n                label: [null, Validators.required],\r\n            })\r\n        );\r\n    }\r\n\r\n    deleteOption(index) {\r\n        let control = <FormArray>this.createCustomFieldForm.controls.select_options;\r\n        control.removeAt(index);\r\n    }\r\n\r\n    onChange(event) {\r\n        if (event.value == 'dropdown') {\r\n            this.addOption();\r\n            return;\r\n        }\r\n\r\n        const arr = <FormArray>this.createCustomFieldForm.controls.select_options;\r\n        arr.controls = [];\r\n        arr.removeAt(0);\r\n        arr.reset();\r\n    }\r\n\r\n    getAllFormFields() {\r\n        this.customFieldsService.getFormTables()\r\n            .subscribe(\r\n                data => {\r\n                    this.formTables = data;\r\n                });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n\r\n        if (this.createCustomFieldForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        if (this.createCustomFieldForm.value.field_type == 'dropdown') {\r\n            this.createCustomFieldForm.patchValue({default_value: this.createCustomFieldForm.value.select_options});\r\n        }\r\n\r\n        if (this.createCustomFieldForm.value.field_type == 'checkbox') {\r\n            this.createCustomFieldForm.patchValue({is_required: false});\r\n        }\r\n\r\n        this.customFieldsService.create(this.createCustomFieldForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.custom_fields.messages.create'), this.translate.instant('settings.custom_fields.title'));\r\n                    this.event.emit({data: true});\r\n                    this.onCancel();\r\n                });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsModalRef.hide();\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9jdXN0b20tZmllbGQtZWRpdC9jdXN0b20tZmllbGQtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {CustomField} from './../../../../shared/models/custom-field.model';\r\n\r\nimport {CustomFieldsService} from '../../../../core/services/custom-fields.service';\r\nimport {HelperService} from '../../../../core/services/helper.service';\r\n\r\n@Component({\r\n    selector: 'app-custom-field-edit',\r\n    templateUrl: './custom-field-edit.component.html',\r\n    styleUrls: ['./custom-field-edit.component.scss']\r\n})\r\n\r\nexport class CustomFieldEditComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    editCustomFieldForm: FormGroup;\r\n    formTables: any;\r\n    selectboxOptions: any;\r\n    customField: CustomField;\r\n    isFormSubmitted = false;\r\n    isPageLoaded = false;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private customFieldsService: CustomFieldsService,\r\n        private helperService: HelperService\r\n    ) {\r\n    }\r\n\r\n    get customFieldControl() {\r\n        return this.editCustomFieldForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.loadForms();\r\n        this.getAllFormFields();\r\n    }\r\n\r\n    loadForms() {\r\n        this.editCustomFieldForm = this.formBuilder.group({\r\n            id: [this.customField.id],\r\n            form_id: [this.customField.form_id, Validators.required],\r\n            field_label: [this.customField.field_label, Validators.required],\r\n            help_text: [this.customField.help_text],\r\n            is_required: [this.customField.is_required],\r\n            // show_on_details: [this.customField.show_on_details],\r\n            field_type: [this.customField.field_type],\r\n            default_value: [null],\r\n            select_options: this.formBuilder.array([]),\r\n            status: [this.customField.status, Validators.required],\r\n        });\r\n\r\n        this.isPageLoaded = true;\r\n        this.editCustomFieldForm.controls.form_id.disable();\r\n        this.editCustomFieldForm.controls.field_type.disable();\r\n        if (this.editCustomFieldForm.get('field_type').value == 'dropdown' && this.customField.default_value != []) {\r\n            this.addDynamicOptions(this.customField.default_value);\r\n        }\r\n    }\r\n\r\n    addDynamicOptions(options) {\r\n        let that = this;\r\n        options = JSON.parse(options);\r\n        options.forEach(function (element) {\r\n            let control = <FormArray>that.editCustomFieldForm.controls.select_options;\r\n            control.push(\r\n                that.formBuilder.group({\r\n                    value: [element.value, Validators.required],\r\n                    label: [element.label, Validators.required],\r\n                })\r\n            );\r\n        });\r\n    }\r\n\r\n    addOption() {\r\n        let control = <FormArray>this.editCustomFieldForm.controls.select_options;\r\n        control.push(\r\n            this.formBuilder.group({\r\n                value: [null, Validators.required],\r\n                label: [null, Validators.required],\r\n            })\r\n        );\r\n    }\r\n\r\n    deleteOption(index) {\r\n        let control = <FormArray>this.editCustomFieldForm.controls.select_options;\r\n        control.removeAt(index);\r\n    }\r\n\r\n    onChange(event) {\r\n        if (event.value == 'dropdown') {\r\n            this.addOption();\r\n            return;\r\n        }\r\n\r\n        const arr = <FormArray>this.editCustomFieldForm.controls.select_options;\r\n        arr.controls = [];\r\n        arr.removeAt(0);\r\n        arr.reset();\r\n    }\r\n\r\n    getAllFormFields() {\r\n        this.customFieldsService.getFormTables()\r\n            .subscribe(\r\n                data => {\r\n                    this.formTables = data;\r\n                });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n\r\n        if (this.editCustomFieldForm.invalid) {\r\n            return;\r\n        }\r\n        this.editCustomFieldForm.controls.form_id.enable();\r\n        this.editCustomFieldForm.controls.field_type.enable();\r\n\r\n        if (this.editCustomFieldForm.value.field_type == 'dropdown') {\r\n            this.editCustomFieldForm.patchValue({default_value: this.editCustomFieldForm.value.select_options});\r\n        }\r\n\r\n        if (this.editCustomFieldForm.value.field_type == 'checkbox') {\r\n            this.editCustomFieldForm.patchValue({is_required: false});\r\n        }\r\n\r\n        this.customFieldsService.update(this.editCustomFieldForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.custom_fields.messages.update'), this.translate.instant('settings.custom_fields.title'));\r\n                    this.event.emit({data: true});\r\n                    this.onCancel();\r\n                });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsModalRef.hide();\r\n    }\r\n}\r\n","export default \"::ng-deep .odd {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zZXR0aW5ncy9jb21wb25lbnRzL2N1c3RvbS1maWVsZHMvQzpcXFVzZXJzXFx0aHVhblxcT25lRHJpdmVcXERlc2t0b3BcXGdsYXZhbC10aHVhbmRpbmgvc3JjXFxhcHBcXG1vZHVsZXNcXHNldHRpbmdzXFxjb21wb25lbnRzXFxjdXN0b20tZmllbGRzXFxjdXN0b20tZmllbGRzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL3NldHRpbmdzL2NvbXBvbmVudHMvY3VzdG9tLWZpZWxkcy9jdXN0b20tZmllbGRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9zZXR0aW5ncy9jb21wb25lbnRzL2N1c3RvbS1maWVsZHMvY3VzdG9tLWZpZWxkcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCAub2RkIHtcclxuICAgIGRpc3BsYXk6IG5vbmVcclxufSIsIjo6bmctZGVlcCAub2RkIHtcbiAgZGlzcGxheTogbm9uZTtcbn0iXX0= */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ExportAsConfig, ExportAsService} from 'ngx-export-as';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {DataTableDirective} from 'angular-datatables';\r\nimport {Subject} from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {CustomFieldsService} from '../../../../core/services/custom-fields.service';\r\nimport {HelperService} from '../../../../core/services/helper.service';\r\nimport {AuthenticationService} from '../../../../core/services/authentication.service';\r\n\r\nimport {CustomFieldCreateComponent} from './../custom-field-create/custom-field-create.component';\r\nimport {CustomFieldEditComponent} from './../custom-field-edit/custom-field-edit.component';\r\n\r\nimport {DatatablesResponse} from '../../../../core/helpers/datatables-response.helper';\r\nimport {environment} from '../../../../../environments/environment';\r\n\r\nimport 'datatables.net';\r\nimport 'datatables.net-bs4';\r\n\r\ndeclare let $: any;\r\n\r\n@Component({\r\n    selector: 'app-custom-fields',\r\n    templateUrl: './custom-fields.component.html',\r\n    styleUrls: ['./custom-fields.component.scss']\r\n})\r\n\r\nexport class CustomFieldsComponent implements OnInit {\r\n    public modalRef: BsModalRef;\r\n    @ViewChild(DataTableDirective, {static: true})\r\n    dtElement: DataTableDirective;\r\n    dtTrigger: Subject<any> = new Subject();\r\n    formTables: any;\r\n    dtOptions: any = {};\r\n    loginUser: any;\r\n    customFields = [];\r\n    exportAsConfig: ExportAsConfig = {\r\n        type: 'pdf',\r\n        elementIdOrContent: 'custom_field_table',\r\n    };\r\n    modalConfigs = {\r\n        animated: true,\r\n        keyboard: true,\r\n        backdrop: true,\r\n        ignoreBackdropClick: false,\r\n        class: 'inmodal modal-dialog-centered animated fadeIn'\r\n    };\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private modalService: BsModalService,\r\n        private http: HttpClient,\r\n        private exportAsService: ExportAsService,\r\n        private toastr: ToastrService,\r\n        private authenticationService: AuthenticationService,\r\n        private customFieldsService: CustomFieldsService,\r\n        private helperService: HelperService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getAllFormFields();\r\n        this.loadCustomFieldDatatable();\r\n    }\r\n\r\n    loadCustomFieldDatatable() {\r\n        let that = this;\r\n        this.dtOptions = {\r\n            pagingType: 'full_numbers',\r\n            pageLength: that.loginUser.settings.tables_pagination_limit,\r\n            serverSide: true,\r\n            processing: true,\r\n            dom: '<\"html5buttons\"B>ltfrtip',\r\n            columns: [{\r\n                'sortable': true,\r\n                'width': '2%',\r\n                'target': [0]\r\n            }, {\r\n                'sortable': true,\r\n                'target': [1]\r\n            }, {\r\n                'sortable': true,\r\n                'target': [2]\r\n            }, {\r\n                'sortable': false,\r\n                'target': [3]\r\n            }, {\r\n                'sortable': false,\r\n                'target': [4]\r\n            }, {\r\n                'sortable': false,\r\n                'width': '5%',\r\n                'target': [5]\r\n            }],\r\n            buttons: [{\r\n                extend: 'csv',\r\n                title: this.translate.instant('settings.custom_fields.title'),\r\n                className: 'btn btn-datatable-gredient',\r\n                action: function (e, dt, node, config) {\r\n                    that.exportFiles('csv');\r\n                }\r\n            }, {\r\n                extend: 'excel',\r\n                title: this.translate.instant('settings.custom_fields.title'),\r\n                className: 'btn btn-datatable-gredient',\r\n                action: function (e, dt, node, config) {\r\n                    that.exportFiles('xlsx');\r\n                }\r\n            }, {\r\n                extend: 'pdf',\r\n                title: this.translate.instant('settings.custom_fields.title'),\r\n                className: 'btn btn-datatable-gredient',\r\n                action: function (e, dt, node, config) {\r\n                    that.exportFiles('pdf');\r\n                }\r\n            }],\r\n            language: {\r\n                'sEmptyTable': this.translate.instant('common.datatable.sEmptyTable'),\r\n                'sInfo': this.translate.instant('common.datatable.sInfo'),\r\n                'sInfoEmpty': this.translate.instant('common.datatable.sInfoEmpty'),\r\n                'sSearch': '',\r\n                'sInfoPostFix': this.translate.instant('common.datatable.sInfoPostFix'),\r\n                'sInfoThousands': this.translate.instant('common.datatable.sInfoThousands'),\r\n                'sLengthMenu': this.translate.instant('common.datatable.sLengthMenu'),\r\n                'sLoadingRecords': this.translate.instant('common.datatable.sLoadingRecords'),\r\n                'sProcessing': this.translate.instant('common.datatable.sProcessing'),\r\n                'sZeroRecords': this.translate.instant('common.datatable.sZeroRecords'),\r\n                'sSearchPlaceholder': this.translate.instant('common.datatable.sSearchPlaceholder'),\r\n                'oPaginate': {\r\n                    'sFirst': this.translate.instant('common.datatable.oPaginate.sFirst'),\r\n                    'sLast': this.translate.instant('common.datatable.oPaginate.sLast'),\r\n                    'sNext': this.translate.instant('common.datatable.oPaginate.sNext'),\r\n                    'sPrevious': this.translate.instant('common.datatable.oPaginate.sPrevious')\r\n                },\r\n                'oAria': {\r\n                    'sSortAscending': this.translate.instant('common.datatable.oAria.sSortAscending'),\r\n                    'sSortDescending': this.translate.instant('common.datatable.oAria.sSortDescending')\r\n                }\r\n            },\r\n            ajax: (dataTablesParameters: any, callback) => {\r\n                this.http\r\n                    .post<DatatablesResponse>(this.apiUrl + '/api/all-customfields', dataTablesParameters, {})\r\n                    .subscribe(resp => {\r\n                        this.customFields = resp.data;\r\n                        callback({\r\n                            recordsTotal: resp.recordsTotal,\r\n                            recordsFiltered: resp.recordsFiltered,\r\n                            data: [],\r\n                        });\r\n                    });\r\n            }\r\n        };\r\n    }\r\n\r\n    exportFiles(type) {\r\n        this.exportAsConfig.type = type;\r\n        this.exportAsService.save(this.exportAsConfig, 'customField').subscribe(() => {\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dtTrigger.next();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n    rerender(): void {\r\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n            dtInstance.destroy();\r\n\r\n            setTimeout(() => {\r\n                this.dtTrigger.next();\r\n\r\n                if (this.customFields.length > 0) {\r\n                    $('.tfoot_dt').addClass('d-none');\r\n                } else {\r\n                    $('.tfoot_dt').removeClass('d-none');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getAllFormFields() {\r\n        this.customFieldsService.getFormTables()\r\n            .subscribe(\r\n                data => {\r\n                    this.formTables = data;\r\n                    let keyValue = [];\r\n                    for (let iRow = 0; iRow < this.formTables.length; iRow++) {\r\n                        keyValue[this.formTables[iRow].id] = this.formTables[iRow].name;\r\n                    }\r\n                    this.formTables = keyValue;\r\n                });\r\n    }\r\n\r\n    changeStatus(event, id) {\r\n        this.customFieldsService.changeStatus({id: id, status: event})\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.custom_fields.messages.status'), this.translate.instant('settings.custom_fields.title'));\r\n                    this.rerender();\r\n                });\r\n    }\r\n\r\n    openCustomFieldCreateModal() {\r\n        this.modalRef = this.modalService.show(CustomFieldCreateComponent, this.modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.rerender();\r\n        });\r\n    }\r\n\r\n    openCustomFieldEditModal(CustomField) {\r\n        let modalConfig = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered animated fadeIn',\r\n            initialState: {\r\n                customField: CustomField\r\n            }\r\n        };\r\n        this.modalRef = this.modalService.show(CustomFieldEditComponent, modalConfig);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.rerender();\r\n        });\r\n    }\r\n\r\n    removeCustomField(id) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text') + ' ' + this.translate.instant('settings.custom_fields.title1'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.customFieldsService.delete(id)\r\n                    .subscribe(\r\n                        data => {\r\n                            this.toastr.success(this.translate.instant('settings.custom_fields.messages.delete'), this.translate.instant('settings.custom_fields.title'));\r\n                            this.rerender();\r\n                        });\r\n            }\r\n        });\r\n    }\r\n\r\n    saveCustomFieldDetail(index, name, value) {\r\n        this.customFields[index][name] = value;\r\n        this.customFieldsService.update(this.customFields[index])\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.custom_fields.messages.update'), this.translate.instant('settings.custom_fields.title'));\r\n                    this.rerender();\r\n                });\r\n    }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9kYXNoYm9hcmQtc2V0dGluZ3MvZGFzaGJvYXJkLXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {SettingService} from '../../../../core/services/setting.service';\r\n\r\n@Component({\r\n    selector: 'app-dashboard-settings',\r\n    templateUrl: './dashboard-settings.component.html',\r\n    styleUrls: ['./dashboard-settings.component.scss']\r\n})\r\n\r\nexport class DashboardSettingsComponent implements OnInit {\r\n    @Input() settings: any;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private toastr: ToastrService,\r\n        private settingService: SettingService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    saveDashboardSettings() {\r\n        this.settingService.create(this.settings)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.messages.update'), this.translate.instant('settings.title'));\r\n                });\r\n    }\r\n}\r\n","export default \"::ng-deep .odd {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zZXR0aW5ncy9jb21wb25lbnRzL2RhdGFiYXNlLWJhY2t1cC9DOlxcVXNlcnNcXHRodWFuXFxPbmVEcml2ZVxcRGVza3RvcFxcZ2xhdmFsLXRodWFuZGluaC9zcmNcXGFwcFxcbW9kdWxlc1xcc2V0dGluZ3NcXGNvbXBvbmVudHNcXGRhdGFiYXNlLWJhY2t1cFxcZGF0YWJhc2UtYmFja3VwLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL3NldHRpbmdzL2NvbXBvbmVudHMvZGF0YWJhc2UtYmFja3VwL2RhdGFiYXNlLWJhY2t1cC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9kYXRhYmFzZS1iYWNrdXAvZGF0YWJhc2UtYmFja3VwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIC5vZGQge1xyXG4gICAgZGlzcGxheTogbm9uZVxyXG59IiwiOjpuZy1kZWVwIC5vZGQge1xuICBkaXNwbGF5OiBub25lO1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {DatabaseBackupService} from '../../../../core/services/database-backup.service';\r\nimport {AuthenticationService} from '../../../../core/services/authentication.service';\r\n\r\nimport {environment} from '../../../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-database-backup',\r\n    templateUrl: './database-backup.component.html',\r\n    styleUrls: ['./database-backup.component.scss']\r\n})\r\n\r\nexport class DatabaseBackupComponent implements OnInit {\r\n    loginUser: any;\r\n    databases = [];\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private toastr: ToastrService,\r\n        private databaseBackupService: DatabaseBackupService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getDatabaseBackups();\r\n    }\r\n\r\n    getDatabaseBackups() {\r\n        this.databaseBackupService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.databases = data;\r\n\r\n                    setTimeout(() => {\r\n                        if (this.databases.length > 0) {\r\n                            $('.tfoot_dt').addClass('d-none');\r\n                        } else {\r\n                            $('.tfoot_dt').removeClass('d-none');\r\n                        }\r\n                    });\r\n                });\r\n    }\r\n\r\n    backupDatabase() {\r\n\r\n        // --\r\n        // this.toastr.error(this.translate.instant('common.not_allowed'));\r\n        // return;\r\n\r\n        this.databaseBackupService.create({})\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.database_backups.messages.create'), this.translate.instant('settings.database_backups.title'));\r\n                    this.getDatabaseBackups();\r\n                });\r\n    }\r\n\r\n    restoreDatabase(database) {\r\n\r\n        // --\r\n        // this.toastr.error(this.translate.instant('common.not_allowed'));\r\n        // return;\r\n\r\n        this.databaseBackupService.update(database)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.database_backups.messages.restore'), this.translate.instant('settings.database_backups.title'));\r\n                });\r\n    }\r\n\r\n    deleteDatatabase(id) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text') + ' ' + this.translate.instant('settings.database_backups.title1'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.databaseBackupService.delete(id)\r\n                    .subscribe(\r\n                        data => {\r\n                            this.toastr.success(this.translate.instant('settings.database_backups.messages.delete'), this.translate.instant('settings.database_backups.title'));\r\n                            this.getDatabaseBackups();\r\n                        });\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9lbWFpbC1ub3RpZmljYXRpb25zL2VtYWlsLW5vdGlmaWNhdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {SettingService} from '../../../../core/services/setting.service';\r\n\r\n@Component({\r\n    selector: 'app-email-notifications',\r\n    templateUrl: './email-notifications.component.html',\r\n    styleUrls: ['./email-notifications.component.scss']\r\n})\r\n\r\nexport class EmailNotificationsComponent implements OnInit {\r\n    @Input() settings: any;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private toastr: ToastrService,\r\n        private settingService: SettingService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    saveNotification() {\r\n        this.settingService.create(this.settings)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.messages.update'), this.translate.instant('settings.title'));\r\n                });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9lbWFpbC1zZXR0aW5ncy9lbWFpbC1zZXR0aW5ncy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {NgOption} from '@ng-select/ng-select';\r\n\r\nimport {SettingService} from '../../../../core/services/setting.service';\r\n\r\n@Component({\r\n    selector: 'app-email-settings',\r\n    templateUrl: './email-settings.component.html',\r\n    styleUrls: ['./email-settings.component.scss']\r\n})\r\n\r\nexport class EmailSettingsComponent implements OnInit {\r\n    @Input() settings: any;\r\n    settingsForm: FormGroup;\r\n    isSubmitted = false;\r\n    smtpHosts: NgOption[] = [\r\n        {value: 'smtp', label: 'SMTP'},\r\n        // { value: 'sendmail', label: 'Send Mail' },\r\n        // { value: 'sparkpost', label: 'Spark Post' },\r\n        // { value: 'mailgun', label: 'Mailgun' },\r\n        // { value: 'mandrill', label: 'Mandrill' },\r\n    ];\r\n    mailEncryption: NgOption[] = [\r\n        {value: 'ssl', label: 'SSL'},\r\n        {value: 'tls', label: 'TLS'},\r\n    ];\r\n    res: any;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private settingService: SettingService\r\n    ) {\r\n    }\r\n\r\n    get emailSettings() {\r\n        return this.settingsForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.settingsForm = this.formBuilder.group({\r\n            form_for: ['email_setting'],\r\n            company_from_email: [this.settings.company_from_email, [Validators.required, Validators.email]],\r\n            post_mark: [this.settings.post_mark],\r\n            smtp_protocol: [this.settings.smtp_protocol, Validators.required],\r\n            smtp_host: [this.settings.smtp_host, Validators.required],\r\n            smtp_user: [this.settings.smtp_user, [Validators.required, Validators.email]],\r\n            smtp_password: [this.settings.smtp_password, Validators.required],\r\n            smtp_port: [this.settings.smtp_port, Validators.required],\r\n            smtp_encryption: [this.settings.smtp_encryption],\r\n            sparkpost_secret: [this.settings.sparkpost_secret],\r\n            mailgun_domain: [this.settings.mailgun_domain],\r\n            mailgun_secret: [this.settings.mailgun_secret],\r\n            mandrill_secret: [this.settings.mandrill_secret]\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isSubmitted = true;\r\n        if (this.settingsForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.settingService.create(this.settingsForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.messages.update'), this.translate.instant('settings.title'));\r\n                });\r\n    }\r\n\r\n    sendTestEmail() {\r\n        this.settingService.sendTestEmail().subscribe(data => {\r\n            this.res = data;\r\n            if (this.res.status) {\r\n                this.toastr.success(this.translate.instant('settings.email_settings.title1') + this.res.email, this.translate.instant('settings.title'));\r\n            } else {\r\n                this.toastr.error(this.res.msg);\r\n            }\r\n        }, error => {\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9lbWFpbC10ZW1wbGF0ZXMvZW1haWwtdGVtcGxhdGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {EmailTemplateService} from '../../../../core/services/email-template.service';\r\n\r\n@Component({\r\n    selector: 'app-email-templates',\r\n    templateUrl: './email-templates.component.html',\r\n    styleUrls: ['./email-templates.component.scss']\r\n})\r\n\r\nexport class EmailTemplatesComponent implements OnInit {\r\n    emailGroups: any;\r\n    emailGroupTemplates = [];\r\n    email_group_id = 1;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private emailTemplateService: EmailTemplateService,\r\n        private toastr: ToastrService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getEmailTemplates();\r\n    }\r\n\r\n    getEmailTemplates() {\r\n        this.emailTemplateService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.emailGroups = data;\r\n                    this.loadEmailTemplates();\r\n                });\r\n    }\r\n\r\n    loadEmailTemplates() {\r\n        for (let iRow in this.emailGroups) {\r\n            this.emailGroupTemplates[this.emailGroups[iRow].id] = this.emailGroups[iRow].templates;\r\n        }\r\n    }\r\n\r\n    saveEmailtemplate(emailTemplate) {\r\n        this.emailTemplateService.update(emailTemplate)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.email_templates.messages.update'), this.translate.instant('settings.email_templates.title'));\r\n                });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9lc3RpbWF0ZS1zZXR0aW5ncy9lc3RpbWF0ZS1zZXR0aW5ncy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {EstimateSettingService} from '../../../../core/services/estimate-setting.service';\r\n\r\nimport {environment} from '../../../../../environments/environment';\r\n\r\nimport * as Dropzone from 'dropzone';\r\n\r\n@Component({\r\n    selector: 'app-estimate-settings',\r\n    templateUrl: './estimate-settings.component.html',\r\n    styleUrls: ['./estimate-settings.component.scss']\r\n})\r\nexport class EstimateSettingsComponent implements OnInit {\r\n\r\n    estimateSettingsForm: FormGroup;\r\n    isFormSubmitted = false;\r\n    isFormLoaded = false;\r\n    isLogoLoaded = true;\r\n    setting: any;\r\n    @ViewChild('logodropzone', {static: false}) logodropzone: ElementRef;\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private estimateSettingService: EstimateSettingService,\r\n        private toastr: ToastrService,\r\n        public translate: TranslateService\r\n    ) {\r\n    }\r\n\r\n    get estimateSetting() {\r\n        return this.estimateSettingsForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getEstimateSetting();\r\n    }\r\n\r\n    getEstimateSetting() {\r\n        this.estimateSettingService.getAll().subscribe(data => {\r\n            this.setting = data;\r\n            this.loadForm();\r\n            setTimeout(() => {\r\n                this.loadDropzone();\r\n            });\r\n        });\r\n    }\r\n\r\n    loadForm() {\r\n        this.estimateSettingsForm = this.formBuilder.group({\r\n            estimate_prefix: [this.setting.estimate_prefix, [Validators.required, Validators.maxLength(10)]],\r\n            due_after: [this.setting.due_after, [Validators.required]],\r\n            client_note: [this.setting.client_note],\r\n            terms_conditions: [this.setting.terms_conditions],\r\n            auto_remind: [this.setting.auto_remind],\r\n            auto_remind_before: [this.setting.auto_remind_before],\r\n            estimate_logo: [this.setting.estimate_logo]\r\n        });\r\n        this.isFormLoaded = true;\r\n    }\r\n\r\n    loadDropzone() {\r\n        let that = this;\r\n        new Dropzone(this.logodropzone.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            maxFiles: 1,\r\n            clickable: true,\r\n            acceptedFiles: 'image/*',\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>' + that.translate.instant('common.remove_file') + '</button>');\r\n                    const _this = this;\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file);\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            that.estimateSettingsForm.patchValue({estimate_logo: reader.result});\r\n                            this.isLogoLoaded = false;\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n\r\n                this.on('removedfile', function (file) {\r\n                    that.estimateSettingsForm.patchValue({estimate_logo: null});\r\n                });\r\n\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    removeDropzoneImage() {\r\n        this.isLogoLoaded = false;\r\n        this.setting.estimate_logo = null;\r\n        this.estimateSettingsForm.patchValue({estimate_logo: null});\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.estimateSettingsForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.estimateSettingService.create(this.estimateSettingsForm.value).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('settings.messages.update'), this.translate.instant('settings.title'));\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9pbnZvaWNlLXNldHRpbmdzL2ludm9pY2Utc2V0dGluZ3MuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {InvoiceSettingService} from '../../../../core/services/invoice-setting.service';\r\n\r\nimport {environment} from '../../../../../environments/environment';\r\n\r\nimport * as Dropzone from 'dropzone';\r\n\r\n@Component({\r\n    selector: 'app-invoice-settings',\r\n    templateUrl: './invoice-settings.component.html',\r\n    styleUrls: ['./invoice-settings.component.scss']\r\n})\r\nexport class InvoiceSettingsComponent implements OnInit {\r\n\r\n    invoiceSettingsForm: FormGroup;\r\n    isFormSubmitted = false;\r\n    isFormLoaded = false;\r\n    isLogoLoaded = true;\r\n    setting: any;\r\n    @ViewChild('logodropzone', {static: false}) logodropzone: ElementRef;\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private invocieSettingService: InvoiceSettingService,\r\n        private toastr: ToastrService,\r\n        public translate: TranslateService\r\n    ) {\r\n    }\r\n\r\n    get invoiceSetting() {\r\n        return this.invoiceSettingsForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getInvoiceSetting();\r\n    }\r\n\r\n    getInvoiceSetting() {\r\n        this.invocieSettingService.getAll().subscribe(data => {\r\n            this.setting = data;\r\n            this.loadForm();\r\n            setTimeout(() => {\r\n                this.loadDropzone();\r\n            });\r\n        });\r\n    }\r\n\r\n    loadForm() {\r\n        this.invoiceSettingsForm = this.formBuilder.group({\r\n            invoice_prefix: [this.setting.invoice_prefix, [Validators.required, Validators.maxLength(10)]],\r\n            due_after: [this.setting.due_after, [Validators.required]],\r\n            client_note: [this.setting.client_note],\r\n            terms_conditions: [this.setting.terms_conditions],\r\n            auto_remind: [this.setting.auto_remind],\r\n            auto_remind_after: [this.setting.auto_remind_after],\r\n            invoice_logo: [this.setting.invoice_logo],\r\n            gst_number: [this.setting.gst_number],\r\n            show_gst_number: [this.setting.show_gst_number]\r\n        });\r\n        this.isFormLoaded = true;\r\n    }\r\n\r\n    loadDropzone() {\r\n        let that = this;\r\n        new Dropzone(this.logodropzone.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            maxFiles: 1,\r\n            clickable: true,\r\n            acceptedFiles: 'image/*',\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>' + that.translate.instant('common.remove_file') + '</button>');\r\n                    const _this = this;\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file);\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            that.invoiceSettingsForm.patchValue({invoice_logo: reader.result});\r\n                            this.isLogoLoaded = false;\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n\r\n                this.on('removedfile', function (file) {\r\n                    that.invoiceSettingsForm.patchValue({invoice_logo: null});\r\n                });\r\n\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    removeDropzoneImage() {\r\n        this.isLogoLoaded = false;\r\n        this.setting.invoice_logo = null;\r\n        this.invoiceSettingsForm.patchValue({invoice_logo: null});\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.invoiceSettingsForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.invocieSettingService.create(this.invoiceSettingsForm.value).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('settings.messages.update'), this.translate.instant('settings.title'));\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9tZW51LWFsbG9jYXRpb24vbWVudS1hbGxvY2F0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {MenuService} from '../../../../core/services/menu.service';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'app-menu-allocation',\r\n    templateUrl: './menu-allocation.component.html',\r\n    styleUrls: ['./menu-allocation.component.scss']\r\n})\r\n\r\nexport class MenuAllocationComponent implements OnInit {\r\n    activeInactiveMenu: any = {\r\n        active_menu: {},\r\n        inactive_menu: {}\r\n    };\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private menuService: MenuService,\r\n        private toastr: ToastrService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getMenus();\r\n    }\r\n\r\n    getMenus() {\r\n        this.menuService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.activeInactiveMenu = data;\r\n                    this.loadMenu();\r\n                });\r\n    }\r\n\r\n    updateOutput(e) {\r\n        let list = e.length ? e : $(e.target),\r\n            output = list.data('output');\r\n\r\n        output.val(JSON.stringify(list.nestable('serialize')));\r\n    }\r\n\r\n    expandAll() {\r\n        $('.dd').nestable('expandAll');\r\n    }\r\n\r\n    collapseAll() {\r\n        $('.dd').nestable('collapseAll');\r\n    }\r\n\r\n    loadMenu() {\r\n        setTimeout(() => {\r\n            let activeMenu = $('#nestable').nestable({\r\n                group: 2,\r\n                maxDepth: 2\r\n            }).on('change', this.updateOutput);\r\n\r\n            // --\r\n            // Activate nestable for list 1\r\n            let inActiveMenu = $('#nestable2').nestable({\r\n                group: 2,\r\n                maxDepth: 2\r\n            }).on('change', this.updateOutput);\r\n\r\n            this.updateOutput(activeMenu.data('output', $('#nestable-output')));\r\n            this.updateOutput(inActiveMenu.data('output', $('#nestable2-output')));\r\n        }, 200);\r\n    }\r\n\r\n    saveMenu() {\r\n\r\n        // --\r\n        // this.toastr.error(this.translate.instant('common.not_allowed'));\r\n        // return;\r\n\r\n        let menus = {\r\n            'all_active_menu': $('#nestable-output').val(),\r\n            'all_inactive_menu': $('#nestable2-output').val()\r\n        };\r\n\r\n        this.menuService.create(menus)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.menu_allocation.messages.update'), this.translate.instant('settings.menu_allocation.title'));\r\n                });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9wYXlwYWwtZ2F0ZXdheS9wYXlwYWwtZ2F0ZXdheS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {SettingService} from '../../../../core/services/setting.service';\r\n\r\n@Component({\r\n    selector: 'app-paypal-gateway',\r\n    templateUrl: './paypal-gateway.component.html',\r\n    styleUrls: ['./paypal-gateway.component.scss']\r\n})\r\n\r\nexport class PaypalGatewayComponent implements OnInit {\r\n    @Input() loginUser: any;\r\n    settingsForm: FormGroup;\r\n    gatewaySettings: any;\r\n    isFormSubmitted = false;\r\n    isFormLoad = false;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private settingService: SettingService\r\n    ) {\r\n    }\r\n\r\n    get paypalSetting() {\r\n        return this.settingsForm.controls;\r\n    }\r\n\r\n    get stripeSetting() {\r\n        return this.settingsForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getPaymentGatewaySettings();\r\n    }\r\n\r\n    getPaymentGatewaySettings() {\r\n        this.settingService.getPaymentGatewaySettings()\r\n            .subscribe(\r\n                data => {\r\n                    this.gatewaySettings = data;\r\n                    this.loadForm();\r\n                });\r\n    }\r\n\r\n    loadForm() {\r\n        this.settingsForm = this.formBuilder.group({\r\n            form_for: ['paymentgateway_setting'],\r\n            paypal_checkout_label: [this.gatewaySettings.paypal_checkout_label],\r\n            paypal_checkout_client_id: [this.gatewaySettings.paypal_checkout_client_id],\r\n            paypal_checkout_status: [this.gatewaySettings.paypal_checkout_status],\r\n            stripe_label: [this.gatewaySettings.stripe_label],\r\n            stripe_api_key: [this.gatewaySettings.stripe_api_key],\r\n            stripe_secret_key: [this.gatewaySettings.stripe_secret_key],\r\n            stripe_status: [this.gatewaySettings.stripe_status]\r\n        });\r\n\r\n        this.isFormLoad = true;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.settingsForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        if (this.settingsForm.value.paypal_checkout_label) {\r\n            this.settingsForm.value.paypal_checkout_label = this.settingsForm.value.paypal_checkout_label.toLowerCase();\r\n        }\r\n\r\n        this.settingService.createPaymentGatewaySettings(this.settingsForm.value)\r\n            .subscribe(data => {\r\n                this.toastr.success(this.translate.instant('settings.messages.update'), this.translate.instant('settings.title'));\r\n            });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9zbGFjay1zZXR0aW5ncy9zbGFjay1zZXR0aW5ncy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {SettingService} from '../../../../core/services/setting.service';\r\n\r\n@Component({\r\n    selector: 'app-slack-settings',\r\n    templateUrl: './slack-settings.component.html',\r\n    styleUrls: ['./slack-settings.component.scss']\r\n})\r\n\r\nexport class SlackSettingsComponent implements OnInit {\r\n    @Input() loginUser: any;\r\n    slackSettings: any;\r\n    slackSettingsForm: FormGroup;\r\n    isFormSubmitted = false;\r\n    isFormLoad = false;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private settingService: SettingService\r\n    ) {\r\n    }\r\n\r\n    get slackSetting() {\r\n        return this.slackSettingsForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getSlackSetting();\r\n    }\r\n\r\n    getSlackSetting() {\r\n        this.settingService.getSlackSettings()\r\n            .subscribe(data => {\r\n                this.slackSettings = data;\r\n                this.loadForm();\r\n            });\r\n    }\r\n\r\n    loadForm() {\r\n        this.slackSettingsForm = this.formBuilder.group({\r\n            slack_client_id: [this.slackSettings.slack_client_id, Validators.required],\r\n            slack_client_secret: [this.slackSettings.slack_client_secret, Validators.required],\r\n            slack_redirect_URL: [this.slackSettings.slack_redirect_URL, Validators.required],\r\n            slack_status: [this.slackSettings.slack_status]\r\n        });\r\n\r\n        this.isFormLoad = true;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.slackSettingsForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.settingService.createSlackSettings(this.slackSettingsForm.value).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('settings.messages.update'), this.translate.instant('settings.title'));\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy9zeXN0ZW0tc2V0dGluZ3Mvc3lzdGVtLXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {NgOption} from '@ng-select/ng-select';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {SettingService} from '../../../../core/services/setting.service';\r\nimport {TranslationService} from '../../../../core/services/translation.service';\r\nimport {HelperService} from '../../../../core/services/helper.service';\r\n\r\nimport {date_formats} from '../../../../core/helpers/pm-helper';\r\n\r\n@Component({\r\n    selector: 'app-system-settings',\r\n    templateUrl: './system-settings.component.html',\r\n    styleUrls: ['./system-settings.component.scss']\r\n})\r\n\r\nexport class SystemSettingsComponent implements OnInit {\r\n    @Input() settings: any;\r\n    @Input() loginUser: any;\r\n    settingsForm: FormGroup;\r\n    languages: any;\r\n    currencies: any;\r\n    timezones: any[] = [];\r\n    dateFormates: NgOption[] = date_formats;\r\n    timeFormates = [\r\n        {value: 'hh:mm A', label: this.translate.instant('common.12_hours')},\r\n        {value: 'HH:mm', label: this.translate.instant('common.24_hours')}\r\n    ];\r\n    isSubmitted = false;\r\n    isFormLoaded = false;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private settingService: SettingService,\r\n        private helperService: HelperService,\r\n        private translationService: TranslationService\r\n    ) {\r\n    }\r\n\r\n    get systemSetting() {\r\n        return this.settingsForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getTimezones();\r\n        this.getCurrencies();\r\n        this.getLanguages();\r\n\r\n        this.settingsForm = this.formBuilder.group({\r\n            form_for: ['system_setting'],\r\n            timezone: [this.settings.timezone],\r\n            default_language: [this.settings.default_language, [Validators.required]],\r\n            tables_pagination_limit: [this.settings.tables_pagination_limit, [Validators.required]],\r\n            date_format: [this.settings.date_format, [Validators.required]],\r\n            time_format: [this.settings.time_format, [Validators.required]],\r\n            currency_id: [this.settings.currency_id, [Validators.required]],\r\n            allowed_for_registration: [this.settings.allowed_for_registration]\r\n        });\r\n    }\r\n\r\n    getTimezones() {\r\n        this.helperService.getTimezones()\r\n            .subscribe(\r\n                data => {\r\n                    for (let iRow in data) {\r\n                        this.timezones.push({\r\n                            key: iRow,\r\n                            value: data[iRow]\r\n                        });\r\n                    }\r\n                    this.isFormLoaded = true;\r\n                });\r\n    }\r\n\r\n    getCurrencies() {\r\n        this.helperService.getCurrencies().subscribe(data => {\r\n            this.currencies = data;\r\n        });\r\n    }\r\n\r\n    getLanguages() {\r\n        this.translationService.getAllActiveTranslations().subscribe(data => {\r\n            this.languages = data;\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isSubmitted = true;\r\n        if (this.settingsForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.settingsForm.value.date_time_format = this.settingsForm.value.date_format + ' ' + this.settingsForm.value.time_format;\r\n\r\n        this.settingService.create(this.settingsForm.value).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('settings.messages.update'), this.translate.instant('settings.title'));\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"img {\\n  max-width: 100%;\\n  height: 120px;\\n}\\n\\n.dz-image-custom {\\n  border-radius: 20px;\\n  width: 120px;\\n  height: 120px;\\n  position: relative;\\n  display: block;\\n  z-index: 10;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zZXR0aW5ncy9jb21wb25lbnRzL3RoZW1lLXNldHRpbmdzL0M6XFxVc2Vyc1xcdGh1YW5cXE9uZURyaXZlXFxEZXNrdG9wXFxnbGF2YWwtdGh1YW5kaW5oL3NyY1xcYXBwXFxtb2R1bGVzXFxzZXR0aW5nc1xcY29tcG9uZW50c1xcdGhlbWUtc2V0dGluZ3NcXHRoZW1lLXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL3NldHRpbmdzL2NvbXBvbmVudHMvdGhlbWUtc2V0dGluZ3MvdGhlbWUtc2V0dGluZ3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0VBQ0EsYUFBQTtBQ0NKOztBREVBO0VBQ0ksbUJBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLFdBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy90aGVtZS1zZXR0aW5ncy90aGVtZS1zZXR0aW5ncy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImltZyB7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEyMHB4O1xyXG59XHJcblxyXG4uZHotaW1hZ2UtY3VzdG9tIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICB3aWR0aDogMTIwcHg7XHJcbiAgICBoZWlnaHQ6IDEyMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB6LWluZGV4OiAxMDtcclxufVxyXG4iLCJpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTIwcHg7XG59XG5cbi5kei1pbWFnZS1jdXN0b20ge1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICB3aWR0aDogMTIwcHg7XG4gIGhlaWdodDogMTIwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHotaW5kZXg6IDEwO1xufSJdfQ== */\"","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport {SettingService} from '../../../../core/services/setting.service';\r\n\r\nimport {environment} from '../../../../../environments/environment';\r\nimport {collapsedMenu} from '../../../../core/helpers/app.helper';\r\n\r\nimport * as Dropzone from 'dropzone';\r\n\r\ndeclare let $: any;\r\n\r\n@Component({\r\n    selector: 'app-theme-settings',\r\n    templateUrl: './theme-settings.component.html',\r\n    styleUrls: ['./theme-settings.component.scss']\r\n})\r\n\r\nexport class ThemeSettingsComponent implements OnInit {\r\n    @Input() settings: any;\r\n    company_logo: any;\r\n    company_sidebar_logo: any;\r\n    login_background: any;\r\n    sidebar_background_images: any;\r\n    sidebar_background_images_obj: any;\r\n    isCompanyLogoUploaded = false;\r\n    isCompanySidebarLogoUploaded = false;\r\n    isLoginBgUploaded = false;\r\n    isSidebarBgsUploaded = false;\r\n    @ViewChild('logodropzone', {static: true}) logoDropzone: ElementRef;\r\n    @ViewChild('sidebardropzone', {static: true}) sidebardropzone: ElementRef;\r\n    @ViewChild('loginbg', {static: true}) loginbg: ElementRef;\r\n    @ViewChild('colorpaletts', {static: true}) colorpaletts: ElementRef;\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private toastr: ToastrService,\r\n        private settingService: SettingService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.settings.company_logo) {\r\n            this.company_logo = this.settings.company_logo;\r\n            this.isCompanyLogoUploaded = true;\r\n        }\r\n\r\n        if (this.settings.company_sidebar_logo) {\r\n            this.company_sidebar_logo = this.settings.company_sidebar_logo;\r\n            this.isCompanySidebarLogoUploaded = true;\r\n        }\r\n\r\n        if (this.settings.login_background) {\r\n            this.login_background = this.settings.login_background;\r\n            this.isLoginBgUploaded = true;\r\n        }\r\n\r\n        if (this.settings.sidebar_background_images) {\r\n            this.settings.sidebar_background_images = this.convertStringToArray(this.settings.sidebar_background_images);\r\n            this.isSidebarBgsUploaded = true;\r\n        }\r\n\r\n        // --\r\n        // Toggle\r\n        // $('.theme-settings-toggle').on('click',function(){\r\n        // \t$('.theme-settings').toggleClass('open');\r\n        // });\r\n        // $('.theme-settings-close').on('click',function(){\r\n        // \t$('.theme-settings').removeClass('open');\r\n        // });\r\n\r\n        this.setSidebarWidth(this.settings.sidebar_width);\r\n        this.setCollapsedMenu(this.settings.is_collapsed_menu);\r\n\r\n        this.loadDropzones();\r\n    }\r\n\r\n    // --\r\n    // Collapsed menu\r\n    changeCollapsedMenu($event) {\r\n        if (this.saveSettings({'is_collapsed_menu': this.settings.is_collapsed_menu})) {\r\n            this.setCollapsedMenu(this.settings.is_collapsed_menu);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setCollapsedMenu(isCollapsed) {\r\n        let collapsedValue = false;\r\n        if (isCollapsed || isCollapsed == 1) {\r\n            collapsedValue = true;\r\n        }\r\n\r\n        collapsedMenu(collapsedValue);\r\n        if (isCollapsed) {\r\n            $('.app-sidebar').trigger('mouseleave');\r\n        }\r\n    }\r\n\r\n    // --\r\n    // Sidebar width\r\n    changeSidebarWidth($event) {\r\n        if (this.saveSettings({'sidebar_width': this.settings.sidebar_width})) {\r\n            this.setSidebarWidth(this.settings.sidebar_width);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setSidebarWidth(width) {\r\n        let wrapper = $('.wrapper');\r\n        switch (width) {\r\n            case 'small':\r\n                $(wrapper).removeClass('sidebar-lg').addClass('sidebar-sm');\r\n                break;\r\n            case 'large':\r\n                $(wrapper).removeClass('sidebar-sm').addClass('sidebar-lg');\r\n                break;\r\n            default:\r\n                $(wrapper).removeClass('sidebar-sm sidebar-lg');\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadDropzones() {\r\n        let that = this;\r\n        new Dropzone(this.logoDropzone.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            maxFiles: 1,\r\n            clickable: true,\r\n            acceptedFiles: 'image/*',\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>Remove file</button>');\r\n                    const _this = this;\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file);\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            that.company_logo = reader.result;\r\n                            this.isCompanyLogoUploaded = false;\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n                this.on('removedfile', function (file) {\r\n                    that.company_logo = null;\r\n                    this.isCompanyLogoUploaded = false;\r\n                });\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        new Dropzone(this.loginbg.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            maxFiles: 1,\r\n            clickable: true,\r\n            acceptedFiles: 'image/*',\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>Remove file</button>');\r\n                    const _this = this;\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file);\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            that.login_background = reader.result;\r\n                            that.isLoginBgUploaded = false;\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n                this.on('removedfile', function (file) {\r\n                    that.login_background = null;\r\n                    that.isLoginBgUploaded = false;\r\n                });\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        //Color Pallets\r\n        new Dropzone(this.colorpaletts.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            clickable: true,\r\n            acceptedFiles: 'image/*',\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>Remove file</button>');\r\n                    const _this = this;\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file, 'test');\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            that.sidebar_background_images_obj = this.files;\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n                this.on('removedfile', function (file, param) {\r\n                });\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        new Dropzone(this.sidebardropzone.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            maxFiles: 1,\r\n            clickable: true,\r\n            acceptedFiles: 'image/*',\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>Remove file</button>');\r\n                    const _this = this;\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file);\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            that.company_sidebar_logo = reader.result;\r\n                            that.isCompanySidebarLogoUploaded = false;\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n                this.on('removedfile', function (file) {\r\n                    that.company_sidebar_logo = null;\r\n                    that.isCompanySidebarLogoUploaded = false;\r\n                });\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    convertStringToArray(value) {\r\n        if (typeof value == 'string') {\r\n            value = value.replace('[', '');\r\n            value = value.replace(']', '');\r\n            while (value.indexOf('\"') > -1) {\r\n                value = value.replace('\"', '');\r\n            }\r\n\r\n            return value.split(',');\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    removeImage(array, item) {\r\n        for (let i in array) {\r\n            if (array[i] == item) {\r\n                array.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeCompanyLogo() {\r\n        this.company_logo = null;\r\n        this.isCompanyLogoUploaded = false;\r\n    }\r\n\r\n    removeCompanySidebarLogo() {\r\n        this.company_sidebar_logo = null;\r\n        this.isCompanySidebarLogoUploaded = false;\r\n    }\r\n\r\n    removeLoginBg() {\r\n        this.login_background = null;\r\n        this.isLoginBgUploaded = false;\r\n    }\r\n\r\n    removeSidebarBgImage(image) {\r\n        this.sidebar_background_images = null;\r\n        this.removeImage(this.settings.sidebar_background_images, image);\r\n\r\n        if (this.settings.sidebar_background_images.length == 0) {\r\n            this.isSidebarBgsUploaded = false;\r\n        }\r\n    }\r\n\r\n    saveSettings(settings) {\r\n        return this.settingService.create(settings).subscribe(\r\n            data => {\r\n                return true;\r\n                this.toastr.success(this.translate.instant('settings.messages.update'), this.translate.instant('settings.title'));\r\n            }, data => {\r\n                return false;\r\n            });\r\n    }\r\n\r\n    onSubmit() {\r\n        let sidebar_bg_imgs = [];\r\n\r\n        if (this.sidebar_background_images_obj) {\r\n            for (let iRow = 0; iRow < this.sidebar_background_images_obj.length; iRow++) {\r\n                let thisfile = {\r\n                    file: this.sidebar_background_images_obj[iRow].dataURL,\r\n                    name: this.sidebar_background_images_obj[iRow].name,\r\n                    size: this.sidebar_background_images_obj[iRow].size,\r\n                    extension: this.sidebar_background_images_obj[iRow].name.split('.').pop()\r\n                };\r\n                sidebar_bg_imgs.push(thisfile);\r\n            }\r\n        }\r\n\r\n        // --\r\n        // Manage images\r\n        this.settings.form_for = 'theme_setting';\r\n        this.settings.settings_images = {\r\n            company_logo: this.company_logo,\r\n            company_sidebar_logo: this.company_sidebar_logo,\r\n            login_background: this.login_background,\r\n            sidebar_background_images: this.settings.sidebar_background_images,\r\n            sidebar_background_images_obj: sidebar_bg_imgs\r\n        };\r\n\r\n        this.settingService.create(this.settings).subscribe(\r\n            data => {\r\n                this.toastr.success(this.translate.instant('settings.messages.update'), this.translate.instant('settings.title'));\r\n            });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy90cmFuc2xhdGlvbnMtc2V0dGluZ3MvY29tcG9uZW50cy9jcmVhdGUtdHJhbnNsYXRpb24vY3JlYXRlLXRyYW5zbGF0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, ElementRef, EventEmitter, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {TranslationService} from '../../../../../../core/services/translation.service';\r\nimport {HelperService} from '../../../../../../core/services/helper.service';\r\n\r\nimport * as Dropzone from 'dropzone';\r\n\r\n@Component({\r\n    selector: 'app-create-translation',\r\n    templateUrl: './create-translation.component.html',\r\n    styleUrls: ['./create-translation.component.scss']\r\n})\r\n\r\nexport class CreateTranslationComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    createTranslationForm: FormGroup;\r\n    languages: any;\r\n    isFormSubmitted = false;\r\n    isFormLoaded = false;\r\n\r\n    @ViewChild('translateDropzone', {static: true}) translateDropzone: ElementRef;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private translationService: TranslationService,\r\n        private helperService: HelperService,\r\n        private toastr: ToastrService,\r\n    ) {\r\n    }\r\n\r\n    get getTranslationControl() {\r\n        return this.createTranslationForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.getLanguages();\r\n        this.loadForm();\r\n    }\r\n\r\n    getLanguages() {\r\n        this.helperService.getLanguages()\r\n            .subscribe(\r\n                data => {\r\n                    this.languages = data;\r\n                });\r\n    }\r\n\r\n    loadForm() {\r\n        this.createTranslationForm = this.formBuilder.group({\r\n            icon: [null, Validators.required],\r\n            language: [null, Validators.required]\r\n        });\r\n        this.loadDropzone();\r\n        this.isFormLoaded = true;\r\n    }\r\n\r\n    loadDropzone() {\r\n        let that = this;\r\n        new Dropzone(this.translateDropzone.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            maxFiles: 1,\r\n            clickable: true,\r\n            acceptedFiles: 'image/*',\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>Remove file</button>');\r\n                    const _this = this;\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file);\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            that.createTranslationForm.patchValue({icon: reader.result});\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n\r\n                this.on('removedfile', function (file) {\r\n                    that.createTranslationForm.patchValue({icon: ''});\r\n                });\r\n\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.createTranslationForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.translationService.create(this.createTranslationForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.translations.messages.create'), this.translate.instant('settings.translations.title'));\r\n                    this.event.emit({data: true});\r\n                    this.onCancel();\r\n                });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsModalRef.hide();\r\n    }\r\n\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy90cmFuc2xhdGlvbnMtc2V0dGluZ3MvY29tcG9uZW50cy9lZGl0LXRyYW5zbGF0aW9uL2VkaXQtdHJhbnNsYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ElementRef, EventEmitter, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {Translation} from '../../../../../../shared/models/translation.model';\r\n\r\nimport {TranslationService} from '../../../../../../core/services/translation.service';\r\n\r\nimport {environment} from '../../../../../../../environments/environment';\r\n\r\nimport * as Dropzone from 'dropzone';\r\n\r\n@Component({\r\n    selector: 'app-edit-translation',\r\n    templateUrl: './edit-translation.component.html',\r\n    styleUrls: ['./edit-translation.component.scss']\r\n})\r\n\r\nexport class EditTranslationComponent implements OnInit {\r\n    public event: EventEmitter<any> = new EventEmitter();\r\n    public onClose: Subject<boolean>;\r\n    editTranslationForm: FormGroup;\r\n    translation: Translation;\r\n    isFormSubmitted = false;\r\n    isFormLoaded = false;\r\n    isProfileUploded = false;\r\n    isProfileLoaded = true;\r\n    @ViewChild('translateDropzone', {static: true}) translateDropzone: ElementRef;\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public bsModalRef: BsModalRef,\r\n        private formBuilder: FormBuilder,\r\n        private translationService: TranslationService,\r\n        private toastr: ToastrService,\r\n    ) {\r\n    }\r\n\r\n    get getTranslationControl() {\r\n        return this.editTranslationForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.onClose = new Subject();\r\n        this.loadForm();\r\n    }\r\n\r\n    loadForm() {\r\n        this.editTranslationForm = this.formBuilder.group({\r\n            id: [this.translation.id],\r\n            status: [this.translation.status],\r\n            icon: [this.translation.icon, Validators.required],\r\n            language: [this.translation.language, Validators.required]\r\n        });\r\n        this.loadDropzone();\r\n        this.isFormLoaded = true;\r\n    }\r\n\r\n    loadDropzone() {\r\n        let that = this;\r\n        new Dropzone(this.translateDropzone.nativeElement, {\r\n            url: 'https://httpbin.org/post',\r\n            maxFiles: 1,\r\n            clickable: true,\r\n            acceptedFiles: 'image/*',\r\n            createImageThumbnails: true,\r\n            init: function () {\r\n                this.on('addedfile', function (file) {\r\n                    const removeButton = Dropzone.createElement('<button class=\\'btn btn-sm btn-block\\'>Remove file</button>');\r\n                    const _this = this;\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        _this.removeFile(file);\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n\r\n                    if (file) {\r\n                        let reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            that.editTranslationForm.patchValue({icon: reader.result});\r\n                            that.isProfileLoaded = false;\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                });\r\n\r\n                this.on('removedfile', function (file) {\r\n                    that.editTranslationForm.patchValue({icon: null});\r\n                    that.isProfileLoaded = false;\r\n                });\r\n\r\n                this.on('error', function (file, message: any) {\r\n                    if (file) {\r\n                        that.toastr.error(message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    removeDropzoneImage() {\r\n        this.isProfileUploded = true;\r\n        this.isProfileLoaded = false;\r\n        this.editTranslationForm.patchValue({icon: null});\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isFormSubmitted = true;\r\n        if (this.editTranslationForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        // --\r\n        // this.toastr.error(this.translate.instant('common.not_allowed'));\r\n        // this.onCancel();\r\n        // return;\r\n\r\n        this.translationService.update(this.editTranslationForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.translations.messages.update'), this.translate.instant('settings.translations.title'));\r\n                    this.event.emit({data: true});\r\n                    this.onCancel();\r\n                });\r\n    }\r\n\r\n    onCancel() {\r\n        this.onClose.next(false);\r\n        this.bsModalRef.hide();\r\n    }\r\n\r\n}\r\n\r\n\r\n","export default \".hide_empty_message ::ng-deep .odd {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zZXR0aW5ncy9jb21wb25lbnRzL3RyYW5zbGF0aW9ucy1zZXR0aW5ncy9DOlxcVXNlcnNcXHRodWFuXFxPbmVEcml2ZVxcRGVza3RvcFxcZ2xhdmFsLXRodWFuZGluaC9zcmNcXGFwcFxcbW9kdWxlc1xcc2V0dGluZ3NcXGNvbXBvbmVudHNcXHRyYW5zbGF0aW9ucy1zZXR0aW5nc1xcdHJhbnNsYXRpb25zLXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL3NldHRpbmdzL2NvbXBvbmVudHMvdHJhbnNsYXRpb25zLXNldHRpbmdzL3RyYW5zbGF0aW9ucy1zZXR0aW5ncy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvY29tcG9uZW50cy90cmFuc2xhdGlvbnMtc2V0dGluZ3MvdHJhbnNsYXRpb25zLXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhpZGVfZW1wdHlfbWVzc2FnZSA6Om5nLWRlZXAgLm9kZCB7XHJcbiAgICBkaXNwbGF5OiBub25lXHJcbn0iLCIuaGlkZV9lbXB0eV9tZXNzYWdlIDo6bmctZGVlcCAub2RkIHtcbiAgZGlzcGxheTogbm9uZTtcbn0iXX0= */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ExportAsConfig, ExportAsService} from 'ngx-export-as';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {DataTableDirective} from 'angular-datatables';\r\nimport {Subject} from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {TranslationService} from '../../../../core/services/translation.service';\r\nimport {HelperService} from '../../../../core/services/helper.service';\r\nimport {AuthenticationService} from '../../../../core/services/authentication.service';\r\n\r\nimport {CreateTranslationComponent} from './components/create-translation/create-translation.component';\r\nimport {EditTranslationComponent} from './components/edit-translation/edit-translation.component';\r\n\r\nimport {environment} from '../../../../../environments/environment';\r\nimport {DatatablesResponse} from '../../../../core/helpers/datatables-response.helper';\r\n\r\nimport 'datatables.net';\r\nimport 'datatables.net-bs4';\r\n\r\n@Component({\r\n    selector: 'app-translations-settings',\r\n    templateUrl: './translations-settings.component.html',\r\n    styleUrls: ['./translations-settings.component.scss']\r\n})\r\n\r\nexport class TranslationsSettingsComponent implements OnInit {\r\n    public modalRef: BsModalRef;\r\n    @ViewChild(DataTableDirective, {static: true})\r\n    dtElement: DataTableDirective;\r\n    dtTrigger: Subject<any> = new Subject();\r\n    dtOptions: any = {};\r\n    translations = [];\r\n    loginUser: any;\r\n    exportAsConfig: ExportAsConfig = {\r\n        type: 'pdf',\r\n        elementIdOrContent: 'translation_table',\r\n    };\r\n    modalConfigs = {\r\n        animated: true,\r\n        keyboard: true,\r\n        backdrop: true,\r\n        ignoreBackdropClick: false,\r\n        class: 'inmodal modal-dialog-centered animated fadeIn'\r\n    };\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        private http: HttpClient,\r\n        private toastr: ToastrService,\r\n        private modalService: BsModalService,\r\n        private exportAsService: ExportAsService,\r\n        private translationService: TranslationService,\r\n        private helperService: HelperService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadTranslationDatatable();\r\n    }\r\n\r\n    loadTranslationDatatable() {\r\n        var that = this;\r\n        this.dtOptions = {\r\n            pagingType: 'full_numbers',\r\n            pageLength: this.loginUser.settings.tables_pagination_limit,\r\n            serverSide: true,\r\n            processing: true,\r\n            dom: '<\"html5buttons\"B>ltfrtip',\r\n            order: [1, 'asc'],\r\n            columns: [{\r\n                'sortable': false,\r\n                'width': '2%',\r\n                'target': [0]\r\n            }, {\r\n                'sortable': true,\r\n                'target': [1]\r\n            }, {\r\n                'sortable': true,\r\n                'target': [2]\r\n            }, {\r\n                'sortable': false,\r\n                'width': '5%',\r\n                'target': [3]\r\n            }\r\n            ],\r\n            buttons: [{\r\n                extend: 'csv',\r\n                title: this.translate.instant('settings.translations.title'),\r\n                className: 'btn btn-datatable-gredient',\r\n                action: function (e, dt, node, config) {\r\n                    that.exportFiles('csv');\r\n                }\r\n            }, {\r\n                extend: 'excel',\r\n                title: this.translate.instant('settings.translations.title'),\r\n                className: 'btn btn-datatable-gredient',\r\n                action: function (e, dt, node, config) {\r\n                    that.exportFiles('xlsx');\r\n                }\r\n            }, {\r\n                extend: 'pdf',\r\n                title: this.translate.instant('settings.translations.title'),\r\n                className: 'btn btn-datatable-gredient',\r\n                action: function (e, dt, node, config) {\r\n                    that.exportFiles('pdf');\r\n                }\r\n            }],\r\n            language: {\r\n                'sEmptyTable': this.translate.instant('common.datatable.sEmptyTable'),\r\n                'sInfo': this.translate.instant('common.datatable.sInfo'),\r\n                'sInfoEmpty': this.translate.instant('common.datatable.sInfoEmpty'),\r\n                'sSearch': '',\r\n                'sInfoPostFix': this.translate.instant('common.datatable.sInfoPostFix'),\r\n                'sInfoThousands': this.translate.instant('common.datatable.sInfoThousands'),\r\n                'sLengthMenu': this.translate.instant('common.datatable.sLengthMenu'),\r\n                'sLoadingRecords': this.translate.instant('common.datatable.sLoadingRecords'),\r\n                'sProcessing': this.translate.instant('common.datatable.sProcessing'),\r\n                'sZeroRecords': this.translate.instant('common.datatable.sZeroRecords'),\r\n                'sSearchPlaceholder': this.translate.instant('common.datatable.sSearchPlaceholder'),\r\n                'oPaginate': {\r\n                    'sFirst': this.translate.instant('common.datatable.oPaginate.sFirst'),\r\n                    'sLast': this.translate.instant('common.datatable.oPaginate.sLast'),\r\n                    'sNext': this.translate.instant('common.datatable.oPaginate.sNext'),\r\n                    'sPrevious': this.translate.instant('common.datatable.oPaginate.sPrevious')\r\n                },\r\n                'oAria': {\r\n                    'sSortAscending': this.translate.instant('common.datatable.oAria.sSortAscending'),\r\n                    'sSortDescending': this.translate.instant('common.datatable.oAria.sSortDescending')\r\n                }\r\n            },\r\n            ajax: (dataTablesParameters: any, callback) => {\r\n                this.http\r\n                    .post<DatatablesResponse>(this.apiUrl + '/api/all-translations', dataTablesParameters, {})\r\n                    .subscribe(resp => {\r\n                        this.translations = resp.data;\r\n\r\n                        callback({\r\n                            recordsTotal: resp.recordsTotal,\r\n                            recordsFiltered: resp.recordsFiltered,\r\n                            data: [],\r\n                        });\r\n                    });\r\n            }\r\n        };\r\n    }\r\n\r\n    exportFiles(type) {\r\n        this.exportAsConfig.type = type;\r\n        this.exportAsService.save(this.exportAsConfig, 'translations').subscribe(() => {\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dtTrigger.next();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n    rerender(): void {\r\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n            dtInstance.destroy();\r\n            setTimeout(() => {\r\n                this.dtTrigger.next();\r\n\r\n                if (this.translations.length > 0) {\r\n                    $('.tfoot_dt').addClass('d-none');\r\n                } else {\r\n                    $('.tfoot_dt').removeClass('d-none');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    openTranslationCreateModal() {\r\n        this.modalRef = this.modalService.show(CreateTranslationComponent, this.modalConfigs);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.rerender();\r\n        });\r\n    }\r\n\r\n    openTranslationEditModal(translation) {\r\n        let modalConfig = {\r\n            animated: true,\r\n            keyboard: true,\r\n            backdrop: true,\r\n            ignoreBackdropClick: false,\r\n            class: 'inmodal modal-dialog-centered animated fadeIn',\r\n            initialState: {\r\n                translation: translation\r\n            }\r\n        };\r\n\r\n        this.modalRef = this.modalService.show(EditTranslationComponent, modalConfig);\r\n        this.modalRef.content.event.subscribe(data => {\r\n            this.rerender();\r\n        });\r\n    }\r\n\r\n    setActiveInactiveTranslation(value: boolean, translation) {\r\n        translation.status = value;\r\n        this.translationService.update(translation)\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('settings.translations.messages.status'), this.translate.instant('settings.translations.title'));\r\n                    this.rerender();\r\n                });\r\n    }\r\n\r\n    translationDelete(id) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text') + ' ' + this.translate.instant('settings.translations.title1'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n\r\n                // --\r\n                // this.toastr.error(this.translate.instant('common.not_allowed'));\r\n                // return;\r\n\r\n                this.translationService.delete(id)\r\n                    .subscribe(\r\n                        data => {\r\n                            this.toastr.success(this.translate.instant('settings.translations.messages.delete'), this.translate.instant('settings.translations.title'));\r\n                            this.rerender();\r\n                        });\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"@charset \\\"UTF-8\\\";\\n/**\\n * Nestable\\n */\\n.dd {\\n  position: relative;\\n  display: block;\\n  margin: 0;\\n  padding: 0;\\n  max-width: 600px;\\n  list-style: none;\\n  font-size: 13px;\\n  line-height: 20px;\\n}\\n.dd-list {\\n  display: block;\\n  position: relative;\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n}\\n.dd-list .dd-list {\\n  padding-left: 30px;\\n}\\n.dd-collapsed .dd-list {\\n  display: none;\\n}\\n.dd-item,\\n.dd-empty,\\n.dd-placeholder {\\n  display: block;\\n  position: relative;\\n  margin: 0;\\n  padding: 0;\\n  min-height: 20px;\\n  font-size: 13px;\\n  line-height: 20px;\\n}\\n.dd-handle {\\n  display: block;\\n  height: 30px;\\n  margin: 5px 0;\\n  padding: 5px 10px;\\n  color: #333;\\n  text-decoration: none;\\n  font-weight: bold;\\n  border: 1px solid #ccc;\\n  background: #fafafa;\\n  border-radius: 3px;\\n  box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n}\\n.dd-handle:hover {\\n  color: #2ea8e5;\\n  background: #fff;\\n}\\n.dd-item > button {\\n  display: block;\\n  position: relative;\\n  cursor: pointer;\\n  float: left;\\n  width: 25px;\\n  height: 20px;\\n  margin: 5px 0;\\n  padding: 0;\\n  text-indent: 100%;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  border: 0;\\n  background: transparent;\\n  font-size: 12px;\\n  line-height: 1;\\n  text-align: center;\\n  font-weight: bold;\\n}\\n.dd-item > button:before {\\n  content: \\\"+\\\";\\n  display: block;\\n  position: absolute;\\n  width: 100%;\\n  text-align: center;\\n  text-indent: 0;\\n}\\n.dd-item > button[data-action=collapse]:before {\\n  content: \\\"-\\\";\\n}\\n.dd-placeholder,\\n.dd-empty {\\n  margin: 5px 0;\\n  padding: 0;\\n  min-height: 30px;\\n  background: #f2fbff;\\n  border: 1px dashed #b6bcbf;\\n  box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n}\\n.dd-empty {\\n  border: 1px dashed #bbb;\\n  min-height: 100px;\\n  background-color: #e5e5e5;\\n  background-image: linear-gradient(45deg, #fff 25%, transparent 25%, transparent 75%, #fff 75%, #fff), linear-gradient(45deg, #fff 25%, transparent 25%, transparent 75%, #fff 75%, #fff);\\n  background-size: 60px 60px;\\n  background-position: 0 0, 30px 30px;\\n}\\n.dd-dragel {\\n  position: absolute;\\n  pointer-events: none;\\n  z-index: 9999;\\n}\\n.dd-dragel > .dd-item .dd-handle {\\n  margin-top: 0;\\n}\\n.dd-dragel .dd-handle {\\n  box-shadow: 2px 4px 6px 0 rgba(0, 0, 0, 0.1);\\n}\\n/**\\n * Nestable Extras\\n */\\n.nestable-lists {\\n  display: block;\\n  clear: both;\\n  padding: 30px 0;\\n  width: 100%;\\n  border: 0;\\n  border-top: 2px solid #ddd;\\n  border-bottom: 2px solid #ddd;\\n}\\n#nestable-menu {\\n  padding: 0;\\n  margin: 20px 0;\\n}\\n#nestable-output,\\n#nestable2-output {\\n  width: 100%;\\n  height: 7em;\\n  font-size: 0.75em;\\n  line-height: 1.333333em;\\n  font-family: Consolas, monospace;\\n  padding: 5px;\\n  box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n}\\n#nestable2 .dd-handle {\\n  color: #fff;\\n  border: 1px solid #999;\\n  background: #bbb;\\n}\\n#nestable2 .dd-handle:hover {\\n  background: #bbb;\\n}\\n#nestable2 .dd-item > button:before {\\n  color: #fff;\\n}\\n.dd-hover > .dd-handle {\\n  background: #2ea8e5 !important;\\n}\\n/**\\n * Nestable Draggable Handles\\n */\\n.dd3-content {\\n  display: block;\\n  height: 30px;\\n  margin: 5px 0;\\n  padding: 5px 10px 5px 40px;\\n  color: #333;\\n  text-decoration: none;\\n  font-weight: bold;\\n  border: 1px solid #ccc;\\n  background: #fafafa;\\n  border-radius: 3px;\\n  box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n}\\n.dd3-content:hover {\\n  color: #2ea8e5;\\n  background: #fff;\\n}\\n.dd-dragel > .dd3-item > .dd3-content {\\n  margin: 0;\\n}\\n.dd3-item > button {\\n  margin-left: 30px;\\n}\\n.dd3-handle {\\n  position: absolute;\\n  margin: 0;\\n  left: 0;\\n  top: 0;\\n  cursor: pointer;\\n  width: 30px;\\n  text-indent: 100%;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  border: 1px solid #aaa;\\n  background: #ddd;\\n  border-top-right-radius: 0;\\n  border-bottom-right-radius: 0;\\n}\\n.dd3-handle:before {\\n  content: \\\"≡\\\";\\n  display: block;\\n  position: absolute;\\n  left: 0;\\n  top: 3px;\\n  width: 100%;\\n  text-align: center;\\n  text-indent: 0;\\n  color: #fff;\\n  font-size: 20px;\\n  font-weight: normal;\\n}\\n.dd3-handle:hover {\\n  background: #ddd;\\n}\\n.disabled {\\n  pointer-events: none;\\n  opacity: 0.6;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {TabsetComponent} from 'ngx-bootstrap/tabs';\r\n\r\nimport {SettingService} from '../../../../core/services/setting.service';\r\nimport {HelperService} from '../../../../core/services/helper.service';\r\nimport {AuthenticationService} from 'src/app/core/services/authentication.service';\r\n\r\n@Component({\r\n    selector: 'app-settings',\r\n    templateUrl: './settings.component.html',\r\n    styleUrls: ['./settings.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SettingsComponent implements OnInit {\r\n    @ViewChild('tabset', {static: true}) tabset: TabsetComponent;\r\n    countries: any;\r\n    loginUser: any;\r\n    activeSettingTab = '1';\r\n    isSettingsLoad = false;\r\n    settings = [];\r\n\r\n    constructor(\r\n        private settingService: SettingService,\r\n        private helperService: HelperService,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.loginUser.subscribe(x => this.loginUser = x);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getCountries();\r\n    }\r\n\r\n    setSettingTab($event) {\r\n        this.activeSettingTab = $event.id;\r\n    }\r\n\r\n    getActiveSettingTab(tab) {\r\n        return this.activeSettingTab === tab;\r\n    }\r\n\r\n    getCountries() {\r\n        this.helperService.getCountries()\r\n            .subscribe(\r\n                data => {\r\n                    this.countries = data;\r\n                    this.getSettings();\r\n                });\r\n    }\r\n\r\n    getSettings() {\r\n        this.settingService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.settings = data;\r\n                    this.isSettingsLoad = true;\r\n                });\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport {SettingsComponent} from './pages/settings/settings.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: SettingsComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class SettingsRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\nimport {BsDropdownModule, ModalModule, TabsModule, TimepickerModule, TooltipModule} from 'ngx-bootstrap';\r\nimport {UiSwitchModule} from 'ngx-ui-switch';\r\nimport {NgxPermissionsModule} from 'ngx-permissions';\r\nimport {NgxEditorModule} from 'ngx-editor';\r\nimport {ExportAsModule} from 'ngx-export-as';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {ChecklistModule} from 'angular-checklist';\r\nimport {DataTablesModule} from 'angular-datatables';\r\n\r\nimport {SharedModule} from '../../shared/shared.module';\r\nimport {SettingsRoutingModule} from './settings-routing.module';\r\n\r\nimport {SettingsComponent} from './pages/settings/settings.component';\r\nimport {CompanyDetailComponent} from './components/company-detail/company-detail.component';\r\nimport {EmailSettingsComponent} from './components/email-settings/email-settings.component';\r\nimport {EmailTemplatesComponent} from './components/email-templates/email-templates.component';\r\nimport {EmailNotificationsComponent} from './components/email-notifications/email-notifications.component';\r\nimport {CronjobSettingsComponent} from './components/cronjob-settings/cronjob-settings.component';\r\nimport {MenuAllocationComponent} from './components/menu-allocation/menu-allocation.component';\r\nimport {ThemeSettingsComponent} from './components/theme-settings/theme-settings.component';\r\nimport {DashboardSettingsComponent} from './components/dashboard-settings/dashboard-settings.component';\r\nimport {SystemSettingsComponent} from './components/system-settings/system-settings.component';\r\nimport {DatabaseBackupComponent} from './components/database-backup/database-backup.component';\r\nimport {CustomFieldsComponent} from './components/custom-fields/custom-fields.component';\r\nimport {CustomFieldCreateComponent} from './components/custom-field-create/custom-field-create.component';\r\nimport {CustomFieldEditComponent} from './components/custom-field-edit/custom-field-edit.component';\r\nimport {TranslationsSettingsComponent} from './components/translations-settings/translations-settings.component';\r\nimport {CreateTranslationComponent} from './components/translations-settings/components/create-translation/create-translation.component';\r\nimport {EditTranslationComponent} from './components/translations-settings/components/edit-translation/edit-translation.component';\r\nimport {EstimateSettingsComponent} from './components/estimate-settings/estimate-settings.component';\r\nimport {InvoiceSettingsComponent} from './components/invoice-settings/invoice-settings.component';\r\nimport {SlackSettingsComponent} from './components/slack-settings/slack-settings.component';\r\nimport {PaypalGatewayComponent} from './components/paypal-gateway/paypal-gateway.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SettingsComponent,\r\n        CompanyDetailComponent,\r\n        EmailSettingsComponent,\r\n        EmailTemplatesComponent,\r\n        EmailNotificationsComponent,\r\n        CronjobSettingsComponent,\r\n        MenuAllocationComponent,\r\n        ThemeSettingsComponent,\r\n        DashboardSettingsComponent,\r\n        SystemSettingsComponent,\r\n        DatabaseBackupComponent,\r\n        CustomFieldsComponent,\r\n        CustomFieldCreateComponent,\r\n        CustomFieldEditComponent,\r\n        TranslationsSettingsComponent,\r\n        CreateTranslationComponent,\r\n        EditTranslationComponent,\r\n        EstimateSettingsComponent,\r\n        InvoiceSettingsComponent,\r\n        SlackSettingsComponent,\r\n        PaypalGatewayComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        SettingsRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgSelectModule,\r\n        ChecklistModule,\r\n        DataTablesModule,\r\n        NgxPermissionsModule,\r\n        NgxEditorModule,\r\n        ExportAsModule,\r\n        TimepickerModule.forRoot(),\r\n        TabsModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n        TooltipModule.forRoot(),\r\n        BsDropdownModule.forRoot(),\r\n        UiSwitchModule.forRoot({\r\n            checkedLabel: 'Active',\r\n            uncheckedLabel: 'Inactive',\r\n            color: 'rgb(0, 189, 99)',\r\n            switchColor: '#FFFFFF',\r\n            defaultBgColor: '#c6c6c6',\r\n            defaultBoColor: '#c39ef8'\r\n        }),\r\n        TranslateModule.forChild({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (HttpLoaderFactory),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        SharedModule\r\n    ],\r\n    entryComponents: [\r\n        CustomFieldCreateComponent,\r\n        CustomFieldEditComponent,\r\n        CreateTranslationComponent,\r\n        EditTranslationComponent\r\n    ]\r\n})\r\n\r\nexport class SettingsModule {\r\n}\r\n\r\n// Required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n"],"sourceRoot":"webpack:///"}