{"version":3,"sources":["./src/app/modules/hrm/leave-types/pages/leave-types-list/leave-types-list.component.html","./src/app/core/services/leavetype.service.ts","./src/app/modules/hrm/leave-types/leave-types-routing.module.ts","./src/app/modules/hrm/leave-types/leave-types.module.ts","./src/app/modules/hrm/leave-types/pages/leave-types-list/leave-types-list.component.scss","./src/app/modules/hrm/leave-types/pages/leave-types-list/leave-types-list.component.ts"],"names":[],"mappings":"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","file":"default~modules-hrm-leave-types-leave-types-module~modules-hrm-leaves-leaves-module.js","sourcesContent":["export default \"<section>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card pl-2 pr-2\\\">\\r\\n                <div class=\\\"card-header pl-0 pr-0 border-bottom\\\">\\r\\n                    <h4 class=\\\"main-title mb-0 mt-2\\\"><span>{{'leave_types.title' | translate}}</span></h4>\\r\\n                </div>\\r\\n                <div class=\\\"card-content pt-3 pb-3\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'leavetypes_create']\\\" class=\\\"col-md-3\\\">\\r\\n                                <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"createLeaveTypeForm\\\" class=\\\"form\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-12\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"leave_type\\\">{{'leave_types.create.fields.leave_type' | translate}}\\r\\n                                                    <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                                                <input [ngClass]=\\\"{ 'is-invalid': isSubmitted && leavetypeControl.leave_type.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"leave_type\\\" id=\\\"leave_type\\\" placeholder=\\\"{{'leave_types.create.placeholders.placeholder1' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div *ngIf=\\\"isSubmitted && leavetypeControl.leave_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"leavetypeControl.leave_type.errors.required\\\">{{'leave_types.create.error_messages.message1' | translate}}</div>\\r\\n                                                    <div *ngIf=\\\"leavetypeControl.leave_type.errors.maxlength\\\">{{'leave_types.create.error_messages.message2' | translate}}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-12\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"no_of_leaves\\\">{{'leave_types.create.fields.no_of_leaves' | translate}}\\r\\n                                                    <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                                                <input [ngClass]=\\\"{ 'is-invalid': isSubmitted && leavetypeControl.no_of_leaves.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"no_of_leaves\\\" id=\\\"no_of_leaves\\\" placeholder=\\\"{{'leave_types.create.placeholders.placeholder2' | translate }}\\\" type=\\\"text\\\"/>\\r\\n                                                <div *ngIf=\\\"isSubmitted && leavetypeControl.no_of_leaves.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                    <div *ngIf=\\\"leavetypeControl.no_of_leaves.errors.required\\\">{{'leave_types.create.error_messages.message3' | translate}}</div>\\r\\n                                                    <div *ngIf=\\\"leavetypeControl.no_of_leaves.errors.pattern\\\">{{'leave_types.create.error_messages.message4' | translate}}</div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-12\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"color\\\">{{'leave_types.create.fields.color' | translate}}\\r\\n                                                    <span class=\\\"text-danger\\\">&nbsp;*</span></label>\\r\\n                                                <div class=\\\"position-relative has-icon-left\\\">\\r\\n                                                    <input (colorPickerChange)=\\\"createLeaveTypeForm.get('color').setValue($event)\\\" [colorPicker]=\\\"createLeaveTypeForm.get('color').value\\\" [cpCancelButton]=\\\"true\\\" [ngClass]=\\\"{ 'is-invalid': isSubmitted && leavetypeControl.color.errors }\\\" [style.background]=\\\"createLeaveTypeForm.get('color').value\\\" [value]=\\\"createLeaveTypeForm.get('color').value\\\" class=\\\"form-control\\\" formControlName=\\\"color\\\" id=\\\"color\\\">\\r\\n                                                    <div class=\\\"form-control-position\\\"><i class=\\\"ft-droplet\\\"></i></div>\\r\\n                                                    <div *ngIf=\\\"isSubmitted && leavetypeControl.color.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                        <div *ngIf=\\\"leavetypeControl.color.errors.required\\\">{{'leave_types.create.error_messages.message5' | translate}}</div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-12\\\">\\r\\n                                            <div class=\\\"form-group text-center\\\">\\r\\n                                                <button class=\\\"btn btn-submit mb-0\\\" type=\\\"submit\\\">{{'common.create' | translate}}</button>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-9\\\">\\r\\n                                <div class=\\\"table-responsive-xs table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\\\">\\r\\n                                    <table class=\\\"table table-bordered table-hover b4-datatable\\\" width=\\\"100%\\\">\\r\\n                                        <thead>\\r\\n                                        <tr>\\r\\n                                            <th>#</th>\\r\\n                                            <th>{{'leave_types.columns.leave_type' | translate}}</th>\\r\\n                                            <th>{{'leave_types.columns.no_of_leaves' | translate}}</th>\\r\\n                                            <th>{{'leave_types.columns.color' | translate}}</th>\\r\\n                                            <th class=\\\"text-center\\\">{{'common.actions' | translate}}</th>\\r\\n                                        </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                        <tr *ngFor=\\\"let leave of leaveTypes; index as i\\\">\\r\\n                                            <td>{{ i + 1 }}</td>\\r\\n                                            <td>\\r\\n                                                <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'leavetypes_edit'] else elseBlock1;\\\">\\r\\n                                                    <inline-edit-input (updateValue)=\\\"saveLeaveTypeDetail(i, 'leave_type', $event);\\\" [elementFor]=\\\"'leave_types.inline_edit.leave_type' | translate\\\" [fieldValue]=\\\"leave.leave_type\\\" [isRequired]=\\\"'true'\\\" [maxLength]=\\\"50\\\" [name]=\\\"'leave_type'\\\" [type]=\\\"'text'\\\"></inline-edit-input>\\r\\n                                                </ng-container>\\r\\n                                                <ng-template #elseBlock1>{{leave.leave_type}}</ng-template>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <ng-container *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'leavetypes_edit'] else elseBlock2;\\\">\\r\\n                                                    <inline-edit-input (updateValue)=\\\"saveLeaveTypeDetail(i, 'no_of_leaves', $event);\\\" [elementFor]=\\\"'leave_types.inline_edit.no_of_leaves' | translate\\\" [fieldValue]=\\\"leave.no_of_leaves\\\" [isRequired]=\\\"'true'\\\" [maxLength]=\\\"50\\\" [name]=\\\"'no_of_leaves'\\\" [type]=\\\"'text'\\\" pattern=\\\"^-?(0|[1-9]\\\\d*)?$\\\"></inline-edit-input>\\r\\n                                                </ng-container>\\r\\n                                                <ng-template #elseBlock2>{{leave.no_of_leaves}}</ng-template>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <div [ngStyle]=\\\"{'background-color': leave.color}\\\" class=\\\"width-30 height-30\\\"></div>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"actions-dropdown\\\">\\r\\n                                                <div class=\\\"btn-group\\\" dropdown>\\r\\n                                                    <button aria-controls=\\\"dropdown-basic-1\\\" class=\\\"dropdown-toggle btn-action\\\" dropdownToggle id=\\\"button-basic-1\\\" type=\\\"button\\\">\\r\\n                                                        <i class=\\\"fa fa-ellipsis-v\\\"></i></button>\\r\\n                                                    <ul *dropdownMenu aria-labelledby=\\\"button-basic-1\\\" class=\\\"dropdown-menu animated fadeIn\\\" id=\\\"dropdown-basic-1\\\" role=\\\"menu\\\">\\r\\n                                                        <li role=\\\"menuitem\\\">\\r\\n                                                            <a (click)=\\\"deleteLeaveType(leave.id)\\\" *ngxPermissionsOnly=\\\"['admin', 'super_admin', 'leavetypes_delete']\\\" class=\\\"dropdown-item btn btn-delete btn-raised\\\"><i class=\\\"fa fa-trash-o\\\" tooltip=\\\"{{'common.delete' | translate}}\\\"></i></a>\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        </tbody>\\r\\n                                        <tfoot *ngIf=\\\"leaveTypes?.length == 0\\\" class=\\\"tfoot_dt\\\">\\r\\n                                        <tr>\\r\\n                                            <td class=\\\"text-center\\\" colspan=\\\"4\\\">\\r\\n                                                <img src=\\\"assets/img/norecord-img.png\\\" width=\\\"50\\\">\\r\\n                                                <p class=\\\"mt-1\\\">{{'common.datatable.sEmptyTable' | translate}}</p>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        </tfoot>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {Leavetype} from '../../shared/models/leavetype.model';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class LeavetypeService {\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<Leavetype[]>(`${this.apiUrl}/api/leave-type`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(`${this.apiUrl}/api/leave-type/${id}`);\r\n    }\r\n\r\n    create(leavetype: Leavetype) {\r\n        return this.http.post(`${this.apiUrl}/api/leave-type`, leavetype);\r\n    }\r\n\r\n    update(leavetype: Leavetype) {\r\n        return this.http.put(`${this.apiUrl}/api/leave-type/${leavetype.id}`, leavetype);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${this.apiUrl}/api/leave-type/${id}`);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NgxPermissionsGuard} from 'ngx-permissions';\r\n\r\nimport {LeaveTypesListComponent} from './pages/leave-types-list/leave-types-list.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: '',\r\n                canActivate: [NgxPermissionsGuard],\r\n                component: LeaveTypesListComponent\r\n            }\r\n        ]\r\n    }];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class LeaveTypesRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BsDropdownModule, TooltipModule} from 'ngx-bootstrap';\r\nimport {ColorPickerModule} from 'ngx-color-picker';\r\nimport {NgxPermissionsModule} from 'ngx-permissions';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\n\r\nimport {LeaveTypesRoutingModule} from './leave-types-routing.module';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\n\r\nimport {LeaveTypesListComponent} from './pages/leave-types-list/leave-types-list.component';\r\n\r\n@NgModule({\r\n    declarations: [LeaveTypesListComponent],\r\n    imports: [\r\n        CommonModule,\r\n        LeaveTypesRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgxPermissionsModule,\r\n        ColorPickerModule,\r\n        TooltipModule.forRoot(),\r\n        BsDropdownModule.forRoot(),\r\n        TranslateModule.forChild({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (HttpLoaderFactory),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        SharedModule\r\n    ],\r\n    exports: [\r\n        LeaveTypesListComponent\r\n    ]\r\n})\r\n\r\nexport class LeaveTypesModule {\r\n}\r\n\r\n// Required for AOT compilation\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaHJtL2xlYXZlLXR5cGVzL3BhZ2VzL2xlYXZlLXR5cGVzLWxpc3QvbGVhdmUtdHlwZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {NgxRolesService} from 'ngx-permissions';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {LeavetypeService} from '../../../../../core/services/leavetype.service';\r\nimport {AuthenticationService} from '../../../../../core/services/authentication.service';\r\n\r\n@Component({\r\n    selector: 'app-leave-types-list',\r\n    templateUrl: './leave-types-list.component.html',\r\n    styleUrls: ['./leave-types-list.component.scss']\r\n})\r\n\r\nexport class LeaveTypesListComponent implements OnInit {\r\n    createLeaveTypeForm: FormGroup;\r\n    leaveTypes = [];\r\n    isSubmitted = false;\r\n\r\n    constructor(\r\n        public translate: TranslateService,\r\n        public ngxRolesService: NgxRolesService,\r\n        private http: HttpClient,\r\n        private toastr: ToastrService,\r\n        private formBuilder: FormBuilder,\r\n        private authenticationService: AuthenticationService,\r\n        private leavetypeService: LeavetypeService\r\n    ) {\r\n    }\r\n\r\n    get leavetypeControl() {\r\n        return this.createLeaveTypeForm.controls;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getLeaveTypes();\r\n        this.loadForms();\r\n    }\r\n\r\n    loadForms() {\r\n        this.createLeaveTypeForm = this.formBuilder.group({\r\n            leave_type: [null, [Validators.required, Validators.maxLength(20)]],\r\n            no_of_leaves: [null, [Validators.required, Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\r\n            color: ['#1ab394', [Validators.required]]\r\n        });\r\n    }\r\n\r\n    getLeaveTypes() {\r\n        this.leavetypeService.getAll()\r\n            .subscribe(\r\n                data => {\r\n                    this.leaveTypes = data;\r\n                });\r\n    }\r\n\r\n    saveLeaveTypeDetail(index, name, value) {\r\n        this.leaveTypes[index][name] = value;\r\n        this.leavetypeService.update(this.leaveTypes[index])\r\n            .subscribe(\r\n                data => {\r\n                    this.toastr.success(this.translate.instant('leave_types.messages.update'), this.translate.instant('leave_types.title'));\r\n                    this.getLeaveTypes();\r\n                });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isSubmitted = true;\r\n        if (this.createLeaveTypeForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.leavetypeService.create(this.createLeaveTypeForm.value).subscribe(data => {\r\n            this.toastr.success(this.translate.instant('leave_types.messages.create'), this.translate.instant('leave_types.title'));\r\n            this.getLeaveTypes();\r\n            this.isSubmitted = false;\r\n            this.createLeaveTypeForm.reset();\r\n        });\r\n    }\r\n\r\n    deleteLeaveType(id) {\r\n        Swal.fire({\r\n            title: this.translate.instant('common.swal.title'),\r\n            text: this.translate.instant('common.swal.text') + this.translate.instant('leave_types.title1'),\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: this.translate.instant('common.swal.confirmButtonText'),\r\n            cancelButtonText: this.translate.instant('common.swal.cancelButtonText')\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.leavetypeService.delete(id)\r\n                    .subscribe(\r\n                        data => {\r\n                            this.toastr.success(this.translate.instant('leave_types.messages.delete'), this.translate.instant('leave_types.title'));\r\n                            this.getLeaveTypes();\r\n                        });\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}